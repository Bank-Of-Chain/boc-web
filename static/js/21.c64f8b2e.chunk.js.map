{"version":3,"sources":["../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/chart/helper/pieHelper.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/visual/LegendVisualProvider.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/helper/createSeriesDataSimply.js","../node_modules/echarts/lib/chart/pie/install.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/processor/negativeDataFilter.js"],"names":["PI2","Math","PI","RADIAN","getViewRect","seriesModel","api","layout","getBoxLayoutParams","width","getWidth","height","getHeight","getBasicPieLayout","viewRect","center","get","radius","zrUtil","cx","cy","parsePercent","size","min","r0","r","coordSys","coordinateSystem","point","dataToPoint","x","y","pieLayout","seriesType","ecModel","eachSeriesByType","data","getData","valueDim","mapDimension","_a","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","setLayout","idx","angle","setItemLayout","NaN","endAngle","linearMap","angle_1","layout_1","getItemLayout","layout_2","adjustSingleSide","list","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","len","i","position","labelAlignTo","dx","label","linePoints","shiftLayoutOnY","items","topSemi","maxY","bottomSemi","item","semi","dy","abs","len2","rA","rB","sqrt","push","recalculateXOnSemiToAlignOnEllipseCurve","recalculateX","rB2","rA2","newX","deltaX","constrainTextWidth","targetTextWidth","availableWidth","forceRecalculate","labelStyleWidth","style","textRect","rect","bgColor","backgroundColor","padding","paddingH","overflow","oldOuterWidth","oldHeight","match","setStyle","innerRect","getBoundingRect","ceil","availableInnerWidth","newWidth","unconstrainedWidth","newRect","margin","isPositionCenter","sectorShape","pieLabelLayout","labelLayoutList","hasLabelRotate","minShowLabelRadian","getLayout","setNotShow","el","ignore","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","labelDistance","edgeDistance","bleedMargin","labelLineModel","labelLineLen","labelLineLen2","states","key","isLabelShown","textX","textY","textAlign","midAngle","nx","cos","ny","sin","isLabelInside","x1","y1","x2","y2","x3","labelRotate","rotate","isNumber","rad","atan2","rotation","verticalAlign","align","selectState","select","clone","applyTransform","getComputedTransform","minTurnAngle","maxSurfaceAngle","surfaceNormal","Point","setTextConfig","inside","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","max","isAlignToEdge","extraPaddingH","realTextWidth","dist","avoidOverlap","notShowLabel","limitTurnAngle","limitSurfaceAngle","setShape","points","__hostTarget","textGuideLineConfig","anchor","getSectorCornerRadius","model","zeroIfNull","cornerRadius","isArray","dr","map","cr","PiePiece","_super","_this","call","this","z2","text","graphic","setTextContent","updateData","__extends","prototype","firstCreate","hostModel","emphasisModel","extend","animationType","getShallow","ssr","scaleX","scaleY","dataIndex","isFrom","originX","originY","saveOldStyle","useStyle","getItemVisual","setStatesStylesFromModel","offset","cursorStyle","attr","_updateLabel","ensureState","labelText","toggleHoverEmphasis","visualColor","fill","visualOpacity","opacity","setLabelStyle","getLabelStatesModels","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","removeTextGuideLine","polyline","setTextGuideLine","setLabelLineStyle","getLabelLineStatesModels","stroke","retrieve3","PieView","apply","arguments","ignoreLabelLineUpdate","render","payload","oldData","_data","group","count","s","_emptyCircleSector","remove","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","off","execute","labelLayout","dispose","containPoint","itemLayout","type","ChartView","LegendVisualProvider","getDataWithEncodedVisual","getRawData","_getDataWithEncodedVisual","_getRawData","getAllNames","rawData","mapArray","containName","name","indexOfName","PieSeriesModel","init","option","legendVisualProvider","_defaultLabelLine","mergeOption","getInitialData","opt","nameList","coordDimensions","encodeDefine","getEncode","source","getSource","dimensions","prepareSeriesDataSchema","SeriesData","initData","createSeriesDataSimply","encodeDefaulter","makeSeriesEncodeForNameBased","valueList","seats","getPercentSeats","getDataParams","params","percent","$vars","modelUtil","labelLineNormalOpt","labelLineEmphasisOpt","emphasis","show","defaultOption","z","legendHoverLink","colorBy","minShowLabelAngle","selectedOffset","percentPrecision","left","top","right","bottom","alignTo","distanceToLabelLine","length2","smooth","lineStyle","itemStyle","borderWidth","borderJoin","showEmptyCircle","emptyCircleStyle","color","hideOverlap","scale","scaleSize","avoidLabelOverlap","animationDuration","animationTypeUpdate","animationEasingUpdate","animationDurationUpdate","animationEasing","SeriesModel","install","registers","registerChartView","registerSeriesModel","createLegacyDataSelectAction","registerAction","registerLayout","curry","registerProcessor","reset","legendModels","findComponents","mainType","filterSelf","isSelected","curValue","negativeDataFilter"],"mappings":"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","file":"static/js/21.c64f8b2e.chunk.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parsePercent, linearMap } from '../../util/number.js';\nimport * as layout from '../../util/layout.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nexport function getBasicPieLayout(seriesModel, api) {\n  var viewRect = getViewRect(seriesModel, api);\n  var center = seriesModel.get('center');\n  var radius = seriesModel.get('radius');\n\n  if (!zrUtil.isArray(radius)) {\n    radius = [0, radius];\n  }\n\n  if (!zrUtil.isArray(center)) {\n    center = [center, center];\n  }\n\n  var width = parsePercent(viewRect.width, api.getWidth());\n  var height = parsePercent(viewRect.height, api.getHeight());\n  var size = Math.min(width, height);\n  var r0 = parsePercent(radius[0], size / 2);\n  var r = parsePercent(radius[1], size / 2);\n  var cx;\n  var cy;\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys) {\n    // percentage is not allowed when coordinate system is specified\n    var point = coordSys.dataToPoint(center);\n    cx = point[0] || 0;\n    cy = point[1] || 0;\n  } else {\n    cx = parsePercent(center[0], width) + viewRect.x;\n    cy = parsePercent(center[1], height) + viewRect.y;\n  }\n\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r\n  };\n}\nexport default function pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n\n    var _a = getBasicPieLayout(seriesModel, api),\n        cx = _a.cx,\n        cy = _a.cy,\n        r = _a.r,\n        r0 = _a.r0;\n\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nimport { parsePercent } from '../../util/number.js';\nimport { Point } from '../../util/graphic.js';\nimport { each, isNumber } from 'zrender/lib/core/util.js';\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper.js';\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper.js';\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\n\n      var rA = r + item.len;\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\n\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      var newX = cx + (dx + item.len2) * dir;\n      var deltaX = newX - item.label.x;\n      var newTargetWidth = item.targetTextWidth - deltaX * dir; // text x is changed, so need to recalculate width.\n\n      constrainTextWidth(item, newTargetWidth, true);\n      item.label.x = newX;\n    }\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\n\n\n  function recalculateX(items) {\n    // Extremes of\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy >= semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\n\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\n\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      if (layout.labelStyleWidth != null) {\n        continue;\n      }\n\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var targetTextWidth = void 0;\n\n      if (layout.labelAlignTo === 'edge') {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else if (layout.labelAlignTo === 'labelLine') {\n        if (label.x < cx) {\n          targetTextWidth = leftmostX - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - rightmostX - layout.bleedMargin;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      layout.targetTextWidth = targetTextWidth;\n      constrainTextWidth(layout, targetTextWidth);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (!isPositionCenter(layout) && layout.linePoints) {\n      var label = layout.label;\n      var linePoints = layout.linePoints;\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var padding = label.style.padding;\n      var paddingH = padding ? padding[1] + padding[3] : 0; // textRect.width already contains paddingH if bgColor is set\n\n      var extraPaddingH = label.style.backgroundColor ? 0 : paddingH;\n      var realTextWidth = layout.rect.width + extraPaddingH;\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n/**\n * Set max width of each label, and then wrap each label to the max width.\n *\n * @param layout label layout\n * @param availableWidth max width for the label to display\n * @param forceRecalculate recaculate the text layout even if the current width\n * is smaller than `availableWidth`. This is useful when the text was previously\n * wrapped by calling `constrainTextWidth` but now `availableWidth` changed, in\n * which case, previous wrapping should be redo.\n */\n\n\nfunction constrainTextWidth(layout, availableWidth, forceRecalculate) {\n  if (forceRecalculate === void 0) {\n    forceRecalculate = false;\n  }\n\n  if (layout.labelStyleWidth != null) {\n    // User-defined style.width has the highest priority.\n    return;\n  }\n\n  var label = layout.label;\n  var style = label.style;\n  var textRect = layout.rect;\n  var bgColor = style.backgroundColor;\n  var padding = style.padding;\n  var paddingH = padding ? padding[1] + padding[3] : 0;\n  var overflow = style.overflow; // textRect.width already contains paddingH if bgColor is set\n\n  var oldOuterWidth = textRect.width + (bgColor ? 0 : paddingH);\n\n  if (availableWidth < oldOuterWidth || forceRecalculate) {\n    var oldHeight = textRect.height;\n\n    if (overflow && overflow.match('break')) {\n      // Temporarily set background to be null to calculate\n      // the bounding box without backgroud.\n      label.setStyle('backgroundColor', null); // Set constraining width\n\n      label.setStyle('width', availableWidth - paddingH); // This is the real bounding box of the text without padding\n\n      var innerRect = label.getBoundingRect();\n      label.setStyle('width', Math.ceil(innerRect.width));\n      label.setStyle('backgroundColor', bgColor);\n    } else {\n      var availableInnerWidth = availableWidth - paddingH;\n      var newWidth = availableWidth < oldOuterWidth // Current text is too wide, use `availableWidth` as max width.\n      ? availableInnerWidth : // Current available width is enough, but the text may have\n      // already been wrapped with a smaller available width.\n      forceRecalculate ? availableInnerWidth > layout.unconstrainedWidth // Current available is larger than text width,\n      // so don't constrain width (otherwise it may have\n      // empty space in the background).\n      ? null // Current available is smaller than text width, so\n      // use the current available width as constraining\n      // width.\n      : availableInnerWidth : // Current available width is enough, so no need to\n      // constrain.\n      null;\n      label.setStyle('width', newWidth);\n    }\n\n    var newRect = label.getBoundingRect();\n    textRect.width = newRect.width;\n    var margin = (label.style.margin || 0) + 2.1;\n    textRect.height = newRect.height + margin;\n    textRect.y -= (textRect.height - oldHeight) / 2;\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  // Not change x for center label\n  return sectorShape.position === 'center';\n}\n\nexport default function pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      each(label.states, setNotShow);\n      each(labelLine.states, setNotShow);\n      label.ignore = labelLine.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var PI = Math.PI;\n    var labelRotate = 0;\n    var rotate = labelModel.get('rotate');\n\n    if (isNumber(rotate)) {\n      labelRotate = rotate * (PI / 180);\n    } else if (labelPosition === 'center') {\n      labelRotate = 0;\n    } else if (rotate === 'radial' || rotate === true) {\n      var radialAngle = nx < 0 ? -midAngle + PI : -midAngle;\n      labelRotate = radialAngle;\n    } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\n      var rad = Math.atan2(nx, ny);\n\n      if (rad < 0) {\n        rad = PI * 2 + rad;\n      }\n\n      var isDown = ny > 0;\n\n      if (isDown) {\n        rad = PI + rad;\n      }\n\n      labelRotate = rad - PI;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    }); // Not sectorShape the inside label\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\n\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect,\n        unconstrainedWidth: textRect.width,\n        labelStyleWidth: label.style.width\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        limitTurnAngle(linePoints, layout.minTurnAngle);\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        }); // Set the anchor to the midpoint of sector\n\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isArray, map } from 'zrender/lib/core/util.js';\nimport { parsePercent } from 'zrender/lib/contain/text.js';\nexport function getSectorCornerRadius(model, shape, zeroIfNull) {\n  var cornerRadius = model.get('borderRadius');\n\n  if (cornerRadius == null) {\n    return zeroIfNull ? {\n      cornerRadius: 0\n    } : null;\n  }\n\n  if (!isArray(cornerRadius)) {\n    cornerRadius = [cornerRadius, cornerRadius, cornerRadius, cornerRadius];\n  }\n\n  var dr = Math.abs(shape.r || 0 - shape.r0 || 0);\n  return {\n    cornerRadius: map(cornerRadius, function (cr) {\n      return parsePercent(cr, dr);\n    })\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/pieHelper.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * LegendVisualProvider is an bridge that pick encoded color from data and\n * provide to the legend component.\n */\nvar LegendVisualProvider =\n/** @class */\nfunction () {\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\n  getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n\n  return LegendVisualProvider;\n}();\n\nexport default LegendVisualProvider;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\nimport { getPercentSeats } from '../../util/number.js';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper.js';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider.js';\nimport SeriesModel from '../../model/Series.js';\n\nvar PieSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(PieSeriesModel, _super);\n\n  function PieSeriesModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n\n    this._defaultLabelLine(option);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.mergeOption = function () {\n    _super.prototype.mergeOption.apply(this, arguments);\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getInitialData = function () {\n    var data = createSeriesDataSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    this.seats = getPercentSeats(valueList, data.hostModel.get('percentPrecision'));\n    return data;\n  };\n  /**\n   * @overwrite\n   */\n\n\n  PieSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.call(this, dataIndex);\n\n    params.percent = this.seats[dataIndex];\n    params.$vars.push('percent');\n    return params;\n  };\n\n  PieSeriesModel.prototype._defaultLabelLine = function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  };\n\n  PieSeriesModel.type = 'series.pie';\n  PieSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    colorBy: 'data',\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // If the angle of a sector less than `minShowLabelAngle`,\n    // the label will not be displayed.\n    minShowLabelAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: null,\n    height: null,\n    label: {\n      // color: 'inherit',\n      // If rotate around circle\n      rotate: 0,\n      show: true,\n      overflow: 'truncate',\n      // 'outer', 'inside', 'center'\n      position: 'outer',\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\n      alignTo: 'none',\n      // Closest distance between label and chart edge.\n      // Works only position is 'outer' and alignTo is 'edge'.\n      edgeDistance: '25%',\n      // Works only position is 'outer' and alignTo is not 'edge'.\n      bleedMargin: 10,\n      // Distance between text and label line.\n      distanceToLabelLine: 5 // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      minTurnAngle: 90,\n      maxSurfaceAngle: 90,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderJoin: 'round'\n    },\n    showEmptyCircle: true,\n    emptyCircleStyle: {\n      color: 'lightgray',\n      opacity: 1\n    },\n    labelLayout: {\n      // Hide the overlapped label.\n      hideOverlap: true\n    },\n    emphasis: {\n      scale: true,\n      scaleSize: 5\n    },\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // Animation type. Valid values: expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    // Animation type when update. Valid values: transition, expansion\n    animationTypeUpdate: 'transition',\n    animationEasingUpdate: 'cubicInOut',\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicInOut'\n  };\n  return PieSeriesModel;\n}(SeriesModel);\n\nexport default PieSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport { extend, isArray } from 'zrender/lib/core/util.js';\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n */\n\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({\n    encodeDefine: seriesModel.getEncode()\n  }, opt);\n  var source = seriesModel.getSource();\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\n  var list = new SeriesData(dimensions, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction.js';\nimport pieLayout from '../pie/pieLayout.js';\nimport dataFilter from '../../processor/dataFilter.js';\nimport { curry } from 'zrender/lib/core/util.js';\nimport PieView from './PieView.js';\nimport PieSeriesModel from './PieSeries.js';\nimport negativeDataFilter from '../../processor/negativeDataFilter.js';\nexport function install(registers) {\n  registers.registerChartView(PieView);\n  registers.registerSeriesModel(PieSeriesModel);\n  createLegacyDataSelectAction('pie', registers.registerAction);\n  registers.registerLayout(curry(pieLayout, 'pie'));\n  registers.registerProcessor(dataFilter('pie'));\n  registers.registerProcessor(negativeDataFilter('pie'));\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function dataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          // @ts-ignore FIXME: LegendModel\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isNumber } from 'zrender/lib/core/util.js';\nexport default function negativeDataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        // handle negative value condition\n        var valueDim = data.mapDimension('value');\n        var curValue = data.get(valueDim, idx);\n\n        if (isNumber(curValue) && !isNaN(curValue) && curValue < 0) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  };\n}"],"sourceRoot":""}