{"version":3,"sources":["pages/Ethr/Deposit/style.js","pages/Ethr/Deposit/index.jsx","pages/Ethr/Withdraw/style.js","pages/Ethr/Withdraw/index.jsx","pages/Ethr/style.js","pages/Ethr/index.jsx"],"names":["componentsStyle","modal","display","alignItems","justifyContent","modalBody","textAlign","depositContainer","border","padding","borderTopLeftRadius","borderTopRightRadius","estimateContainer","marginTop","borderBottomLeftRadius","borderBottomRightRadius","estimateWrapper","fontSize","estimateText","color","margin","estimateBalanceNum","balance","footerContainer","tokenInputWrapper","marginBottom","inputLabelWrapper","input","maxWidth","tokenInfo","tokenName","tokenLogo","width","borderRadius","marginRight","depositModal","backgroundColor","setting","position","right","top","cursor","min","i","Contract","ethers","BigNumber","useStyles","makeStyles","styles","Deposit","address","estimatedTotalAssets","userProvider","VAULT_ABI","VAULT_ADDRESS","isBalanceLoading","minInvestment","wantTokenBalance","wantTokenDecimals","wantTokenSymbol","wantTokenForVault","manageFeeBps","onDepositSuccess","classes","dispatch","useDispatch","useState","value","setValue","isLoading","setIsLoading","deposit","amount","from","BN","times","pow","toFixed","totalInvest","add","lt","warmDialog","open","type","message","mul","signer","getSigner","tokenContract","IERC20_ABI","tokenContractWithUser","connect","allowance","allowanceAmount","gt","increaseAllowance","sub","then","tx","wait","catch","e","console","table","code","Promise","reject","approve","vaultContract","vaultContractWithUser","extendObj","isNumber","MULTIPLE_OF_GAS","estimateGas","lend","gas","gasLimit","Math","ceil","maxGasLimit","MAX_GAS_LIMIT","log","isLogin","isEmpty","isValid","decimals","replace","isNaN","Number","nextValue","nextFromValue","multipliedBy","toString","lte","indexOf","isValidValue","bps","GridContainer","root","className","GridItem","xs","sm","md","lg","alt","src","CustomTextField","onChange","event","target","placeholder","maxEndAdornment","onMaxClick","maxValue","formatBalance","showAll","error","isUndefined","title","loading","Button","disabled","onClick","style","Tooltip","tooltip","placement","marginLeft","Modal","aria-labelledby","aria-describedby","Paper","elevation","CircularProgress","withdrawContainer","outputContainer","height","widthdrawLoadingPaper","steps","Withdraw","onWithdrawSuccess","toValue","setToValue","isWithdrawLoading","setIsWithdrawLoading","currentStep","setCurrentStep","withdrawError","setWithdrawError","withdraw","isValidToValue","vaultContractWithSigner","withdrawAmount","redeem","events","args","length","_redeemAmount","errorMsg","errorTextOutput","tip","isEs","isAd","isRp","isMaxLoss","isLossMuch","isExchangeFail","setTimeout","nextToValue","isValidToValueFlag","alternativeLabel","activeStep","connector","map","index","Step","key","StepIconComponent","BocStepIcon","verticalAlign","theme","container","zIndex","center","breakpoints","down","wrapper","background","wrapperMobile","symbol","gradientText","footer","item","minWidth","centerItem","balanceCard","check","balanceCardValue","lineHeight","fontWeight","balanceCardLabel","addTokenIcon","scanToken","hidden","brand","subtitle","main","mainRaised","link","textDecoration","textCenter","switchBar","img","radioUnchecked","radioChecked","radioRoot","radio","investCard","overflow","tableCell","letterSpacing","switchBase","switchChecked","minHeight","boxShadow","outline","stepContainer","stepItem","tabsRoot","tabsIndicator","tabTextColor","tabRoot","detailWrapper","slider","left","text","spliter","bottom","transition","tokens","WETH_ADDRESS_MATIC","useVersionWapper","props","isLayoutSm","useMediaQuery","VAULT_FACTORY_ADDRESS","VAULT_FACTORY_ABI","UNISWAPV3_RISK_ON_VAULT","UNISWAPV3_RISK_ON_HELPER","setIsBalanceLoading","personalVaultAddress","setPersonalVaultAddress","setWantTokenForVault","setWantTokenBalance","setWantTokenDecimals","setWantTokenSymbol","myVaultVisible","setMyVaultVisible","current","useSelector","state","investReducer","currentTab","setCurrent","tab","loadData","setCurrentTab","useVaultOnRisk","baseInfo","queryBaseInfo","useCallback","wantTokenContract","all","balanceOf","finally","useEffect","setInterval","MyVaultPage","vaultChangeHandle","token","spacing","paddingLeft","List","ListItem","button","classNames","INVEST_TAB","account","ListItemIcon","ListItemText","primary","reloadBalance","paddingTop","MyStatementForRiskOn"],"mappings":"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","file":"static/js/19.80d31aae.chunk.js","sourcesContent":["const componentsStyle = () => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  depositContainer: {\n    border: '1px solid #A68EFD',\n    padding: '2.6875rem 2.25rem',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  estimateContainer: {\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n    padding: '2.0625rem 2.6875rem'\n  },\n  estimateWrapper: {\n    display: 'flex',\n    marginTop: '1rem',\n    justifyContent: 'space-between',\n    fontSize: '1.625rem'\n  },\n  estimateText: {\n    color: '#A0A0A0',\n    margin: 0\n  },\n  estimateBalanceNum: {\n    color: '#A0A0A0'\n  },\n  balance: {\n    display: 'flex',\n    color: '#A0A0A0',\n    marginTop: '1rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  tokenInputWrapper: {\n    marginBottom: '16px'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  depositModal: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  min: {\n    marginTop: '1rem',\n    color: '#A0A0A0',\n    fontSize: '0.875rem'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Loading from '@/components/LoadingComponent'\n\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport CustomTextField from '@/components/CustomTextField'\nimport Button from '@/components/CustomButtons/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { formatBalance } from '@/helpers/number-format'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT, IERC20_ABI } from '@/constants'\n\n// === Styles === //\nimport styles from './style'\n\nconst { Contract, BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nexport default function Deposit({\n  address,\n  estimatedTotalAssets,\n  userProvider,\n  VAULT_ABI,\n  VAULT_ADDRESS,\n  isBalanceLoading,\n  minInvestment,\n  wantTokenBalance,\n  wantTokenDecimals,\n  wantTokenSymbol,\n  wantTokenForVault,\n  manageFeeBps,\n  onDepositSuccess\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  /**\n   * check if value is valid\n   * @returns\n   */\n  function isValidValue() {\n    const balance = wantTokenBalance\n    const decimals = wantTokenDecimals\n    if (value === '' || value === '-' || value === '0' || isEmpty(value.replace(/ /g, ''))) return\n    // not a number\n    if (isNaN(Number(value))) return false\n    const nextValue = BN(value)\n    const nextFromValue = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    // less than 0\n    if (nextFromValue.lte(0)) return false\n    // value should be integer\n    const nextFromValueString = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    if (nextFromValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (balance.lt(BigNumber.from(nextFromValue.toFixed()))) return false\n\n    return true\n  }\n\n  const handleInputChange = event => {\n    setValue(event.target.value)\n  }\n\n  const handleMaxClick = () => {\n    const maxValue = wantTokenBalance\n    setValue(\n      formatBalance(maxValue.gt(0) ? maxValue : 0, wantTokenDecimals, {\n        showAll: true\n      })\n    )\n  }\n\n  const deposit = async () => {\n    const amount = BigNumber.from(BN(value).times(BN(10).pow(wantTokenDecimals)).toFixed())\n    const totalInvest = amount.add(estimatedTotalAssets)\n    const lessThanMin = totalInvest.lt(minInvestment)\n    if (lessThanMin) {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Less than minimum investment'\n        })\n      )\n      return\n    }\n    setIsLoading(true)\n    try {\n      const amount = BigNumber.from(value).mul(BigNumber.from(10).pow(wantTokenDecimals))\n      const signer = userProvider.getSigner()\n      const tokenContract = new Contract(wantTokenForVault, IERC20_ABI, userProvider)\n      const tokenContractWithUser = tokenContract.connect(signer)\n      const allowanceAmount = await tokenContractWithUser.allowance(address, VAULT_ADDRESS)\n      // If deposit amount greater than allow amount, need approve\n      if (amount.gt(allowanceAmount)) {\n        // If allowance gt 0, increaseAllowance, otherwise approve nextAmount\n        if (allowanceAmount.gt(0)) {\n          await tokenContractWithUser\n            .increaseAllowance(VAULT_ADDRESS, amount.sub(allowanceAmount))\n            .then(tx => tx.wait())\n            .catch(async e => {\n              console.table(e)\n              // cancel by user\n              if (e.code === 4001 || e.code === 'ACTION_REJECTED') {\n                return Promise.reject(e)\n              }\n              // If increase failed, approve 0 and approve nextAmounts\n              await tokenContractWithUser.approve(VAULT_ADDRESS, 0)\n              await tokenContractWithUser.approve(VAULT_ADDRESS, amount).then(tx => tx.wait())\n            })\n        } else {\n          await tokenContractWithUser.approve(VAULT_ADDRESS, amount)\n        }\n      }\n\n      const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const vaultContractWithUser = vaultContract.connect(signer)\n\n      const extendObj = {}\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithUser.estimateGas.lend(amount)\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        extendObj.gasLimit = maxGasLimit\n      }\n      await vaultContractWithUser.lend(amount, extendObj).then(tx => tx.wait())\n      setValue('')\n      setIsLoading(false)\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: 'Success'\n        })\n      )\n      onDepositSuccess()\n    } catch (error) {\n      console.log('error', error)\n      setIsLoading(false)\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: 'Deposit failed'\n        })\n      )\n    }\n  }\n\n  const isLogin = !isEmpty(userProvider)\n  const isValid = isValidValue()\n  const bps = manageFeeBps ? manageFeeBps.toString() / 10000 : 0\n\n  return (\n    <>\n      <GridContainer classes={{ root: classes.depositContainer }}>\n        <p className={classes.estimateText}>From</p>\n        <GridItem xs={12} sm={12} md={12} lg={12} className={classes.tokenInputWrapper}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <div className={classes.inputLabelWrapper}>\n                <div className={classes.tokenInfo}>\n                  <img className={classes.tokenLogo} alt=\"\" src={`./images/${wantTokenForVault}.png`} />\n                  <span className={classes.tokenName}>{wantTokenSymbol}</span>\n                </div>\n                <CustomTextField\n                  classes={{ root: classes.input }}\n                  value={value}\n                  onChange={handleInputChange}\n                  placeholder=\"deposit amount\"\n                  maxEndAdornment\n                  onMaxClick={handleMaxClick}\n                  error={!isUndefined(isValid) && !isValid}\n                />\n              </div>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <p\n                className={classes.estimateText}\n                title={formatBalance(wantTokenBalance, wantTokenDecimals, {\n                  showAll: true\n                })}\n              >\n                Balance:&nbsp;&nbsp;\n                <Loading loading={isBalanceLoading}>{formatBalance(wantTokenBalance, wantTokenDecimals)}</Loading>\n              </p>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n      <GridContainer className={classes.estimateContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateWrapper}>\n            <span>{wantTokenSymbol} VAULT</span>\n            <span className={classes.estimateBalanceNum}>{Number(value) * (1 - bps)}</span>\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p\n            className={classes.balance}\n            title={formatBalance(estimatedTotalAssets, wantTokenDecimals, {\n              showAll: true\n            })}\n          >\n            Balance:&nbsp;&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(estimatedTotalAssets, wantTokenDecimals)}</Loading>\n          </p>\n          <div className={classes.min}>Minimum Investment: {formatBalance(minInvestment, wantTokenDecimals)}</div>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button disabled={!isLogin || (isLogin && !isValid)} color=\"colorfull\" onClick={deposit} style={{ width: '100%' }}>\n              Deposit\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip\n                }}\n                placement=\"top\"\n                title={`${bps * 100}% manage fee of the principal.`}\n              >\n                <InfoIcon style={{ marginLeft: '0.5rem' }} />\n              </Tooltip>\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <div className={classes.modalBody}>\n            <CircularProgress color=\"inherit\" />\n            <div style={{ marginTop: '1rem' }}>On Deposit...</div>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","const componentsStyle = () => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  withdrawContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  outputContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem'\n  },\n  estimateText: {\n    height: '1.25rem',\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex',\n    marginTop: '0.5rem',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  widthdrawLoadingPaper: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem',\n    width: '100%'\n  },\n  estimateWrapper: {\n    display: 'flex',\n    marginTop: '1rem',\n    justifyContent: 'space-between',\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    color: '#A0A0A0'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  root: {\n    padding: '1.5rem 0'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Step from '@material-ui/core/Step'\nimport WarningIcon from '@material-ui/icons/Warning'\n\nimport CustomTextField from '@/components/CustomTextField'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Loading from '@/components/LoadingComponent'\n\n// === Hooks === //\nimport { warmDialog } from '@/reducers/meta-reducer'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport map from 'lodash/map'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport { formatBalance } from '@/helpers/number-format'\nimport { isAd, isEs, isRp, isMaxLoss, isLossMuch, isExchangeFail, errorTextOutput } from '@/helpers/error-handler'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\n\n// === Styles === //\nimport styles from './style'\n\nconst { Contract, BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = [{ title: 'Shares Validation' }, { title: 'Gas Estimates' }, { title: 'Withdraw' }]\n\nexport default function Withdraw({\n  userProvider,\n  VAULT_ADDRESS,\n  VAULT_ABI,\n  isBalanceLoading,\n  estimatedTotalAssets,\n  wantTokenDecimals,\n  wantTokenSymbol,\n  onWithdrawSuccess\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [toValue, setToValue] = useState('')\n  const [isWithdrawLoading, setIsWithdrawLoading] = useState(false)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [withdrawError, setWithdrawError] = useState({})\n\n  const withdraw = async () => {\n    setIsWithdrawLoading(true)\n    console.log('----------start withdraw----------')\n    if (!isValidToValue()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct value.'\n      })\n    }\n    setCurrentStep(1)\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    try {\n      const vaultContractWithSigner = vaultContract.connect(signer)\n      setCurrentStep(2)\n      let tx\n      const withdrawAmount = BigNumber.from(BN(toValue).times(BN(10).pow(wantTokenDecimals)).toFixed())\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithSigner.estimateGas.redeem(withdrawAmount, estimatedTotalAssets)\n        setCurrentStep(3)\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        tx = await vaultContractWithSigner.redeem(withdrawAmount, estimatedTotalAssets, {\n          gasLimit: maxGasLimit\n        })\n      } else {\n        tx = await vaultContractWithSigner.redeem(withdrawAmount, estimatedTotalAssets)\n      }\n\n      const { events } = await tx.wait()\n      console.log('events', events)\n      let args = []\n      for (let i = events.length - 1; i >= 0; i--) {\n        if (events[i].event === 'Redeem') {\n          args = events[i].args\n          break\n        }\n      }\n      console.log('args', args)\n      const { _redeemAmount } = args\n      console.log('_redeemAmount', _redeemAmount.toString())\n      setCurrentStep(4)\n      setToValue('')\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: `Withdraw ${formatBalance(_redeemAmount, wantTokenDecimals)} ${wantTokenSymbol}`\n        })\n      )\n      onWithdrawSuccess()\n    } catch (error) {\n      console.log('withdraw original error :', error)\n      const errorMsg = errorTextOutput(error)\n      let tip = ''\n      if (isEs(errorMsg)) {\n        tip = 'Vault has been shut down, please try again later!'\n      } else if (isAd(errorMsg)) {\n        tip = 'Vault is in adjustment status, please try again later!'\n      } else if (isRp(errorMsg)) {\n        tip = 'Vault is in rebase status, please try again later!'\n      } else if (isMaxLoss(errorMsg)) {\n        tip = 'Failed to withdraw, please increase the Max Loss!'\n      } else if (isLossMuch(errorMsg)) {\n        tip = 'Failed to exchange, please increase the exchange slippage!'\n      } else if (isExchangeFail(errorMsg)) {\n        tip = 'Failed to exchange, Please try again later!'\n      } else {\n        tip = 'Withdraw failed'\n      }\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: tip\n        })\n      )\n    }\n    setTimeout(() => {\n      setIsWithdrawLoading(false)\n      setWithdrawError({})\n      setCurrentStep(0)\n    }, 2000)\n  }\n\n  /**\n   * check if toValue is valid\n   * @returns\n   */\n  const isValidToValue = () => {\n    if (toValue === '' || toValue === '-' || isEmpty(toValue.replace(/ /g, ''))) return\n    // should be a number\n    if (isNaN(Number(toValue))) return false\n    const nextValue = BN(toValue)\n    const nextToValue = nextValue.multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString())\n    // should be positive\n    if (nextToValue.lte(0)) return false\n    // should be integer\n    const nextToValueString = nextValue.multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString())\n    if (nextToValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (estimatedTotalAssets.lt(BigNumber.from(nextToValue.toFixed()))) return false\n    return true\n  }\n\n  const handleAmountChange = event => {\n    try {\n      setToValue(event.target.value)\n    } catch (error) {\n      setToValue('')\n    }\n  }\n\n  const handleMaxClick = () => {\n    setToValue(formatBalance(estimatedTotalAssets, wantTokenDecimals, { showAll: true }))\n  }\n\n  const isValidToValueFlag = isValidToValue()\n\n  const isLogin = !isEmpty(userProvider)\n\n  return (\n    <>\n      <GridContainer className={classes.withdrawContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>From</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.inputLabelWrapper}>\n            <div className={classes.tokenInfo}>\n              <span className={classes.tokenName}>{wantTokenSymbol} VAULT</span>\n            </div>\n            <CustomTextField\n              classes={{ root: classes.input }}\n              value={toValue}\n              placeholder=\"withdraw amount\"\n              maxEndAdornment\n              onMaxClick={() => handleMaxClick()}\n              onChange={handleAmountChange}\n              error={!isUndefined(isValidToValueFlag) && !isValidToValueFlag && toValue !== '0'}\n            />\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText} title={formatBalance(estimatedTotalAssets, wantTokenDecimals, { showAll: true })}>\n            Balance:&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(estimatedTotalAssets, wantTokenDecimals)}</Loading>\n          </p>\n        </GridItem>\n      </GridContainer>\n      <GridContainer className={classes.outputContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateWrapper}>\n            <span>{wantTokenSymbol}</span>\n            <span className={classes.estimateBalanceNum}>{toValue}</span>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button\n              disabled={!isLogin || (isLogin && (isUndefined(isValidToValueFlag) || !isValidToValueFlag))}\n              color=\"colorfull\"\n              onClick={withdraw}\n              style={{ width: '100%', padding: '12px 16px' }}\n            >\n              Withdraw\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isWithdrawLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.widthdrawLoadingPaper}>\n          <div className={classes.modalBody}>\n            {isEmpty(withdrawError) && <CircularProgress color=\"inherit\" />}\n            {isEmpty(withdrawError) ? <p>In Withdrawing...</p> : <p>Withdraw Error !</p>}\n            <BocStepper\n              classes={{\n                root: classes.root\n              }}\n              alternativeLabel\n              activeStep={currentStep}\n              connector={<BocStepConnector />}\n            >\n              {map(steps, (i, index) => {\n                return (\n                  <Step key={index}>\n                    <BocStepLabel StepIconComponent={BocStepIcon}>{i.title}</BocStepLabel>\n                  </Step>\n                )\n              })}\n            </BocStepper>\n            {!isEmpty(withdrawError) && (\n              <p\n                style={{\n                  color: withdrawError.type === 'error' ? 'red' : 'yellow'\n                }}\n              >\n                <WarningIcon style={{ verticalAlign: 'bottom' }}></WarningIcon>\n                &nbsp;&nbsp;&nbsp;{withdrawError.message}\n              </p>\n            )}\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                setIsWithdrawLoading(false)\n                setWithdrawError({})\n                setCurrentStep(0)\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\nimport { gradientText } from '@/assets/jss/common.js'\n\nconst componentsStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: '1rem',\n    marginBottom: 100,\n    ...container\n  },\n  center: {\n    justifyContent: 'center',\n    padding: '50px 72px 50px',\n    backgroundColor: '#0c0735cc',\n    [theme.breakpoints.down('md')]: {\n      padding: '50px 16px 50px'\n    },\n    margin: 0\n  },\n  wrapper: {\n    padding: '5rem 3rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  wrapperMobile: {\n    padding: '3rem 2rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  deposit: {\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderTopLeftRadius: '1.25rem',\n    borderTopRightRadius: '1.25rem'\n  },\n  balance: {\n    marginTop: '0.5rem',\n    marginBottom: '2rem',\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderBottomLeftRadius: '1.25rem',\n    borderBottomRightRadius: '1.25rem'\n  },\n  symbol: {\n    color: '#A68EFD',\n    marginLeft: '1rem',\n    ...gradientText\n  },\n  footer: {},\n  item: {\n    color: '#fff',\n    marginBottom: 20,\n    '& .MuiListItemIcon-root': {\n      minWidth: '38px'\n    }\n  },\n  centerItem: {\n    width: '630px'\n  },\n  balanceCard: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: '0 0 1rem 0',\n    textAlign: 'left',\n    padding: '2.8125rem 2.4375rem',\n    background: '#323338',\n    color: '#fff',\n    borderRadius: '1.25rem'\n  },\n  check: {\n    color: '#A68EFE'\n  },\n  balanceCardValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 30,\n    lineHeight: '30px',\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  balanceCardLabel: {\n    color: '#b2add1',\n    fontSize: 14\n  },\n  tokenInfo: {\n    display: 'flex',\n    position: 'absolute',\n    right: 12,\n    top: 9\n  },\n  addTokenIcon: {\n    cursor: 'pointer',\n    marginLeft: '1rem',\n    display: 'flex'\n  },\n  scanToken: {\n    width: 24,\n    height: 'auto',\n    cursor: 'pointer',\n    borderRadius: '50%',\n    backgroundColor: '#fff'\n  },\n  hidden: {\n    display: 'none'\n  },\n  brand: {\n    color: '#FFFFFF',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '4.2rem',\n    fontWeight: '600',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    width: 'auto',\n    margin: '10px 0 0'\n  },\n  main: {\n    position: 'relative',\n    backgroundColor: 'transparent'\n  },\n  mainRaised: {\n    margin: '0 auto',\n    marginTop: 65\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  radioUnchecked: {\n    width: '0px',\n    height: '0px',\n    padding: '7px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioChecked: {\n    width: '16px',\n    height: '16px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioRoot: {\n    padding: '12px',\n    '&:hover': {\n      backgroundColor: 'unset'\n    }\n  },\n  radio: {\n    color: '#fff !important'\n  },\n  investCard: {\n    padding: '20px 24px',\n    borderRadius: 6,\n    backgroundColor: 'rgba(39, 31, 114, 0.8)',\n    overflow: 'visible'\n  },\n  table: {\n    backgroundColor: '#150752',\n    border: '1px solid rgb(222, 217, 213)'\n  },\n  tableCell: {\n    color: '#fff',\n    fontSize: '12px',\n    letterSpacing: '0.01071em'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& .MuiPaper-root': {\n      minWidth: 430,\n      minHeight: 120,\n      padding: '32px 24px',\n      fontSize: 16,\n      border: 0,\n      color: '#fff',\n      boxShadow: '0px 15px 15px rgba(0, 0, 0, 0.05)',\n      borderRadius: '20px',\n      background: '#292B2E',\n      outline: 0,\n      width: '550px'\n    }\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  stepContainer: {\n    padding: 20\n  },\n  stepItem: {\n    color: '#fff'\n  },\n  tabsRoot: {\n    padding: '0 20px'\n  },\n  tabsIndicator: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    '& > span': {\n      maxWidth: 120,\n      width: '100%',\n      backgroundColor: '#fff'\n    }\n  },\n  tabTextColor: {\n    color: '#fff'\n  },\n  tabRoot: {\n    width: '50%',\n    fontSize: '16px',\n    maxWidth: 'none'\n  },\n  detailWrapper: {\n    margin: '42px 0 0 0'\n  },\n  slider: {\n    position: 'absolute',\n    top: '50px',\n    left: 'calc(50% - 33rem)',\n    backgroundColor: '#271f72',\n    color: 'azure'\n  },\n  text: {\n    color: 'azure'\n  },\n  spliter: {\n    display: 'flex',\n    justifyContent: 'center',\n    bottom: 0,\n    height: 2,\n    position: 'absolute',\n    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '54%',\n    backgroundColor: '#fff'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useCallback } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n// import Card from '@material-ui/core/Card'\n// import AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\n// import Loading from '@/components/LoadingComponent'\n\n// === Components === //\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport MyStatementForRiskOn from '@/components/MyStatement/MyStatementForRiskOn'\nimport MyVaultPage from '@/components/MyVaultPage'\n// import MyVault from '@/components/MyVault'\n// import Modal from '@material-ui/core/Modal'\n// import Paper from '@material-ui/core/Paper'\n\n// === Reducers === //\nimport { setCurrentTab } from '@/reducers/invest-reducer'\n\n// === constants === //\nimport { WETH_ADDRESS_MATIC } from '@/constants/tokens'\nimport { INVEST_TAB } from '@/constants/invest'\nimport { IERC20_ABI } from '@/constants'\n\n// === Utils === //\nimport isEmpty from 'lodash/isEmpty'\nimport * as ethers from 'ethers'\nimport useVersionWapper from '@/hooks/useVersionWapper'\n// import { formatBalance } from '@/helpers/number-format'\n// import { addToken } from '@/helpers/wallet'\n\n// === Hooks === //\nimport { useSelector, useDispatch } from 'react-redux'\nimport useVaultOnRisk from '@/hooks/useVaultOnRisk'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\nconst { BigNumber } = ethers\n\nconst tokens = [WETH_ADDRESS_MATIC]\n\nfunction Ethr(props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const isLayoutSm = useMediaQuery('(max-width: 960px)')\n\n  const { address, userProvider, VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, UNISWAPV3_RISK_ON_VAULT, UNISWAPV3_RISK_ON_HELPER } = props\n\n  const [isBalanceLoading, setIsBalanceLoading] = useState(false)\n  const [personalVaultAddress, setPersonalVaultAddress] = useState()\n  const [wantTokenForVault, setWantTokenForVault] = useState()\n  const [wantTokenBalance, setWantTokenBalance] = useState(BigNumber.from(0))\n  const [wantTokenDecimals, setWantTokenDecimals] = useState(0)\n  const [wantTokenSymbol, setWantTokenSymbol] = useState('')\n  // const [isVisiable, setIsVisiable] = useState(true)\n  const [myVaultVisible, setMyVaultVisible] = useState(true)\n\n  const current = useSelector(state => state.investReducer.currentTab)\n  const setCurrent = tab => {\n    loadData()\n    dispatch(setCurrentTab(tab))\n  }\n  const { baseInfo, queryBaseInfo } = useVaultOnRisk(\n    VAULT_FACTORY_ADDRESS,\n    VAULT_FACTORY_ABI,\n    personalVaultAddress,\n    UNISWAPV3_RISK_ON_VAULT,\n    UNISWAPV3_RISK_ON_HELPER,\n    userProvider\n  )\n  const { estimatedTotalAssets, manageFeeBps, minInvestment } = baseInfo\n\n  // const handleAddToken = useCallback(() => {\n  //   addToken(wantTokenForVault, wantTokenSymbol, wantTokenDecimals)\n  // }, [wantTokenForVault, wantTokenSymbol, wantTokenDecimals])\n\n  const loadData = useCallback(() => {\n    if (isEmpty(wantTokenForVault) || isEmpty(personalVaultAddress)) return\n\n    setIsBalanceLoading(true)\n    const wantTokenContract = new ethers.Contract(wantTokenForVault, IERC20_ABI, userProvider)\n\n    Promise.all([wantTokenContract.balanceOf(address), wantTokenContract.decimals(), wantTokenContract.symbol()])\n      .then(([balance, decimals, symbol]) => {\n        setWantTokenBalance(balance)\n        setWantTokenDecimals(decimals)\n        setWantTokenSymbol(symbol)\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsBalanceLoading(false)\n        }, 500)\n      })\n    return loadData\n  }, [wantTokenForVault, personalVaultAddress, address, userProvider])\n\n  useEffect(() => {\n    loadData()\n    setInterval(loadData, 30000)\n  }, [loadData])\n\n  return (\n    <div className={classes.container}>\n      {myVaultVisible && (\n        <MyVaultPage\n          tokens={tokens}\n          address={address}\n          userProvider={userProvider}\n          VAULT_FACTORY_ADDRESS={VAULT_FACTORY_ADDRESS}\n          VAULT_FACTORY_ABI={VAULT_FACTORY_ABI}\n          vaultChangeHandle={(address, token) => {\n            setMyVaultVisible(false)\n            setPersonalVaultAddress(address)\n            setWantTokenForVault(token)\n          }}\n        />\n      )}\n      {!myVaultVisible && (\n        <GridContainer spacing={0}>\n          <GridItem xs={2} sm={2} md={3} style={{ paddingLeft: '2rem' }}>\n            <List>\n              <ListItem key=\"My Account\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.account)}>\n                <ListItemIcon>\n                  <AccountBalanceWalletIcon style={{ color: current === INVEST_TAB.account ? '#A68EFE' : '#fff' }} />\n                </ListItemIcon>\n                {!isLayoutSm && (\n                  <ListItemText primary={'My Account'} className={classNames(current === INVEST_TAB.account ? classes.check : classes.text)} />\n                )}\n              </ListItem>\n              <ListItem\n                key=\"Deposit\"\n                button\n                className={classNames(classes.item, current === INVEST_TAB.deposit && classes.check)}\n                onClick={() => setCurrent(INVEST_TAB.deposit)}\n              >\n                <ListItemIcon>\n                  <SaveAltIcon style={{ color: current === INVEST_TAB.deposit ? '#A68EFE' : '#fff' }} />\n                </ListItemIcon>\n                {!isLayoutSm && (\n                  <ListItemText primary={'Deposit'} className={classNames(current === INVEST_TAB.deposit ? classes.check : classes.text)} />\n                )}\n              </ListItem>\n              <ListItem key=\"Withdraw\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.withdraw)}>\n                <ListItemIcon>\n                  <UndoIcon style={{ color: current === INVEST_TAB.withdraw ? '#A68EFE' : '#fff' }} />\n                </ListItemIcon>\n                {!isLayoutSm && (\n                  <ListItemText primary={'Withdraw'} className={classNames(current === INVEST_TAB.withdraw ? classes.check : classes.text)} />\n                )}\n              </ListItem>\n            </List>\n          </GridItem>\n          {current === INVEST_TAB.deposit && (\n            <GridItem xs={9} sm={9} md={6}>\n              <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n                <Deposit\n                  address={address}\n                  estimatedTotalAssets={estimatedTotalAssets}\n                  wantTokenBalance={wantTokenBalance}\n                  wantTokenDecimals={wantTokenDecimals}\n                  userProvider={userProvider}\n                  wantTokenSymbol={wantTokenSymbol}\n                  wantTokenForVault={wantTokenForVault}\n                  VAULT_ADDRESS={personalVaultAddress}\n                  VAULT_ABI={UNISWAPV3_RISK_ON_VAULT}\n                  isBalanceLoading={isBalanceLoading}\n                  minInvestment={minInvestment}\n                  manageFeeBps={manageFeeBps}\n                  onDepositSuccess={() => {\n                    queryBaseInfo()\n                    loadData()\n                  }}\n                />\n              </div>\n            </GridItem>\n          )}\n          {current === INVEST_TAB.withdraw && (\n            <GridItem xs={9} sm={9} md={6}>\n              <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n                <Withdraw\n                  address={address}\n                  userProvider={userProvider}\n                  estimatedTotalAssets={estimatedTotalAssets}\n                  wantTokenDecimals={wantTokenDecimals}\n                  wantTokenSymbol={wantTokenSymbol}\n                  VAULT_ADDRESS={personalVaultAddress}\n                  VAULT_ABI={UNISWAPV3_RISK_ON_VAULT}\n                  isBalanceLoading={isBalanceLoading}\n                  reloadBalance={loadData}\n                  onWithdrawSuccess={() => {\n                    queryBaseInfo()\n                    loadData()\n                  }}\n                />\n              </div>\n            </GridItem>\n          )}\n          {current === INVEST_TAB.account && (\n            <GridItem xs={9} sm={9} md={9}>\n              <div\n                className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}\n                style={{ background: 'none', paddingTop: '1rem', paddingLeft: 0 }}\n              >\n                {/* <Card className={classes.balanceCard}>\n                  <div className={classes.balanceCardItem}>\n                    <div className={classes.balanceCardValue}>\n                      <span\n                        title={formatBalance(netMarketMakingAmount, wantTokenDecimals, {\n                          showAll: true\n                        })}\n                      >\n                        <Loading loading={isBalanceLoading}>{formatBalance(netMarketMakingAmount, wantTokenDecimals)}</Loading>\n                      </span>\n                      <span className={classes.symbol}>\n                        <Loading loading={isEmpty(wantTokenSymbol) && isBalanceLoading}>{wantTokenSymbol}</Loading>\n                      </span>\n                      {userProvider && (\n                        <span title=\"Add token address to wallet\">\n                          <AddCircleOutlineIcon className={classes.addTokenIcon} onClick={handleAddToken} fontSize=\"small\" />\n                        </span>\n                      )}\n                    </div>\n                    <div className={classes.balanceCardLabel}>AVAILABLE BALANCE</div>\n                  </div>\n                </Card> */}\n                {!isEmpty(address) && !isEmpty(personalVaultAddress) && (\n                  <MyStatementForRiskOn\n                    type=\"ETHr\"\n                    userProvider={userProvider}\n                    VAULT_FACTORY_ABI={VAULT_FACTORY_ABI}\n                    personalVaultAddress={personalVaultAddress}\n                    wantTokenSymbol={wantTokenSymbol}\n                    VAULT_FACTORY_ADDRESS={VAULT_FACTORY_ADDRESS}\n                    UNISWAPV3_RISK_ON_VAULT={UNISWAPV3_RISK_ON_VAULT}\n                    UNISWAPV3_RISK_ON_HELPER={UNISWAPV3_RISK_ON_HELPER}\n                  />\n                )}\n              </div>\n            </GridItem>\n          )}\n          {/* <Modal className={classes.modal} open={isVisiable} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n            <Paper elevation={3}>\n              <MyVault\n                tokens={tokens}\n                address={address}\n                userProvider={userProvider}\n                VAULT_FACTORY_ADDRESS={VAULT_FACTORY_ADDRESS}\n                VAULT_FACTORY_ABI={VAULT_FACTORY_ABI}\n                vaultChangeHandle={(address, token) => {\n                  setIsVisiable(false)\n                  setPersonalVaultAddress(address)\n                  setWantTokenForVault(token)\n                }}\n                modalCloseHandle={() => setIsVisiable(false)}\n              />\n            </Paper>\n          </Modal> */}\n        </GridContainer>\n      )}\n    </div>\n  )\n}\n\nexport default useVersionWapper(Ethr, 'ethr')\n"],"sourceRoot":""}