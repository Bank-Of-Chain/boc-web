{"version":3,"sources":["hooks/useVault.js","helpers/swap-util.js","components/TokenItem/style.js","components/TokenItem/index.jsx","components/ApproveArray/style.js","components/ApproveArray/ApproveArrayV2.jsx","constants/date.js","components/MyStatement/index.jsx","pages/Ethi/Deposit/style.js","pages/Ethi/Deposit/index.jsx","hooks/usePriceProvider.js","pages/Ethi/Withdraw/style.js","pages/Ethi/Withdraw/index.jsx","pages/Ethi/style.js","pages/Ethi/index.jsx","helpers/time-util.js","constants/cron.js","components/SimpleSelect/style.js","components/SimpleSelect/index.jsx","hooks/useRedeemFeeBps.js"],"names":["Contract","ethers","useVault","VAULT_ADDRESS","VAULT_ABI","userProvider","useState","error","setError","loading","setLoading","exchangeManager","setExchangeManager","from","decimals","setDecimals","totalAsset","setTotalAsset","rebaseThreshold","setRebaseThreshold","underlyingUnitsPerShare","setUnderlyingUnitsPerShare","minimumInvestmentAmount","setMinimumInvestmentAmount","address","useUserAddress","valid","isEmpty","Error","queryBaseInfo","vaultContract","requestArray","totalAssets","catch","totalDebt","fetchUnderlyingUnitsPerShare","Promise","all","then","finally","useEffect","updateRebaseThreshold","value","signer","getSigner","connect","tx","wait","updateMinimumInvestmentAmount","SUPPORTS","getProtocolsFromBestRouterFor1inchV4","bestRoute","nextProtocols","resp","get","name","push","getProtocolsFromBestRouterForParaswap","reduce","result","element","componentsStyle","container","main","padding","color","background","borderRadius","title","paddingBottom","fontSize","lineHeight","textAlign","tokenLogo","width","marginRight","approveContainer","maxHeight","border","backgroundColor","overflowY","approveItemWrapper","success","swappingContainer","margin","swapSuccessContainer","swapErrorContainer","height","cursor","approveItem","display","approveButton","balanceText","errorText","errorContainer","successContainer","isSwappingContainer","reciveContainer","slippage","marginTop","slippageTitlte","alignItems","estimateContainer","estimateTitle","estimateBalance","flexDirection","justifyContent","tokenList","overflow","arrow","buttonGroup","okWrapper","paddingLeft","okButton","cancelButton","addToken","swapError","marginBottom","textOverflow","whiteSpace","animation","reloadIcon","verticalAlign","i","sycIndex","BigNumber","useStyles","makeStyles","styles","BN_0","forwardRef","props","ref","classes","token","userAddress","receiveToken","exchangePlatformAdapters","receiveTokenDecimals","EXCHANGE_AGGREGATOR_ABI","style","disabled","onChange","onStaticCallFinish","isReload","setIsReload","setValue","balance","setBalance","allowances","setAllowances","exclude","setExclude","undefined","swapInfo","setSwapInfo","isSwapInfoFetching","setIsSwapInfoFetching","isStaticCalling","setIsStaticCalling","done","setDone","retryTimes","setRetryTimes","isApproving","setIsApproving","isReciveToken","isFetching","isOverMaxRetry","resetState","useCallback","setTimeout","isApproveEnough","ETH_ADDRESS","BN","multipliedBy","toString","lte","staticCall","debounce","console","groupCollapsed","log","constract","constractWithSigner","bestSwapInfo","platform","method","encodeExchangeArgs","info","callStatic","swap","groupEnd","isNumber","isString","includes","func","getProtocolsFromBestRouter","arrayItem","oldPlatform","newPlatform","concat","nextExclude","approve","isNil","contract","IERC20_ABI","contractWithUser","nextValue","toFixed","allowance","allowanceAmount","gt","WETH_ADDRESS","reload","increaseAllowance","sub","e","code","reject","isSwapError","isErrorValue","nextFromValueString","indexOf","isEmptyValue","Number","handleInputChange","num","isNaN","nextAllowance","balanceOf","nextBalance","nextDecimals","pow","queryBestSwapInfo","swapAmount","fromToken","toToken","fromTokenConstract","parseInt","toTokenConstract","nextExchangeExtraParams","assign","EXCHANGE_EXTRA_PARAMS","testAdapter","oneInchV4","paraswap","excludeProtocols","uniq","excludeDEXS","split","join","getBestSwapInfo","parseFloat","ORACLE_ADDITIONAL_SLIPPAGE","amount","srcToken","dstToken","receiver","estimateWithValue","nextSwapInfo","isGetSwapInfoSuccess","isSwapSuccess","isValidSlippageValue","cancel","isApproveEnoughValue","useImperativeHandle","key","className","classNames","CustomTextField","root","input","placeholder","maxEndAdornment","InputProps","startAdornment","onClick","position","top","left","src","event","target","onMaxClick","float","toTokenAmount","ApproveArrayV2","dispatch","useDispatch","isEthi","tokens","EXCHANGE_ADAPTER_ABI","handleClose","refArray","map","useRef","setExchangePlatformAdapters","USDT_ADDRESS","setReceiveToken","setSlippage","isSwapping","setIsSwapping","setCount","callStateArray","setCallStateArray","swapInfoArray","item","someFetching","some","index","isValidSlippage","someErrorValue","receiveAmount","rs","current","add","noNeedSwap","size","first","getExchangePlatformAdapters","exchangeAggregator","getExchangeAdapters","adapters","_exchangeAdapters","exchangeAdapters","identifier","selectOptions","label","img","decimal","BN_18","BN_6","USDC_ADDRESS","DAI_ADDRESS","find","el","receiveTokenAmount","approveAll","length","message","errorTextOutput","warmDialog","open","type","batchSwap","nextSwapArray","compact","data","swapDescription","contractWithSigner","MULTIPLE_OF_GAS","estimateGas","gas","gasLimit","Math","ceil","maxGasLimit","MAX_GAS_LIMIT","errorMsg","isLossMuch","onChildStateChange","random","bool","nextArray","allFinish","every","someError","exchangeManagerContract","getAdapters","GridContainer","GridItem","xs","sm","md","SimpleSelect","options","v","onReceiveChange","Button","startIcon","SEGMENT_TYPES","getMarker","MyStatement","chain","isUSDi","setData","segmentType","setSegmentType","optionForLineChart","setOptionForLineChart","optionForBarChart","setOptionForBarChart","usePersonalData","dataSource","chartLoading","titleRender","isWeek","isMonth","moment","format","isDay","m","d","getSegmentProfit","reverse","profits","segmentTime","profit","tvls","reverseArray","continuousIndex","findIndex","abs","startPercent","option1","getLineEchartOpt","tootlTipFormat","dataZoom","start","end","xAxis","axisTick","alignWithLabel","tootlTipSuffix","option","show","textStyle","text","tooltip","trigger","axisPointer","formatter","params","param","marker","seriesName","TOKEN_DISPLAY_DECIMALS","ETHI_PROFITS_DISPLAY_DECIMALS","segmentBegin","segmentEnd","grid","right","bottom","containLabel","axisLine","onZero","splitLine","splitArea","yAxis","lineStyle","series","day7Apy","day30Apy","latestProfit","tokenType","cardProps","tip","Tooltip","placement","content","numeral","ETHI_BN_DECIMALS","ETHI_DISPLAY_DECIMALS","footer","unit","apy","isAPY","lg","spacing","Card","lineChart","marginLeft","loadingOption","minHeight","barChart","ButtonGroup","groupedOutlinedPrimary","classnames","groupButtonCheck","modal","modalBody","depositContainer","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","estimateText","estimateBalanceTitle","estimateBalanceNum","footerContainer","tokenInputWrapper","inputLabelWrapper","maxWidth","depositComfirmArea","tokenInfo","tokenName","flexText","ModalTokenLogo","labelToolTipIcon","depositModal","paddingTop","subTitle","steps","Deposit","ethBalance","ethDecimals","ethiDecimals","vaultBufferBalance","vaultBufferDecimals","isBalanceLoading","ethValue","setEthValue","mintGasLimit","setMintGasLimit","gasPriceCurrent","setGasPriceCurrent","isLoading","setIsLoading","isEstimate","setIsEstimate","isOpenEstimateModal","setIsOpenEstimateModal","estimateVaultBuffValue","setEstimateVaultBuffValue","loadingTimer","nextRebaseTime","getLastPossibleRebaseTime","getGasFee","gasPrice","mul","isValidValue","replace","nextFromValue","lt","diposit","clearTimeout","nVaultWithUser","isSuccess","extendObj","mint","isEs","isAd","isRp","isDistributing","isLessThanMinValue","estimateMint","send","noop","timer","setInterval","clearInterval","estimatedUsedValue","isLogin","isValid","alt","maxValue","formatBalance","showAll","isUndefined","Modal","aria-labelledby","aria-describedby","Paper","elevation","alternativeLabel","activeStep","connector","Step","StepIconComponent","BocStepIcon","Typography","variant","gutterBottom","fontWeight","div","CircularProgress","usePriceProvider","PRICE_ORCALE_ABI","getPriceProvider","priceProvider","priceOracleAddress","switchBar","switchBase","switchChecked","swapBody","outline","withdrawContainer","outputContainer","receiveTokenItem","settingBtn","settingTitle","letterSpacing","settingItem","settingItemLabel","minWidth","mutedLabel","maxLossFormCtrl","exchanged","transform","slippageItem","slippageInput","widthdrawLoadingPaper","estimateItem","setting","popover","popoverTitle","WITHDRAW_EXCHANGE_THRESHOLD","Withdraw","ethiBalance","reloadBalance","toValue","setToValue","allowMaxLoss","setAllowMaxLoss","slipper","setSlipper","estimateWithdrawArray","setEstimateWithdrawArray","isWithdrawLoading","setIsWithdrawLoading","currentStep","setCurrentStep","withdrawError","setWithdrawError","burnTokens","setBurnTokens","isShowZipModal","setIsShowZipModal","pegTokenPrice","setPegTokenPrice","redeemFeeBps","useRedeemFeeBps","redeemFeeBpsPercent","toNumber","estimateWithdraw","usdValue","allowMaxLossValue","vaultContractWithSigner","burn","amounts","tokenAddress","nextEstimateWithdrawArray","isMaxLoss","isExchangeFail","handleBurn","a","b","c","valueInEth","amountsInEth","getBalance","array","nextBurnTokens","withdraw","withdrawTimeStart","Date","now","withdrawValidFinish","preWithdrawGetCoins","getSwapInfoFinish","estimateGasFinish","withdrawFinish","withdrawTransationFinish","isValidToValue","isValidAllowLoss","isValidSlipper","events","args","szjyPercents","szjy","totalTime","ytqPercents","ytq","hqdhljPercents","hqdhlj","egPercents","eg","qkPercents","qk","swcPercents","swc","table","preWithdraw","getSwapPath","transaction","imgError","evn","srcElement","nextToValue","handleMaxClick","nextEthiBalance","isValidToValueFlag","isValidAllowLossFlag","getPegTokenPrice","popupId","popupState","viewBox","fill","xmlns","bindTrigger","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popover","paper","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","Box","p","selectorlWrapper","onError","onSlippageChange","theme","zIndex","center","breakpoints","down","wrapper","wrapperMobile","deposit","symbol","gradientText","centerItem","balanceCard","check","balanceCardValue","balanceCardLabel","addTokenIcon","scanToken","hidden","brand","subtitle","mainRaised","link","textDecoration","textCenter","radioUnchecked","radioChecked","radioRoot","radio","investCard","tableCell","stepContainer","stepItem","tabsRoot","tabsIndicator","tabTextColor","tabRoot","detailWrapper","slider","spliter","transition","useVersionWapper","isLayoutSm","useMediaQuery","ETHI_ADDRESS","VAULT_BUFFER_ADDRESS","VAULT_BUFFER_ABI","setEthBalance","setEthiBalance","setEthiDecimals","ETH_DECIMALS","setVaultBufferBalance","setVaultBufferDecimals","setIsBalanceLoading","lastRebaseTime","useSelector","state","investReducer","currentTab","setCurrent","tab","loadCoinsBalance","setCurrentTab","loadBalance","vaultBufferContract","ethiContract","handleMint","eventArgs","block","last","getTransaction","on","off","listener","List","ListItem","button","INVEST_TAB","account","ListItemIcon","ListItemText","primary","balanceCardItem","CHAIN_ID","tz","min","parser","parseExpression","next","getTime","selectWrapper","selectTrigger","paddingRight","triggerLabelWrapper","triggerLabel","caret","expandLess","selectPop","boxShadow","selectPopVisible","selectItem","optImg","optMultiImgWrapper","optMultiImg","optLabel","Select","popVisible","setPopVisible","selectedOpt","opt","ClickAwayListener","onClickAway","isArray","selectActiveItem","handlePopSelect"],"mappings":"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","file":"static/js/11.0f6e5352.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\n// === Hooks === //\nimport useUserAddress from './useUserAddress'\n\nconst { Contract } = ethers\n\nconst useVault = (VAULT_ADDRESS, VAULT_ABI, userProvider) => {\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n  const [exchangeManager, setExchangeManager] = useState('')\n  const [decimals, setDecimals] = useState(ethers.BigNumber.from(0))\n  const [totalAsset, setTotalAsset] = useState(ethers.BigNumber.from(0))\n  const [rebaseThreshold, setRebaseThreshold] = useState(ethers.BigNumber.from(0))\n  const [underlyingUnitsPerShare, setUnderlyingUnitsPerShare] = useState(ethers.BigNumber.from(0))\n  const [minimumInvestmentAmount, setMinimumInvestmentAmount] = useState(ethers.BigNumber.from(0))\n\n  const address = useUserAddress(userProvider)\n\n  const valid = () => {\n    if (isEmpty(VAULT_ADDRESS)) return new Error('VAULT_ADDRESS is need!')\n    if (isEmpty(VAULT_ABI)) return new Error('VAULT_ABI is need!')\n    if (isEmpty(userProvider)) return new Error('userProvider is need!')\n  }\n\n  /**\n   * query vault base info\n   * @returns\n   */\n  const queryBaseInfo = () => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const requestArray = [\n      vaultContract.totalAssets().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.totalDebt().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.rebaseThreshold().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.minimumInvestmentAmount(),\n      vaultContract.exchangeManager(),\n      fetchUnderlyingUnitsPerShare()\n    ]\n    return Promise.all(requestArray)\n      .then(([totalAsset, decimals, rebaseThreshold, minimumInvestmentAmount, exchangeManager]) => {\n        setTotalAsset(totalAsset)\n        setDecimals(decimals)\n        setRebaseThreshold(rebaseThreshold)\n        setMinimumInvestmentAmount(minimumInvestmentAmount)\n        setExchangeManager(exchangeManager)\n        return {\n          totalAsset,\n          decimals,\n          rebaseThreshold\n        }\n      })\n      .catch(setError)\n      .finally(() => setLoading(false))\n  }\n\n  const updateRebaseThreshold = value => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    vaultContract\n      .connect(signer)\n      .setRebaseThreshold(value)\n      .then(tx => tx.wait())\n      .finally(() => setLoading(false))\n  }\n\n  const updateMinimumInvestmentAmount = value => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    vaultContract\n      .connect(signer)\n      .setMinimumInvestmentAmount(value)\n      .then(tx => tx.wait())\n      .finally(() => setLoading(false))\n  }\n\n  const fetchUnderlyingUnitsPerShare = () => {\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    setLoading(true)\n    vaultContract\n      .underlyingUnitsPerShare()\n      .catch(setError)\n      .then(setUnderlyingUnitsPerShare)\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    const error = valid()\n    if (error) {\n      setLoading(false)\n      setError()\n      return\n    }\n    queryBaseInfo()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  return {\n    loading,\n    error,\n    totalAsset,\n    decimals,\n    exchangeManager,\n    minimumInvestmentAmount,\n    fetchUnderlyingUnitsPerShare,\n    rebaseThreshold,\n    queryBaseInfo,\n    updateRebaseThreshold,\n    updateMinimumInvestmentAmount,\n    underlyingUnitsPerShare\n  }\n}\n\nexport default useVault\n","// === Utils === //\nimport get from 'lodash/get'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport isString from 'lodash/isString'\nimport reduce from 'lodash/reduce'\n\nexport const ONEINCH_V4 = 'oneInchV4'\nexport const PARASWAP = 'paraswap'\n\nexport const SUPPORTS = [PARASWAP, ONEINCH_V4]\nexport const getProtocolsFromBestRouter = (bestSwapInfo = {}) => {\n  if (isEmpty(bestSwapInfo) || isNumber(bestSwapInfo) || isString(bestSwapInfo)) return []\n  const { name, bestRoute } = bestSwapInfo\n  if (SUPPORTS.includes(name)) {\n    let func\n    switch (name) {\n      case ONEINCH_V4:\n        func = getProtocolsFromBestRouterFor1inchV4\n        break\n      case PARASWAP:\n        func = getProtocolsFromBestRouterForParaswap\n        break\n      default:\n    }\n    return func(bestRoute)\n  }\n  throw new Error('not support')\n}\n\nexport const getProtocolsFromBestRouterFor1inchV4 = bestRoute => {\n  const nextProtocols = []\n  const resp = get(bestRoute, '0.0.0')\n  if (isEmpty(resp)) return nextProtocols\n  const { name } = resp\n  nextProtocols.push(name)\n  return nextProtocols\n}\n\nexport const getProtocolsFromBestRouterForParaswap = bestRoute => {\n  const nextProtocols = reduce(\n    bestRoute,\n    (result, element) => {\n      const name = get(element, 'swaps[0].swapExchanges[0].exchange', '')\n      result.push(name)\n      return result\n    },\n    []\n  )\n  return nextProtocols\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  main: {\n    padding: '2rem 3rem',\n    color: '#A0A0A0',\n    background: 'linear-gradient(111.68deg, #2C2F36 7.59%, #333437 102.04%)',\n    borderRadius: '2.5rem'\n  },\n  title: {\n    paddingBottom: '1.5rem',\n    fontSize: '1.5rem',\n    lineHeight: '1.5rem',\n    textAlign: 'center'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  approveContainer: {\n    maxHeight: '20rem',\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0.5rem 0.5rem 0px 0px',\n    backgroundColor: '#1F2023',\n    overflowY: 'auto'\n  },\n  approveItemWrapper: {\n    paddingBottom: '0.5rem',\n    '&:last-child': {\n      padding: 0\n    }\n  },\n  success: {\n    border: '1px solid forestgreen'\n  },\n  swappingContainer: {\n    margin: 0,\n    color: '#A68EFD',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapSuccessContainer: {\n    margin: 0,\n    color: '#56CC8C',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapErrorContainer: {\n    height: '2rem',\n    border: '1px solid #F36767',\n    borderRadius: '0.625rem',\n    margin: 0,\n    color: '#F36767',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '2rem',\n    cursor: 'pointer'\n  },\n  approveItem: {\n    textAlign: 'left',\n    display: 'flex'\n  },\n  approveButton: {\n    margin: '12px 8px 8px'\n  },\n  balanceText: {\n    textAlign: 'left',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  errorText: {\n    color: '#ff7875'\n  },\n  errorContainer: {\n    border: '1px solid #ff7875',\n    margin: '2px 0'\n  },\n  successContainer: {\n    border: '1px solid forestgreen',\n    margin: '2px 0'\n  },\n  isSwappingContainer: {\n    border: '1px solid #A68EFE',\n    margin: '2px 0'\n  },\n  reciveContainer: {\n    background: 'linear-gradient(223.3deg, #A68EFD 20.71%, #F4ACF3 103.56%)'\n  },\n  slippage: {\n    padding: '0 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0px 0px 0.5rem 0.5rem',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  slippageTitlte: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  estimateContainer: {\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  estimateTitle: {\n    paddingBottom: '0.75rem'\n  },\n  estimateBalance: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  tokenList: {\n    padding: '0.5rem',\n    overflow: 'auto',\n    border: '1px solid rgb(166, 142, 254)',\n    borderRadius: '0.5rem'\n  },\n  arrow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    marginTop: '0.625rem'\n  },\n  okWrapper: {\n    paddingLeft: '1rem'\n  },\n  okButton: {\n    width: '100%'\n  },\n  cancelButton: {\n    width: '100%'\n  },\n  addToken: {\n    cursor: 'pointer'\n  },\n  swapError: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '1rem',\n    color: '#ff7875',\n    textAlign: 'left'\n  },\n  textOverflow: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  loading: {\n    animation: 'loading 1s linear infinite'\n  },\n  reloadIcon: {\n    cursor: 'pointer',\n    verticalAlign: 'text-bottom'\n  }\n})\n\nexport default componentsStyle\n","/* eslint-disable */\nimport React, { useCallback, useState, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport CustomTextField from '@/components/CustomTextField'\nimport Loading from '@/components/LoadingComponent'\nimport AddIcon from '@material-ui/icons/Add'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport uniq from 'lodash/uniq'\nimport isNil from 'lodash/isNil'\nimport assign from 'lodash/assign'\nimport isEmpty from 'lodash/isEmpty'\nimport debounce from 'lodash/debounce'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed } from '@/helpers/number-format'\nimport { getBestSwapInfo } from 'piggy-finance-utils'\nimport BN from 'bignumber.js'\nimport { getProtocolsFromBestRouter } from '@/helpers/swap-util'\n\n// === Constants === //\nimport {\n  IERC20_ABI,\n  EXCHANGE_EXTRA_PARAMS,\n  ORACLE_ADDITIONAL_SLIPPAGE,\n  USDT_ADDRESS,\n  USDC_ADDRESS,\n  DAI_ADDRESS,\n  MULTIPLE_OF_GAS,\n  MAX_GAS_LIMIT\n} from '@/constants'\nimport { ETH_ADDRESS, WETH_ADDRESS } from '@/constants/tokens'\nimport { BN_6, BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\nlet sycIndex = 0\n\nconst { Contract, BigNumber } = ethers\nconst useStyles = makeStyles(styles)\nconst MAX_RETRY_TIME = 2\nconst BN_0 = BigNumber.from('0')\n\nconst TokenItem = (props, ref) => {\n  const classes = useStyles()\n  const {\n    token = {},\n    userAddress,\n    userProvider,\n    slippage,\n    receiveToken,\n    exchangePlatformAdapters,\n    exchangeManager,\n    receiveTokenDecimals,\n    EXCHANGE_AGGREGATOR_ABI,\n    style,\n    disabled,\n    onChange,\n    onStaticCallFinish\n  } = props\n  const { address } = token\n\n  const [isReload, setIsReload] = useState(false)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState(BN_0)\n  const [decimals, setDecimals] = useState(0)\n  const [allowances, setAllowances] = useState(BN_0)\n  const [exclude, setExclude] = useState({})\n  const [swapInfo, setSwapInfo] = useState(undefined)\n  const [isSwapInfoFetching, setIsSwapInfoFetching] = useState(false)\n  const [isStaticCalling, setIsStaticCalling] = useState(false)\n  const [done, setDone] = useState(false)\n  const [retryTimes, setRetryTimes] = useState(0)\n  const [isApproving, setIsApproving] = useState(false)\n\n  const isReciveToken = token.address === receiveToken\n  const isFetching = !isReciveToken && (isSwapInfoFetching || isStaticCalling)\n  const isOverMaxRetry = retryTimes > MAX_RETRY_TIME\n\n  // console.groupCollapsed(`init state:${address}:${sycIndex++}`)\n  // console.log('isReload=', isReload)\n  // console.log('value=', value)\n  // console.log('balance=', balance.toString())\n  // console.log('decimals=', decimals.toString())\n  // console.log('allowances=', allowances.toString())\n  // console.log('exclude=', exclude)\n  // console.log('swapInfo=', swapInfo)\n  // console.log('isSwapInfoFetching=', isSwapInfoFetching)\n  // console.log('isStaticCalling=', isStaticCalling)\n  // console.log('done=', done)\n  // console.log('retryTimes=', retryTimes)\n  // console.log('isApproving=', isApproving)\n  // console.log('isReciveToken=', isReciveToken)\n  // console.log('userAddress=', userAddress)\n  // console.log('slippage=', slippage)\n  // console.log('token=', token)\n  // console.log('exchangePlatformAdapters=', exchangePlatformAdapters)\n  // console.log('exchangeManager=', exchangeManager)\n  // console.log('receiveTokenDecimals=', receiveTokenDecimals.toString())\n  // console.groupEnd(`init state:${address}:${sycIndex++}`)\n\n  const resetState = useCallback(() => {\n    setIsReload(false)\n    setExclude({})\n    setSwapInfo(undefined)\n    setIsSwapInfoFetching(false)\n    setIsStaticCalling(false)\n    setDone(false)\n    setRetryTimes(0)\n    setIsApproving(false)\n    setTimeout(() => {\n      onChange()\n    })\n  }, [])\n\n  const isApproveEnough = useCallback(() => {\n    if (token.address === ETH_ADDRESS || isReciveToken) return true\n    try {\n      const nextValue = new BN(value).multipliedBy(decimals.toString())\n      const result = nextValue.lte(allowances)\n      return result\n    } catch (error) {\n      return false\n    }\n  }, [token, value, allowances, decimals, isReciveToken])\n\n  const staticCall = useCallback(\n    debounce(() => {\n      console.groupCollapsed(`staticCall call:${address}:${++sycIndex}`)\n      console.log('swapInfo=', swapInfo)\n      const constract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\n      const signer = userProvider.getSigner()\n      const constractWithSigner = constract.connect(signer)\n\n      const {\n        bestSwapInfo: { platform, method, encodeExchangeArgs },\n        info\n      } = swapInfo\n\n      setIsStaticCalling(true)\n      setIsSwapInfoFetching(false)\n      onChange()\n      constractWithSigner.callStatic\n        .swap(platform, method, encodeExchangeArgs, info)\n        .then(() => {\n          console.log('staticCall success')\n          console.groupEnd(`staticCall call:${address}:${sycIndex}`)\n          setDone(true)\n          onStaticCallFinish(true)\n        })\n        .catch(error => {\n          console.log('staticCall error', error)\n          console.groupEnd(`staticCall call:${address}:${sycIndex}`)\n          const { bestSwapInfo } = swapInfo\n          const [arrayItem] = getProtocolsFromBestRouter(bestSwapInfo)\n          const { name } = bestSwapInfo\n          const oldPlatform = exclude[name] || [arrayItem]\n          const newPlatform = oldPlatform.includes(arrayItem) ? oldPlatform : oldPlatform.concat([arrayItem])\n          const nextExclude = {\n            ...exclude,\n            [name]: newPlatform\n          }\n          setExclude(nextExclude)\n          setSwapInfo(undefined)\n          console.log(`Retry ${retryTimes + 1} times`)\n          setRetryTimes(retryTimes + 1)\n          setDone(false)\n          setIsSwapInfoFetching(retryTimes + 1 <= MAX_RETRY_TIME)\n          if (retryTimes + 1 > MAX_RETRY_TIME) {\n            onStaticCallFinish(false, error)\n          }\n        })\n        .finally(() => {\n          setIsStaticCalling(false)\n          onChange()\n        })\n    }, 500),\n    [userProvider, swapInfo, onChange, exclude, retryTimes, onStaticCallFinish]\n  )\n\n  const approve = async () => {\n    // ETH no need approve\n    if (isEmpty(token) || isNil(value) || value === '0') return\n    // console.groupCollapsed(`approve call:${address}:${++sycIndex}`)\n    const signer = userProvider.getSigner()\n    const contract = new Contract(address, IERC20_ABI, userProvider)\n    const contractWithUser = contract.connect(signer)\n    let nextValue\n    try {\n      nextValue = BigNumber.from(new BN(value).multipliedBy(decimals.toString()).toFixed())\n    } catch (e) {\n      return\n    }\n    const allowanceAmount = await contractWithUser.allowance(userAddress, exchangeManager)\n    // If deposit amount greater than allow amount, reset amount\n    if (nextValue.gt(allowanceAmount)) {\n      // If allowance equal 0, approve nextAmount, otherwise increaseAllowance\n      if (allowanceAmount.gt(0)) {\n        if (address === WETH_ADDRESS) {\n          // WETH don't support increaseAllowance\n          return contractWithUser\n            .approve(exchangeManager, 0)\n            .then(tx => tx.wait())\n            .then(() => {\n              reload()\n              return contractWithUser.approve(exchangeManager, nextValue).then(tx => tx.wait())\n            })\n        }\n        return contractWithUser\n          .increaseAllowance(exchangeManager, nextValue.sub(allowanceAmount))\n          .then(tx => tx.wait())\n          .catch(e => {\n            // cancel by user\n            if (e.code === 4001) {\n              return Promise.reject(e)\n            }\n            // If increase failed, approve 0 and approve nextAmounts\n            return contractWithUser\n              .approve(exchangeManager, 0)\n              .then(tx => tx.wait())\n              .then(() => {\n                reload()\n                return contractWithUser.approve(exchangeManager, nextValue).then(tx => tx.wait())\n              })\n          })\n      } else {\n        return contractWithUser\n          .approve(exchangeManager, nextValue)\n          .then(tx => tx.wait())\n          .catch(e => {\n            // cancel by user\n            if (e.code === 4001) {\n              return Promise.reject(e)\n            }\n          })\n      }\n    }\n    // console.groupEnd(`approve call:${address}:${sycIndex}`)\n  }\n\n  // item fetch swap path failed\n  const isSwapError = !isFetching && !isReciveToken && isOverMaxRetry\n\n  // Check if value is gt balance, or lt 1 decimal\n  const isErrorValue = () => {\n    if (!value) {\n      return false\n    }\n    if (!decimals) {\n      return false\n    }\n    const nextFromValueString = new BN(value).multipliedBy(decimals.toString())\n    return !isReciveToken && !isEmpty(value) && (nextFromValueString.gt(balance) || nextFromValueString.toFixed().indexOf('.') !== -1)\n  }\n\n  // Check if value is empty\n  const isEmptyValue = () => {\n    return !isReciveToken && (isEmpty(value) || Number(value) === 0)\n  }\n\n  // check the slippage is valid or not\n  const isValidSlippage = () => {\n    if (isNaN(slippage)) return false\n    if (slippage < 0.01 || slippage > 45) return false\n    return true\n  }\n\n  const handleInputChange = value => {\n    const num = Number(value)\n    if (isNaN(num) || num < 0) {\n      return\n    }\n    setValue(value)\n    setSwapInfo(undefined)\n    setIsStaticCalling(false)\n    setRetryTimes(0)\n    setExclude({})\n    setDone(false)\n    setTimeout(() => {\n      onChange()\n    })\n  }\n\n  const reload = useCallback(async () => {\n    const { address } = token\n    // console.groupCollapsed(`reload call:${address}:${++sycIndex}`)\n    setIsReload(true)\n\n    const contract = new Contract(address, IERC20_ABI, userProvider)\n    const nextAllowance = (await contract.allowance(userAddress, exchangeManager).catch(() => BN_0)).toString()\n    const nextBalance = (await contract.balanceOf(userAddress).catch(() => BN_0)).toString()\n    const nextDecimals = BigNumber.from(10).pow(await contract.decimals().catch(() => BN_0))\n\n    setBalance(nextBalance)\n    setDecimals(nextDecimals)\n    setAllowances(nextAllowance)\n    setIsReload(false)\n    // console.groupEnd(`reload call:${address}:${sycIndex}`)\n  }, [token, userAddress, exchangeManager])\n\n  const reloadSwap = () => {\n    // console.groupCollapsed(`reloadSwap call:${address}:${++sycIndex}`)\n    setSwapInfo(undefined)\n    setIsSwapInfoFetching(true)\n    setRetryTimes(0)\n    onStaticCallFinish(undefined)\n    // console.groupEnd(`reloadSwap call:${address}:${sycIndex}`)\n  }\n\n  const queryBestSwapInfo = useCallback(async () => {\n    if (isNil(decimals) || isEmptyValue() || value === '0' || isReciveToken) {\n      return\n    }\n    // console.groupCollapsed(`queryBestSwapInfo call:${address}:${++sycIndex}`)\n    // console.log('exclude=', exclude)\n    // console.log('value=', value)\n    // console.log('swapInfo=', swapInfo)\n    const nextFromValueString = new BN(value).multipliedBy(decimals.toString()).toFixed()\n    if (nextFromValueString.indexOf('.') !== -1) return\n    const swapAmount = BigNumber.from(nextFromValueString)\n    let fromToken = {}\n    let toToken = {}\n    if (token.address === ETH_ADDRESS) {\n      fromToken = {\n        decimals: 18,\n        address: token.address\n      }\n    } else {\n      const fromTokenConstract = new Contract(token.address, IERC20_ABI, userProvider)\n      fromToken = {\n        decimals: parseInt((await fromTokenConstract.decimals()).toString()),\n        address: token.address\n      }\n    }\n    if (receiveToken === ETH_ADDRESS) {\n      toToken = {\n        decimals: 18,\n        address: receiveToken\n      }\n    } else {\n      const toTokenConstract = new Contract(receiveToken, IERC20_ABI, userProvider)\n      toToken = {\n        decimals: parseInt((await toTokenConstract.decimals()).toString()),\n        address: receiveToken\n      }\n    }\n    console.groupCollapsed(`fetch best swap path: ${fromToken.address}-${toToken.address}:${swapAmount}:${++sycIndex}`)\n    let nextExchangeExtraParams = assign({}, EXCHANGE_EXTRA_PARAMS, isEmpty(exchangePlatformAdapters.testAdapter) ? {} : {})\n\n    if (!isEmpty(exclude)) {\n      console.log(`exclude=`, exclude)\n      const { oneInchV4 = [], paraswap = [] } = exclude\n      nextExchangeExtraParams = assign({}, nextExchangeExtraParams, {\n        oneInchV4: {\n          ...nextExchangeExtraParams.oneInchV4,\n          excludeProtocols: uniq(oneInchV4.concat(nextExchangeExtraParams.oneInchV4.excludeProtocols))\n        },\n        paraswap: {\n          ...nextExchangeExtraParams.paraswap,\n          excludeDEXS: uniq([...paraswap, nextExchangeExtraParams.paraswap.excludeDEXS.split(',')]).join(',')\n        }\n      })\n    }\n    const bestSwapInfo = await getBestSwapInfo(\n      fromToken,\n      toToken,\n      swapAmount,\n      parseInt(100 * parseFloat(slippage)) || 0,\n      ORACLE_ADDITIONAL_SLIPPAGE,\n      exchangePlatformAdapters,\n      nextExchangeExtraParams\n    ).catch(error => {\n      throw new Error(error)\n    })\n    console.groupEnd(`fetch best swap path: ${fromToken.address}-${toToken.address}:${swapAmount}:${sycIndex}`)\n    if (isEmpty(bestSwapInfo)) {\n      throw new Error('fetch error')\n    }\n    // console.groupEnd(`queryBestSwapInfo call:${sycIndex}`)\n    return {\n      bestSwapInfo,\n      info: {\n        amount: swapAmount,\n        srcToken: token.address,\n        dstToken: receiveToken,\n        receiver: userAddress\n      }\n    }\n  }, [token, value, decimals, exchangePlatformAdapters, exclude, receiveToken, isReciveToken, slippage])\n\n  const estimateWithValue = useCallback(\n    debounce(async () => {\n      if (isEmptyValue()) {\n        onChange()\n        return\n      }\n      // console.groupCollapsed(`estimateWithValue call:${address}:${++sycIndex}`)\n      setIsSwapInfoFetching(true)\n      onChange()\n      await queryBestSwapInfo()\n        .then(nextSwapInfo => {\n          // console.log('estimateWithValue call success')\n          // console.groupEnd(`estimateWithValue call:${address}:${sycIndex}`)\n          setSwapInfo(nextSwapInfo)\n          if (!isApproveEnough()) {\n            setIsSwapInfoFetching(false)\n          }\n        })\n        .catch(() => {\n          // console.log('estimateWithValue call error')\n          // console.groupEnd(`estimateWithValue call:${address}:${sycIndex}`)\n          if (isOverMaxRetry) {\n            setIsSwapInfoFetching(false)\n          } else {\n            setRetryTimes(retryTimes + 1)\n            setIsSwapInfoFetching(retryTimes + 1 <= MAX_RETRY_TIME)\n          }\n        })\n        .finally(() => {\n          onChange()\n        })\n    }, 500),\n    [exchangeManager, token, decimals, retryTimes, queryBestSwapInfo, onChange]\n  )\n\n  useEffect(resetState, [receiveToken, slippage])\n\n  useEffect(() => {\n    setValue(toFixed(token.amount, decimals))\n  }, [token, decimals.toString()])\n\n  useEffect(() => {\n    reload()\n    // TODO: 待开启\n    // const timer = setInterval(reload, 3000)\n    // return () => clearInterval(timer)\n  }, [reload])\n\n  const isGetSwapInfoSuccess = !isSwapInfoFetching && !isEmpty(swapInfo) && !isOverMaxRetry\n\n  // staticcall success or getswapinfo success\n  const isSwapSuccess =\n    !isFetching && !isReciveToken && ((isApproveEnough() && done) || (!isApproveEnough() && !isEmpty(swapInfo))) && !isOverMaxRetry\n\n  useEffect(() => {\n    const isValidSlippageValue = isValidSlippage()\n    // console.groupCollapsed(`estimateWithValue useEffect call:${address}:${++sycIndex}`)\n    // console.log('isReload=', isReload)\n    // console.log('swapInfo=', swapInfo)\n    // console.log('isValidSlippage()=', isValidSlippageValue)\n    // console.log('isGetSwapInfoSuccess=', isGetSwapInfoSuccess)\n    if (\n      isReciveToken ||\n      isReload ||\n      !isValidSlippageValue ||\n      isEmpty(exchangePlatformAdapters) ||\n      isGetSwapInfoSuccess ||\n      isOverMaxRetry ||\n      isErrorValue() ||\n      isEmptyValue()\n    ) {\n      // console.log('estimateWithValue useEffect return')\n      // console.groupEnd(`estimateWithValue useEffect call:${address}:${sycIndex}`)\n      return\n    }\n    // console.groupEnd(`estimateWithValue useEffect call:${address}:${sycIndex}`)\n    estimateWithValue()\n    return () => estimateWithValue.cancel()\n  }, [isReload, value, swapInfo, estimateWithValue, retryTimes, isSwapInfoFetching])\n\n  useEffect(() => {\n    const isApproveEnoughValue = isApproveEnough()\n    // console.groupCollapsed(`staticCall useEffect call:${address}:${++sycIndex}`)\n    // console.log('done=', done)\n    // console.log('retryTimes=', retryTimes)\n    // console.log('isApproveEnoughValue=', isApproveEnoughValue)\n    // console.log('swapInfo=', swapInfo)\n    // console.log('isStaticCalling=', isStaticCalling)\n    // console.log('isOverMaxRetry=', isOverMaxRetry)\n    // console.log('isReciveToken=', isReciveToken)\n    if (\n      isReciveToken ||\n      done ||\n      isEmpty(swapInfo) ||\n      !isApproveEnoughValue ||\n      isStaticCalling ||\n      isOverMaxRetry ||\n      isErrorValue() ||\n      isEmptyValue()\n    ) {\n      // console.log('staticCall useEffect return')\n      // console.groupEnd(`staticCall useEffect call:${address}:${sycIndex}`)\n      return\n    }\n    // console.groupEnd(`staticCall useEffect call:${address}:${sycIndex}`)\n    staticCall()\n  }, [done, value, retryTimes, swapInfo, staticCall, isStaticCalling, isApproveEnough])\n\n  useImperativeHandle(ref, () => {\n    return {\n      approve: () => approve().then(reload),\n      value,\n      isApproving,\n      isFetching,\n      swapInfo,\n      done,\n      isApproveEnough,\n      retryTimes,\n      isErrorValue,\n      isEmptyValue\n    }\n  })\n\n  return (\n    <div key={address} className={classNames(classes.approveItemWrapper)} style={style}>\n      <div className={classes.approveItem}>\n        <CustomTextField\n          classes={{ root: classes.input }}\n          placeholder=\"approve amount\"\n          maxEndAdornment\n          InputProps={{\n            startAdornment: (\n              <div className={classes.addToken} onClick={() => addToken(address)}>\n                {address !== ETH_ADDRESS && <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 28, left: 35 }} />}\n                <img className={classes.tokenLogo} src={`./images/${address}.png`} />\n              </div>\n            )\n          }}\n          disabled={disabled || isReciveToken || isFetching}\n          error={isErrorValue()}\n          value={value}\n          onChange={event => handleInputChange(event.target.value)}\n          onMaxClick={() => handleInputChange(toFixed(balance, decimals))}\n        />\n      </div>\n      {!isReciveToken && (\n        <p className={classes.balanceText}>\n          Balance:{' '}\n          <Loading loading={isReload} className={classes.reloadIcon}>\n            <span title={toFixed(balance, decimals)}>{toFixed(balance, decimals, 6)}</span>\n          </Loading>\n          <span style={{ float: 'right' }}>\n            Allowance:{' '}\n            <Loading loading={isReload} className={classes.reloadIcon}>\n              <span title={toFixed(allowances, decimals)}>{toFixed(allowances, decimals, 6)}</span>\n            </Loading>\n          </span>\n        </p>\n      )}\n      {!isReciveToken && isSwapSuccess && (\n        // <p className={classes.swapSuccessContainer}>\n        //   {`Swap into ${toFixed(swapInfo?.bestSwapInfo?.toTokenAmount, receiveTokenDecimals)} (done: ${done})`}\n        // </p>\n        <p className={classes.swapSuccessContainer}>{`Swap into ${toFixed(swapInfo?.bestSwapInfo?.toTokenAmount, receiveTokenDecimals)}`}</p>\n      )}\n      {!isReciveToken && isSwapError && (\n        <div className={classes.swapErrorContainer} onClick={reloadSwap}>\n          <span>Swap path fetch error</span>&nbsp;&nbsp;\n          <RefreshIcon className={classes.reloadIcon} fontSize=\"small\" />\n        </div>\n      )}\n      {!isReciveToken && isFetching && (\n        <p className={classes.swappingContainer}>\n          <Loading className={classes.reloadIcon} loading /> &nbsp;&nbsp;\n          {/* <span>{`Swap path fetching (retryTimes: ${retryTimes}, fetching: ${isSwapInfoFetching}, calling: ${isStaticCalling})`}</span> */}\n          <span>Swap path fetching</span>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default forwardRef(TokenItem)\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  main: {\n    padding: '2rem 3rem',\n    color: '#A0A0A0',\n    background: 'linear-gradient(111.68deg, #2C2F36 7.59%, #333437 102.04%)',\n    borderRadius: '2.5rem'\n  },\n  title: {\n    paddingBottom: '1.5rem',\n    fontSize: '1.5rem',\n    lineHeight: '1.5rem',\n    textAlign: 'center'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  approveContainer: {\n    maxHeight: '20rem',\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0.5rem 0.5rem 0px 0px',\n    backgroundColor: '#1F2023',\n    overflowY: 'auto'\n  },\n  approveItemWrapper: {\n    paddingBottom: '0.5rem',\n    '&:last-child': {\n      padding: 0\n    }\n  },\n  success: {\n    border: '1px solid forestgreen'\n  },\n  swappingContainer: {\n    margin: 0,\n    color: '#A68EFD',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapSuccessContainer: {\n    margin: 0,\n    color: '#56CC8C',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapErrorContainer: {\n    height: '2rem',\n    border: '1px solid #F36767',\n    borderRadius: '0.625rem',\n    margin: 0,\n    color: '#F36767',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '2rem',\n    cursor: 'pointer'\n  },\n  approveItem: {\n    textAlign: 'left',\n    display: 'flex'\n  },\n  approveButton: {\n    margin: '12px 8px 8px'\n  },\n  balanceText: {\n    textAlign: 'left',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  errorText: {\n    color: '#ff7875'\n  },\n  errorContainer: {\n    border: '1px solid #ff7875',\n    margin: '2px 0'\n  },\n  successContainer: {\n    border: '1px solid forestgreen',\n    margin: '2px 0'\n  },\n  isSwappingContainer: {\n    border: '1px solid #A68EFE',\n    margin: '2px 0'\n  },\n  reciveContainer: {\n    background: 'linear-gradient(223.3deg, #A68EFD 20.71%, #F4ACF3 103.56%)'\n  },\n  slippage: {\n    padding: '0 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0px 0px 0.5rem 0.5rem',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  slippageTitlte: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  estimateContainer: {\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  estimateTitle: {\n    paddingBottom: '0.75rem'\n  },\n  estimateBalance: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  tokenList: {\n    padding: '0.5rem',\n    overflow: 'auto',\n    border: '1px solid rgb(166, 142, 254)',\n    borderRadius: '0.5rem'\n  },\n  arrow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    marginTop: '0.625rem'\n  },\n  okWrapper: {\n    paddingLeft: '1rem'\n  },\n  okButton: {\n    width: '100%'\n  },\n  cancelButton: {\n    width: '100%'\n  },\n  addToken: {\n    cursor: 'pointer'\n  },\n  swapError: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '1rem',\n    color: '#ff7875',\n    textAlign: 'left'\n  },\n  textOverflow: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  loading: {\n    animation: 'loading 1s linear infinite'\n  },\n  reloadIcon: {\n    cursor: 'pointer',\n    verticalAlign: 'text-bottom'\n  }\n})\n\nexport default componentsStyle\n","/* eslint-disable */\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\n// === Components === //\r\nimport GridContainer from '@/components/Grid/GridContainer'\r\nimport GridItem from '@/components/Grid/GridItem'\r\nimport SimpleSelect from '@/components/SimpleSelect'\r\nimport Button from '@/components/CustomButtons/Button'\r\nimport CustomTextField from '@/components/CustomTextField'\r\nimport Loading from '@/components/LoadingComponent'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport CachedIcon from '@material-ui/icons/Cached'\r\nimport TokenItem from '@/components/TokenItem'\r\n\r\n// === Utils === //\r\nimport { useDispatch } from 'react-redux'\r\nimport * as ethers from 'ethers'\r\nimport get from 'lodash/get'\r\nimport map from 'lodash/map'\r\nimport some from 'lodash/some'\r\nimport size from 'lodash/size'\r\nimport first from 'lodash/first'\r\nimport every from 'lodash/every'\r\nimport reduce from 'lodash/reduce'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport debounce from 'lodash/debounce'\r\nimport compact from 'lodash/compact'\r\nimport find from 'lodash/find'\r\nimport isNumber from 'lodash/isNumber'\r\nimport { toFixed } from '@/helpers/number-format'\r\nimport { warmDialog } from '@/reducers/meta-reducer'\r\nimport { errorTextOutput, isLossMuch } from '@/helpers/error-handler'\r\n\r\n// === Constants === //\r\nimport {\r\n  USDT_ADDRESS,\r\n  USDC_ADDRESS,\r\n  DAI_ADDRESS,\r\n  MULTIPLE_OF_GAS,\r\n  MAX_GAS_LIMIT\r\n} from '@/constants'\r\nimport { ETH_ADDRESS, WETH_ADDRESS } from '@/constants/tokens'\r\nimport { BN_6, BN_18 } from '@/constants/big-number'\r\n\r\n// === Styles === //\r\nimport styles from './style'\r\n\r\nconst { Contract, BigNumber } = ethers\r\nconst useStyles = makeStyles(styles)\r\nconst MAX_RETRY_TIME = 2\r\n\r\nconst ApproveArrayV2 = props => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    isEthi,\r\n    userProvider,\r\n    tokens,\r\n    address: userAddress,\r\n    exchangeManager,\r\n    EXCHANGE_AGGREGATOR_ABI,\r\n    EXCHANGE_ADAPTER_ABI,\r\n    handleClose\r\n  } = props\r\n\r\n  const refArray = map(tokens, () => useRef(null))\r\n  const [exchangePlatformAdapters, setExchangePlatformAdapters] = useState({})\r\n  const [receiveToken, setReceiveToken] = useState(isEthi ? ETH_ADDRESS : USDT_ADDRESS)\r\n  const [slippage, setSlippage] = useState('0.5')\r\n  const [isSwapping, setIsSwapping] = useState(false)\r\n  const [count, setCount] = useState(0)\r\n  const [callStateArray, setCallStateArray] = useState(map(tokens, () => undefined))\r\n\r\n  const swapInfoArray = map(refArray, item => get(item, 'current.swapInfo', {}))\r\n  // some tokens is fetching swap path\r\n  const someFetching = some(refArray, item => {\r\n    return get(item, 'current.isFetching')\r\n  })\r\n  // some tokens approve enough but not done\r\n  const someSwapError = () => {\r\n    return some(refArray, item => {\r\n      if (!item.current?.retryTimes) {\r\n        return false\r\n      }\r\n      return item.current.retryTimes > MAX_RETRY_TIME\r\n    })\r\n  }\r\n  // all tokens done\r\n  const allDone = () => {\r\n    return every(refArray, (item, index) => {\r\n      if (isReciveToken(index) || item.current.isEmptyValue()) {\r\n        return true\r\n      }\r\n      return get(item, 'current.done', true)\r\n    })\r\n  }\r\n  // check the receive token is current index?\r\n  const isReciveToken = index => {\r\n    return tokens[index]?.address === receiveToken\r\n  }\r\n  // check the slippage is valid or not\r\n  const isValidSlippage = () => {\r\n    if (isNaN(slippage)) return false\r\n    if (slippage < 0.01 || slippage > 45) return false\r\n    return true\r\n  }\r\n  // some error input value\r\n  const someErrorValue = some(refArray, item => {\r\n    const isErrorValue = get(item, 'current.isErrorValue')\r\n    if (typeof isErrorValue !== 'function') {\r\n      return false\r\n    }\r\n    return isErrorValue()\r\n  })\r\n\r\n  const receiveAmount = reduce(\r\n    refArray,\r\n    (rs, item) => {\r\n      if (!item.current?.swapInfo?.bestSwapInfo?.toTokenAmount) {\r\n        return rs\r\n      }\r\n      return rs.add(BigNumber.from(item.current.swapInfo.bestSwapInfo.toTokenAmount))\r\n    },\r\n    BigNumber.from(0)\r\n  )\r\n\r\n  const noNeedSwap = size(tokens) === 1 && get(first(tokens), 'address', '') === receiveToken\r\n\r\n  const getExchangePlatformAdapters = async (exchangeAggregator, userProvider) => {\r\n    const { _exchangeAdapters: adapters } = await exchangeAggregator.getExchangeAdapters()\r\n    const exchangeAdapters = {}\r\n    for (const address of adapters) {\r\n      const contract = new ethers.Contract(address, EXCHANGE_ADAPTER_ABI, userProvider)\r\n      exchangeAdapters[await contract.identifier()] = address\r\n    }\r\n    return exchangeAdapters\r\n  }\r\n\r\n  const selectOptions = isEthi\r\n    ? [\r\n        {\r\n          label: 'ETH',\r\n          value: ETH_ADDRESS,\r\n          img: `./images/${ETH_ADDRESS}.png`,\r\n          decimal: BN_18\r\n        }\r\n      ]\r\n    : [\r\n        {\r\n          label: 'USDT',\r\n          value: USDT_ADDRESS,\r\n          img: `./images/${USDT_ADDRESS}.png`,\r\n          decimal: BN_6\r\n        },\r\n        {\r\n          label: 'USDC',\r\n          value: USDC_ADDRESS,\r\n          img: `./images/${USDC_ADDRESS}.png`,\r\n          decimal: BN_6\r\n        },\r\n        {\r\n          label: 'DAI',\r\n          value: DAI_ADDRESS,\r\n          img: `./images/${DAI_ADDRESS}.png`,\r\n          decimal: BN_18\r\n        }\r\n      ]\r\n\r\n  const receiveTokenDecimals = selectOptions.find(el => el.value === receiveToken).decimal\r\n  const receiveTokenAmount = find(tokens, el => el.address === receiveToken)?.amount || '0'\r\n\r\n  const approveAll = async () => {\r\n    // console.groupCollapsed('approveAll call')\r\n    try {\r\n      for (let i = 0; i < tokens.length; i++) {\r\n        // console.log(`tokens[${i}] isReciveToken=`, isReciveToken(i))\r\n        if (isReciveToken(i)) continue\r\n        const enough = refArray[i].current.isApproveEnough()\r\n        // console.log(`refArray[${i}] isApproveEnough=`, enough)\r\n        if (enough) continue\r\n        await refArray[i].current.approve()\r\n      }\r\n    } catch (error) {\r\n      setIsSwapping(false)\r\n      const message = errorTextOutput(error)\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message\r\n        })\r\n      )\r\n      // console.groupEnd('approveAll call')\r\n      return\r\n    }\r\n    const someApproveNotEnough = some(refArray, item => {\r\n      if (!item.current) {\r\n        return false\r\n      }\r\n      return !item.current.isApproveEnough()\r\n    })\r\n    if (someApproveNotEnough) {\r\n      setIsSwapping(false)\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message: 'Allowance not enough'\r\n        })\r\n      )\r\n      return\r\n    }\r\n    // console.groupEnd('approveAll call')\r\n  }\r\n\r\n  // All done, swap\r\n  const batchSwap = debounce(async () => {\r\n    console.groupCollapsed('batchSwap call')\r\n    const nextSwapArray = compact(\r\n      map(swapInfoArray, item => {\r\n        if (isEmpty(item) || item instanceof Error) return\r\n        const {\r\n          bestSwapInfo: { platform, method, encodeExchangeArgs },\r\n          info\r\n        } = item\r\n        return {\r\n          platform,\r\n          method,\r\n          data: encodeExchangeArgs,\r\n          swapDescription: info\r\n        }\r\n      })\r\n    )\r\n    console.log('nextSwapArray=', nextSwapArray)\r\n    const constract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\r\n    const signer = userProvider.getSigner()\r\n    const contractWithSigner = constract.connect(signer)\r\n\r\n    try {\r\n      let tx\r\n      // if gasLimit times not 1, need estimateGas\r\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\r\n        const gas = await contractWithSigner.estimateGas.batchSwap(nextSwapArray)\r\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\r\n        // gasLimit not exceed maximum\r\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\r\n        tx = await contractWithSigner.batchSwap(nextSwapArray, {\r\n          gasLimit: maxGasLimit\r\n        })\r\n      } else {\r\n        tx = await contractWithSigner.batchSwap(nextSwapArray)\r\n      }\r\n      await tx.wait()\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'success',\r\n          message: 'Swap Success!'\r\n        })\r\n      )\r\n      handleClose()\r\n    } catch (error) {\r\n      console.log('batchSwap error:', error)\r\n      const errorMsg = errorTextOutput(error)\r\n      let message = 'Swap Failed, please retry.'\r\n      if (isLossMuch(errorMsg)) {\r\n        message = 'Swap Failed, please increase the slippage and retry.'\r\n      } else if (error.code === 4001) {\r\n        message = errorMsg\r\n      }\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message\r\n        })\r\n      )\r\n      setIsSwapping(false)\r\n    }\r\n    console.groupEnd('batchSwap call')\r\n  }, 500)\r\n\r\n  const clickSwap = () => {\r\n    // console.groupCollapsed('clickSwap call')\r\n    setIsSwapping(true)\r\n    if (allDone()) {\r\n      batchSwap()\r\n    } else {\r\n      approveAll()\r\n    }\r\n    // console.groupEnd('clickSwap call')\r\n  }\r\n\r\n  // when child state change, reRender component\r\n  const onChildStateChange = useCallback(() => {\r\n    setCount(Math.random())\r\n  }, [])\r\n\r\n  const onStaticCallFinish = useCallback(\r\n    (index, bool, error) => {\r\n      console.groupCollapsed(`onStaticCallFinish call ${index} ${bool}`)\r\n      const nextArray = map(callStateArray, (item, i) => {\r\n        if (isReciveToken(i) || refArray[i].current.isEmptyValue()) {\r\n          return true\r\n        }\r\n        if (i === index) {\r\n          return bool\r\n        }\r\n        return item\r\n      })\r\n      setCallStateArray(nextArray)\r\n      console.log('nextArray', nextArray)\r\n      if (!isSwapping) {\r\n        console.log('isSwapping', isSwapping)\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      const allFinish = every(nextArray, item => item !== undefined)\r\n      if (!allFinish) {\r\n        console.log('allFinish', allFinish)\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      const someError = some(nextArray, item => item === false)\r\n      if (someError) {\r\n        console.log('someError', someError)\r\n        setIsSwapping(false)\r\n        let message = 'Swap Failed, please retry.'\r\n        if (error) {\r\n          const errorMsg = errorTextOutput(error)\r\n          if (isLossMuch(errorMsg)) {\r\n            message = 'Swap Failed, please increase the slippage and retry.'\r\n          }\r\n        }\r\n        dispatch(\r\n          warmDialog({\r\n            open: true,\r\n            type: 'error',\r\n            message\r\n          })\r\n        )\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n      batchSwap()\r\n    },\r\n    [callStateArray, isSwapping]\r\n  )\r\n\r\n  const onReceiveChange = v => {\r\n    if (someFetching) {\r\n      return\r\n    }\r\n    setReceiveToken(v)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAdapters() {\r\n      // console.groupCollapsed(`getAdapters useEffect call:${++sycIndex}`)\r\n      const exchangeManagerContract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\r\n      const exchangeAdapters = await getExchangePlatformAdapters(exchangeManagerContract, userProvider)\r\n      // console.log('exchangeAdapters', exchangeAdapters)\r\n      setExchangePlatformAdapters(exchangeAdapters)\r\n      // console.groupEnd(`getAdapters useEffect call:${sycIndex}`)\r\n    }\r\n    getAdapters()\r\n  }, [exchangeManager])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.title}>Swap to single token</div>\r\n      <div className={classes.approveContainer}>\r\n        <div>Swap tokens:</div>\r\n        {map(tokens, (token, index) => {\r\n          const style = {}\r\n          if (token.amount === '0' || (tokens.length > 1 && isReciveToken(index))) {\r\n            style.display = 'none'\r\n          }\r\n          return (\r\n            <TokenItem\r\n              style={style}\r\n              ref={refArray[index]}\r\n              key={`${token.address}-${receiveToken}`}\r\n              userAddress={userAddress}\r\n              userProvider={userProvider}\r\n              token={token}\r\n              slippage={slippage}\r\n              receiveToken={receiveToken}\r\n              exchangeManager={exchangeManager}\r\n              exchangePlatformAdapters={exchangePlatformAdapters}\r\n              receiveTokenDecimals={receiveTokenDecimals}\r\n              EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\r\n              disabled={isSwapping}\r\n              onChange={onChildStateChange}\r\n              onStaticCallFinish={(bool, error) => {\r\n                onStaticCallFinish(index, bool, error)\r\n              }}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      <div className={classes.estimateContainer}>\r\n        <div className={classes.estimateTitle}>To receive estimated:</div>\r\n        <GridContainer>\r\n          <GridItem xs={4} sm={4} md={4}>\r\n            <SimpleSelect\r\n              options={selectOptions}\r\n              disabled={selectOptions.length <= 1 || isSwapping || someFetching}\r\n              value={receiveToken}\r\n              onChange={v => onReceiveChange(v)}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={8} sm={8} md={8} className={classes.estimateBalance}>\r\n            <Loading loading={someFetching} className={classes.reloadIcon}>\r\n              <div className={classes.textOverflow}>{toFixed(receiveAmount, receiveTokenDecimals, 6)} from token swap</div>\r\n              {receiveTokenAmount !== '0' && <div>{`+${toFixed(receiveTokenAmount, receiveTokenDecimals, 6)}`} from withdrawal</div>}\r\n            </Loading>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n      <GridContainer className={classes.slippage}>\r\n        <GridItem xs={4} sm={4} md={4} className={classes.slippageTitlte}>\r\n          Slippage tolerance:\r\n        </GridItem>\r\n        <GridItem xs={8} sm={8} md={8}>\r\n          <CustomTextField\r\n            value={slippage}\r\n            placeholder=\"Allow slippage percent\"\r\n            maxEndAdornment\r\n            disabled={isSwapping || someFetching}\r\n            onMaxClick={() => setSlippage('45')}\r\n            onChange={e => setSlippage(e.target.value)}\r\n            error={!isValidSlippage()}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer className={classes.buttonGroup}>\r\n        <GridItem xs={4} sm={4} md={4}>\r\n          <Button color=\"danger\" onClick={handleClose} className={classes.cancelButton}>\r\n            Cancel\r\n          </Button>\r\n        </GridItem>\r\n        <GridItem xs={8} sm={8} md={8} className={classes.okWrapper}>\r\n          <Button\r\n            color=\"colorfull\"\r\n            onClick={clickSwap}\r\n            disabled={noNeedSwap || someFetching || isSwapping || someSwapError() || !isValidSlippage() || receiveAmount.lte(0) || someErrorValue}\r\n            className={classes.okButton}\r\n            startIcon={isSwapping ? <CachedIcon className={classes.loading} /> : null}\r\n          >\r\n            Swap\r\n          </Button>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nApproveArrayV2.propTypes = {\r\n  address: PropTypes.string.isRequired,\r\n  exchangeManager: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ApproveArrayV2\r\n","export const DAY = 'DAY'\n\nexport const WEEK = 'WEEK'\n\nexport const MONTH = 'MONTH'\n\nexport const SEGMENT_TYPES = [DAY, WEEK, MONTH]\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@/components/Card'\nimport { LineEchart, BarEchart } from '@/components/Echarts'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\n// === Services === //\nimport getLineEchartOpt from '@/components/Echarts/options/line/getLineEchartOpt'\nimport { getSegmentProfit } from '@/services/api-service'\n\n// === Hooks === //\nimport usePersonalData from '@/hooks/usePersonalData'\n\n// === Utils === //\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport map from 'lodash/map'\nimport reverse from 'lodash/reverse'\nimport isEmpty from 'lodash/isEmpty'\nimport findIndex from 'lodash/findIndex'\nimport { toFixed } from '@/helpers/number-format'\n\n// === Constants === //\nimport { SEGMENT_TYPES, DAY, WEEK, MONTH } from '@/constants/date'\nimport { ETHI_BN_DECIMALS, ETHI_DISPLAY_DECIMALS, ETHI_PROFITS_DISPLAY_DECIMALS } from '@/constants/ethi'\nimport { TOKEN_DISPLAY_DECIMALS } from '@/constants/vault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\n\nconst getMarker = color => {\n  return `<span style=\"display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:${color};\"></span>`\n}\n\nconst MyStatement = props => {\n  const { address, type, chain } = props\n\n  const isUSDi = type === 'USDi'\n  const classes = useStyles()\n\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [segmentType, setSegmentType] = useState(DAY)\n  const [optionForLineChart, setOptionForLineChart] = useState({})\n  const [optionForBarChart, setOptionForBarChart] = useState({})\n  const { dataSource, loading: chartLoading } = usePersonalData(chain, type, address, type)\n\n  const titleRender = (title = '') => {\n    const isWeek = segmentType === WEEK\n    if (isWeek) {\n      const [, index] = title.split('-')\n      return `No.${index}`\n    }\n    const isMonth = segmentType === MONTH\n    if (isMonth) {\n      return `${moment(title).format('MMM')}.`\n    }\n\n    const isDay = segmentType === DAY\n    if (isDay) {\n      const [, m, d] = title.split('-')\n      return `${m}-${d}`\n    }\n    return title\n  }\n\n  useEffect(() => {\n    if (isEmpty(segmentType)) return\n    setLoading(true)\n    getSegmentProfit(address, chain, type, segmentType)\n      .then(resp => {\n        setData(\n          map(reverse(resp.profits), i => {\n            return {\n              ...i,\n              segmentTime: titleRender(i.segmentTime),\n              value: 1 * i.profit\n            }\n          })\n        )\n      })\n      .finally(() =>\n        setTimeout(() => {\n          setLoading(false)\n        }, 500)\n      )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chain, address, type, segmentType])\n\n  useEffect(() => {\n    const { tvls = [] } = dataSource\n    // https://github.com/PiggyFinance/dashboard/issues/166\n    const reverseArray = reverse([...tvls])\n    const continuousIndex = findIndex(reverseArray, (item, index) => {\n      if (index <= 2) return false\n      if (index === reverseArray.length) return true\n      return Math.abs(item.balance - reverseArray[index - 1].balance) > item.balance * 0.005\n    })\n    const startPercent = continuousIndex === -1 ? 0 : 100.5 - (100 * continuousIndex) / tvls.length\n    const option1 = getLineEchartOpt(tvls, 'balance', dataSource.token, {\n      format: 'MM-DD',\n      tootlTipFormat: 'YYYY-MM-DD',\n      dataZoom: [\n        {\n          start: startPercent,\n          end: 100\n        }\n      ],\n      xAxis: {\n        axisTick: {\n          alignWithLabel: true\n        }\n      },\n      tootlTipSuffix: ''\n    })\n    console.log('option1=', option1)\n    setOptionForLineChart(option1)\n  }, [dataSource, address])\n\n  useEffect(() => {\n    const option = {\n      title: {\n        show: true,\n        textStyle: {\n          color: 'rgb(157 157 157)',\n          fontSize: 25\n        },\n        text: isEmpty(data) ? 'No Data' : '',\n        left: 'center',\n        top: 'center'\n      },\n      textStyle: {\n        color: '#fff'\n      },\n      color: ['#A68EFE', '#5470c6'],\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        },\n        formatter: function (params) {\n          const param = params[0]\n          let message = ''\n          message += `${param.name}`\n          message += `<br/>${param.marker}${param.seriesName}: ${toFixed(\n            `${param.value}`,\n            1,\n            isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_PROFITS_DISPLAY_DECIMALS\n          )}`\n          if (segmentType === WEEK) {\n            message += `<br/>${getMarker('#fff')}Begin: ${param.data.segmentBegin}`\n            message += `<br/>${getMarker('#fff')}End: ${param.data.segmentEnd}`\n          }\n          return message\n        }\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        top: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        data: map(data, 'segmentTime'),\n        axisLine: { onZero: true },\n        splitLine: { show: false },\n        splitArea: { show: false },\n        axisTick: {\n          alignWithLabel: true\n        }\n      },\n      yAxis: {\n        splitLine: {\n          lineStyle: {\n            color: '#454459'\n          }\n        }\n      },\n      series: [\n        {\n          name: 'Profits',\n          type: 'bar',\n          data: data\n        }\n      ]\n    }\n    setOptionForBarChart(option)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, address])\n\n  const { day7Apy, day30Apy, profit, latestProfit = { profit: '0', tokenType: '' } } = dataSource\n  const cardProps = [\n    {\n      title: 'Profits',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Total profits from BoC that are withdrawable and cumulative.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed(profit, ETHI_BN_DECIMALS, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      footer: (\n        <span>\n          {`+${numeral(latestProfit?.profit).format(isUSDi ? '0,0.[00]' : '0,0.[000000]')} ${latestProfit?.tokenType}`}&nbsp;&nbsp;\n          <Tooltip\n            classes={{\n              tooltip: classes.tooltip\n            }}\n            placement=\"right\"\n            title={'Profits obtained each time after rebase.'}\n          >\n            <InfoIcon style={{ fontSize: '0.875rem', color: 'rgba(255,255,255,0.45)' }} />\n          </Tooltip>\n        </span>\n      ),\n      unit: latestProfit?.tokenType\n    },\n    {\n      title: 'APY (last 7 days)',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past week.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(day7Apy?.apy).format('0,0.00'),\n      isAPY: true,\n      unit: '%'\n    },\n    {\n      title: 'APY (last 30 days)',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past month.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(day30Apy?.apy).format('0,0.00'),\n      isAPY: true,\n      unit: '%'\n    }\n  ]\n\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12} lg={12}>\n        <GridContainer spacing={2}>\n          {map(cardProps, (i, index) => {\n            return (\n              <GridItem key={index} xs={12} sm={12} md={4} lg={4}>\n                <Card {...i} />\n              </GridItem>\n            )\n          })}\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  {isUSDi ? 'USDi' : 'ETHi'} variation curve\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.barChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={loading}\n              title=\"Profits\"\n              tip={\n                <ButtonGroup\n                  classes={{\n                    groupedOutlinedPrimary: classes.groupedOutlinedPrimary\n                  }}\n                  value={segmentType}\n                  size=\"small\"\n                  color=\"primary\"\n                >\n                  {map(SEGMENT_TYPES, (value, key) => (\n                    <Button\n                      className={classnames({ [classes.groupButtonCheck]: value === segmentType })}\n                      onClick={() => setSegmentType(value)}\n                      key={key}\n                    >\n                      {value}\n                    </Button>\n                  ))}\n                </ButtonGroup>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <BarEchart option={optionForBarChart} style={{ minHeight: '20rem', width: '100%' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </GridItem>\n    </GridContainer>\n  )\n}\n\nexport default MyStatement\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  depositContainer: {\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem',\n    padding: '2.6875rem 2.25rem'\n  },\n  estimateContainer: {\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n    padding: '2.0625rem 2.6875rem'\n  },\n  estimateText: {\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  tokenInputWrapper: {\n    marginBottom: '16px'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  depositComfirmArea: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  flexText: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  ModalTokenLogo: {\n    width: 25,\n    borderRadius: '50%',\n    margin: '0 8px'\n  },\n  labelToolTipIcon: {\n    fontSize: 16\n  },\n  depositModal: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem'\n  },\n  root: {\n    padding: '1.5rem 0'\n  },\n  item: {\n    paddingTop: '3rem'\n  },\n  subTitle: {\n    color: '#A68EFE'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport isUndefined from 'lodash/isUndefined'\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport isNumber from 'lodash/isNumber'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport Step from '@material-ui/core/Step'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Typography from '@material-ui/core/Typography'\nimport Loading from '@/components/LoadingComponent'\n\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport CustomTextField from '@/components/CustomTextField'\nimport Button from '@/components/CustomButtons/Button'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\n\n// === Utils === //\nimport noop from 'lodash/noop'\nimport { getLastPossibleRebaseTime } from '@/helpers/time-util'\nimport { isAd, isEs, isRp, isDistributing, errorTextOutput, isLessThanMinValue } from '@/helpers/error-handler'\nimport { BN_18 } from '@/constants/big-number'\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\n\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = ['Step1: Deposit', 'Get ETHi Ticket', 'Step2: Allocation Action', 'Get ETHi']\n\nexport default function Deposit({\n  address,\n  ethBalance,\n  ethDecimals,\n  ethiDecimals,\n  userProvider,\n  VAULT_ABI,\n  VAULT_ADDRESS,\n  ETH_ADDRESS,\n  vaultBufferBalance,\n  vaultBufferDecimals,\n  isBalanceLoading,\n  minimumInvestmentAmount\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [ethValue, setEthValue] = useState('')\n  const [mintGasLimit, setMintGasLimit] = useState(BigNumber.from('174107'))\n  const [gasPriceCurrent, setGasPriceCurrent] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [isEstimate, setIsEstimate] = useState(false)\n  const [isOpenEstimateModal, setIsOpenEstimateModal] = useState(false)\n  const [estimateVaultBuffValue, setEstimateVaultBuffValue] = useState(BigNumber.from(0))\n  const loadingTimer = useRef()\n\n  const nextRebaseTime = getLastPossibleRebaseTime()\n  const getGasFee = () => {\n    if (!gasPriceCurrent) {\n      return BigNumber.from(0)\n    }\n    const gasPrice = BigNumber.from(parseInt(gasPriceCurrent, 16).toString())\n    // metamask gaslimit great than contract gaslimit, so add extra limit\n    const metamaskExtraLimit = 114\n    return mintGasLimit.add(metamaskExtraLimit).mul(gasPrice)\n  }\n\n  /**\n   * check if value is valid\n   * @returns\n   */\n  function isValidValue() {\n    const balance = ethBalance\n    const decimals = ethDecimals\n    const value = ethValue\n    if (value === '' || value === '-' || value === '0' || isEmpty(value.replace(/ /g, ''))) return\n    // not a number\n    if (isNaN(Number(value))) return false\n    const nextValue = BN(value)\n    const nextFromValue = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    // less than 0\n    if (nextFromValue.lte(0)) return false\n    // value should be integer\n    const nextFromValueString = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    if (nextFromValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (balance.lt(BigNumber.from(nextFromValue.toFixed()))) return false\n\n    if (balance.sub(BigNumber.from(nextFromValue.toFixed())).lt(getGasFee())) return false\n\n    return true\n  }\n\n  const handleInputChange = event => {\n    setIsEstimate(true)\n    setEthValue(event.target.value)\n  }\n\n  const handleMaxClick = () => {\n    const v = getGasFee()\n    if (v.lte(0)) {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Since the latest Gasprice is not available, it is impossible to estimate the gas fee currently!'\n        })\n      )\n      return\n    }\n    const maxValue = ethBalance.sub(v)\n    setEthValue(\n      formatBalance(maxValue.gt(0) ? maxValue : 0, ethDecimals, {\n        showAll: true\n      })\n    )\n  }\n\n  const diposit = async () => {\n    clearTimeout(loadingTimer.current)\n    const isValid = isValidValue()\n    if (!isValid) {\n      return dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Please enter the correct value'\n        })\n      )\n    }\n    setIsLoading(true)\n    const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n    console.log('nextTokens=', ETH_ADDRESS, amount)\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    let isSuccess = false\n\n    const extendObj = {}\n    // if gasLimit times not 1, need estimateGas\n    if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n      const gas = await nVaultWithUser.estimateGas.mint(ETH_ADDRESS, amount, 0, { from: address, value: amount })\n      const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n      // gasLimit not exceed maximum\n      const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n      extendObj.gasLimit = maxGasLimit\n    }\n    await nVaultWithUser\n      .mint(ETH_ADDRESS, amount, 0, {\n        ...extendObj,\n        from: address,\n        value: amount\n      })\n      .then(tx => tx.wait())\n      .then(() => {\n        isSuccess = true\n      })\n      .catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        setIsLoading(false)\n      })\n\n    if (isSuccess) {\n      setEthValue('')\n    }\n\n    loadingTimer.current = setTimeout(() => {\n      setIsLoading(false)\n      setIsOpenEstimateModal(false)\n      if (isSuccess) {\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'success',\n            message: 'Success!'\n          })\n        )\n      }\n    }, 2000)\n  }\n\n  const estimateMint = useCallback(\n    debounce(async () => {\n      const isValid = isValidValue()\n      if (!isValid) {\n        setIsEstimate(false)\n        setEstimateVaultBuffValue(BigNumber.from(0))\n        return\n      }\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n      const result = await vaultContract.estimateMint(ETH_ADDRESS, amount).catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        return BigNumber.from(0)\n      })\n      setEstimateVaultBuffValue(result)\n      setIsEstimate(false)\n    }, 1500)\n  )\n\n  /**\n   *\n   */\n  const openEstimateModal = () => {\n    setIsOpenEstimateModal(true)\n  }\n\n  useEffect(() => {\n    estimateMint()\n    return () => estimateMint.cancel()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethValue])\n\n  // get gasprice per 15s\n  useEffect(() => {\n    if (!userProvider) {\n      return\n    }\n    userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    const timer = setInterval(() => {\n      userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    }, 15000)\n    return () => clearInterval(timer)\n  }, [userProvider])\n\n  useEffect(() => {\n    const estimatedUsedValue = BigNumber.from(10).pow(ethDecimals)\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI) || ethBalance.lt(estimatedUsedValue)) {\n      return\n    }\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    nVaultWithUser.estimateGas\n      .mint(ETH_ADDRESS, estimatedUsedValue, {\n        from: address,\n        value: estimatedUsedValue\n      })\n      .then(setMintGasLimit)\n      .catch(noop)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS, ethBalance, VAULT_ABI])\n\n  const isLogin = !isEmpty(userProvider)\n  const isValid = isValidValue()\n\n  return (\n    <>\n      <GridContainer classes={{ root: classes.depositContainer }}>\n        <p className={classes.estimateText}>From</p>\n        <GridItem xs={12} sm={12} md={12} lg={12} className={classes.tokenInputWrapper}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <div className={classes.inputLabelWrapper}>\n                <div className={classes.tokenInfo}>\n                  <img className={classes.tokenLogo} alt=\"\" src={`./images/0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE.png`} />\n                  <span className={classes.tokenName}>ETH</span>\n                </div>\n                <CustomTextField\n                  classes={{ root: classes.input }}\n                  value={ethValue}\n                  onChange={handleInputChange}\n                  placeholder=\"deposit amount\"\n                  maxEndAdornment\n                  onMaxClick={handleMaxClick}\n                  error={!isUndefined(isValid) && !isValid}\n                />\n              </div>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <p\n                className={classes.estimateText}\n                title={formatBalance(ethBalance, ethDecimals, {\n                  showAll: true\n                })}\n              >\n                Balance:&nbsp;&nbsp;\n                <Loading loading={isBalanceLoading}>{formatBalance(ethBalance, ethDecimals)}</Loading>\n              </p>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n      <GridContainer classes={{ root: classes.estimateContainer }}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n          <p className={classes.estimateBalanceTitle}>\n            ETHi Ticket:\n            <span className={classes.estimateBalanceNum}>\n              <Loading loading={isEstimate}>{toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}</Loading>\n            </span>\n          </p>\n          <p className={classes.estimateText}>Estimated Gas Fee: {toFixed(getGasFee(), BigNumber.from(10).pow(ethDecimals), 6)} ETH</p>\n          <p className={classes.estimateText} style={{ marginTop: '1rem' }}>\n            Balance:&nbsp;&nbsp;\n            <span>\n              <Loading loading={isBalanceLoading}>{formatBalance(vaultBufferBalance, vaultBufferDecimals)}</Loading>\n            </span>\n          </p>\n        </GridItem>\n        {isEmpty(VAULT_ADDRESS) && (\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <p style={{ textAlign: 'center', color: 'red' }}>Switch to the ETH chain firstly!</p>\n          </GridItem>\n        )}\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button disabled={!isLogin || (isLogin && !isValid)} color=\"colorfull\" onClick={openEstimateModal} style={{ width: '100%' }}>\n              Deposit\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isOpenEstimateModal} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <BocStepper\n            classes={{\n              root: classes.root\n            }}\n            alternativeLabel\n            activeStep={1}\n            connector={<BocStepConnector />}\n          >\n            {map(steps, (i, index) => {\n              return (\n                <Step key={index}>\n                  <BocStepLabel StepIconComponent={BocStepIcon}>{i}</BocStepLabel>\n                </Step>\n              )\n            })}\n          </BocStepper>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Deposit Amounts:&nbsp;\n                <span key={address} className={classes.flexText}>\n                  <span style={{ color: 'chocolate', marginRight: 5 }}>{ethValue}</span> ETH&nbsp;\n                  <img className={classes.ModalTokenLogo} alt=\"\" src={'./images/0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE.png'} />\n                </span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Estimate User Get:&nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  &nbsp; + {toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}\n                  &nbsp;\n                </span>\n                &nbsp; ETHi Tickets\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"Estimated amount of ETHi that can be exchanged\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;From&nbsp;\n                <span style={{ color: 'chocolate' }}>{toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}</span>\n                &nbsp; ETHi Tickets <span style={{ fontWeight: 'bold', color: 'dimgrey' }}>To</span>\n                &nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  {toFixed(estimateVaultBuffValue.mul(9987).div(10000), BigNumber.from(10).pow(ethiDecimals), 2)}\n                </span>\n                &nbsp; ETHi\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange Time&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"The latest planned execution date may not be executed due to cost and other factors\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;\n                <span style={{ color: 'chocolate' }}>{moment(nextRebaseTime).format('YYYY-MM-DD HH:mm:ss')}</span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item} style={{ textAlign: 'center' }}>\n              <Button color=\"colorfull\" onClick={diposit} style={{ width: '50%' }}>\n                Continue\n              </Button>\n              <Button style={{ marginLeft: 20 }} color=\"danger\" onClick={() => setIsOpenEstimateModal(false)}>\n                Cancel\n              </Button>\n            </GridItem>\n          </GridContainer>\n        </Paper>\n      </Modal>\n      <Modal className={classes.modal} open={isLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <div className={classes.modalBody}>\n            <CircularProgress color=\"inherit\" />\n            <p>On Deposit...</p>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\nconst { Contract } = ethers\n\nconst usePriceProvider = params => {\n  const { userProvider, VAULT_ADDRESS, VAULT_ABI, PRICE_ORCALE_ABI } = params\n\n  const getPriceProvider = async () => {\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS)) {\n      throw new Error('userProvider or VAULT_ADDRESS is empty')\n    }\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    return vaultContract.priceProvider().then(priceOracleAddress => {\n      const priceOracleContract = new Contract(priceOracleAddress, PRICE_ORCALE_ABI, userProvider)\n      return priceOracleContract\n    })\n  }\n\n  return {\n    getPriceProvider\n  }\n}\n\nexport default usePriceProvider\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  swapBody: {\n    width: '42rem',\n    outline: 0\n  },\n  withdrawContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  outputContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem'\n  },\n  estimateText: {\n    height: '1.25rem',\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex',\n    marginTop: '0.5rem',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  receiveTokenItem: {\n    marginBottom: 0\n  },\n  settingBtn: {\n    color: '#39d0d8',\n    textAlign: 'right',\n    lineHeight: '36px',\n    padding: '10px 0',\n    marginRight: '16px'\n  },\n  settingTitle: {\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: '0.01071em',\n    lineHeight: 1.5,\n    textAlign: 'center',\n    width: '100%'\n  },\n  settingItem: {\n    height: 38,\n    lineHeight: '38px',\n    marginBottom: 16,\n    '&:first-child': {\n      marginTop: 24\n    }\n  },\n  settingItemLabel: {\n    position: 'relative',\n    minWidth: 100,\n    marginRight: 16,\n    textAlign: 'right'\n  },\n  mutedLabel: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  maxLossFormCtrl: {\n    width: '160px'\n  },\n  exchanged: {\n    position: 'relative',\n    paddingLeft: 16\n  },\n  tooltip: {\n    fontSize: '14px'\n  },\n  labelToolTipIcon: {\n    position: 'absolute',\n    left: '-18px',\n    top: '50%',\n    color: '#fff',\n    fontSize: 16,\n    transform: 'translate(0, -50%)'\n  },\n  slippageItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  slippageInput: {\n    width: 96,\n    marginLeft: 16\n  },\n  widthdrawLoadingPaper: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem',\n    width: '100%'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  estimateItem: {\n    textAlign: 'center',\n    minHeight: '100px',\n    color: '#A0A0A0',\n    paddingTop: '35px'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  popover: {\n    width: '15rem',\n    background: '#292B2E',\n    border: ' 1px solid #666666',\n    borderRadius: '1.25rem',\n    padding: '1rem'\n  },\n  popoverTitle: {\n    color: '#A0A0A0',\n    margin: 0,\n    padding: '0.5rem 0'\n  },\n  root: {\n    padding: '1.5rem 0'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport AddIcon from '@material-ui/icons/Add'\nimport Step from '@material-ui/core/Step'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Popover from '@material-ui/core/Popover'\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state'\nimport Box from '@material-ui/core/Box'\n\nimport CustomTextField from '@/components/CustomTextField'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Loading from '@/components/LoadingComponent'\nimport ApproveArrayV2 from '@/components/ApproveArray/ApproveArrayV2'\n\n// === Hooks === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport useRedeemFeeBps from '@/hooks/useRedeemFeeBps'\nimport usePriceProvider from '@/hooks/usePriceProvider'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport map from 'lodash/map'\nimport get from 'lodash/get'\nimport debounce from 'lodash/debounce'\nimport compact from 'lodash/compact'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\nimport { isAd, isEs, isRp, isMaxLoss, isLossMuch, isExchangeFail, errorTextOutput } from '@/helpers/error-handler'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT, IERC20_ABI } from '@/constants'\n// import { WETH_ADDRESS } from '@/constants/tokens'\nimport { BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\nimport { some } from 'lodash'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = [{ title: 'Shares Validation' }, { title: 'Gas Estimates' }, { title: 'Withdraw' }]\n\nconst WITHDRAW_EXCHANGE_THRESHOLD = BigNumber.from(10).pow(16)\n\nexport default function Withdraw({\n  address,\n  exchangeManager,\n  ethiBalance,\n  ethiDecimals,\n  userProvider,\n  ETH_ADDRESS,\n  VAULT_ADDRESS,\n  VAULT_ABI,\n  EXCHANGE_AGGREGATOR_ABI,\n  EXCHANGE_ADAPTER_ABI,\n  isBalanceLoading,\n  reloadBalance,\n  PRICE_ORCALE_ABI\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [toValue, setToValue] = useState('')\n  const [allowMaxLoss, setAllowMaxLoss] = useState('0.3')\n  const [slipper, setSlipper] = useState('0.3')\n  const [estimateWithdrawArray, setEstimateWithdrawArray] = useState([])\n  const [isEstimate, setIsEstimate] = useState(false)\n  const [isWithdrawLoading, setIsWithdrawLoading] = useState(false)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [withdrawError, setWithdrawError] = useState({})\n\n  const [burnTokens, setBurnTokens] = useState([\n    // {\n    //   address: ETH_ADDRESS,\n    //   amount: '10000000000000000000'\n    // },\n    // {\n    //   address: WETH_ADDRESS,\n    //   amount: '1000000000000000000'\n    // }\n  ])\n  const [isShowZipModal, setIsShowZipModal] = useState(false)\n\n  const [pegTokenPrice, setPegTokenPrice] = useState(BN_18)\n\n  const { value: redeemFeeBps } = useRedeemFeeBps({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI\n  })\n\n  const { getPriceProvider } = usePriceProvider({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    PRICE_ORCALE_ABI\n  })\n\n  const redeemFeeBpsPercent = redeemFeeBps.toNumber() / 100\n\n  const estimateWithdraw = useCallback(\n    debounce(async () => {\n      setIsEstimate(true)\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n      const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n      const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n        .mul(usdValue)\n        .div(BigNumber.from(1e4))\n      const signer = userProvider.getSigner()\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      try {\n        const [tokens, amounts] = await vaultContractWithSigner.callStatic.burn(nextValue, allowMaxLossValue)\n        console.log('estimate withdraw result:', tokens, amounts)\n        let nextEstimateWithdrawArray = compact(\n          await Promise.all(\n            map(tokens, async (token, index) => {\n              const amount = get(amounts, index, BigNumber.from(0))\n              if (amount.gt(0)) {\n                return {\n                  tokenAddress: token,\n                  decimals: ethiDecimals,\n                  amounts: amount\n                }\n              }\n            })\n          )\n        )\n\n        setEstimateWithdrawArray(nextEstimateWithdrawArray)\n      } catch (error) {\n        console.log('estimate withdraw error', error)\n        console.log('withdraw original error :', error)\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isMaxLoss(errorMsg)) {\n          tip = 'Failed to withdraw, please increase the Max Loss!'\n        } else if (isLossMuch(errorMsg)) {\n          tip = 'Failed to exchange, please increase the exchange slippage!'\n        } else if (isExchangeFail(errorMsg)) {\n          tip = 'Failed to exchange, Please try again later!'\n        } else {\n          tip = errorMsg\n        }\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'error',\n            message: tip\n          })\n        )\n        setEstimateWithdrawArray(undefined)\n      } finally {\n        setTimeout(() => {\n          setIsEstimate(false)\n        }, 500)\n      }\n    }, 1500)\n  )\n\n  const handleBurn = async (a, b, c, d, tokens, amounts) => {\n    console.log('handleBurn')\n    console.log('tokens', tokens)\n    console.log(\n      'amounts',\n      amounts.map(el => el.toString())\n    )\n    const priceProvider = await getPriceProvider()\n    return Promise.all(\n      map(tokens, async (token, i) => {\n        const amount = toFixed(amounts[i], 1)\n        const amountsInEth = await priceProvider.valueInEth(token, amount)\n        if (WITHDRAW_EXCHANGE_THRESHOLD.gt(amountsInEth)) {\n          return\n        }\n\n        let balance = BigNumber.from(0)\n        if (token === ETH_ADDRESS) {\n          balance = await userProvider.getBalance(address)\n        } else {\n          const contract = new ethers.Contract(token, IERC20_ABI, userProvider)\n          balance = await contract.balanceOf(address)\n        }\n\n        return {\n          address: token,\n          amount: balance.gt(amounts[i]) ? amount : balance.toString()\n        }\n      })\n    ).then(array => {\n      const nextBurnTokens = compact(array)\n      if (\n        some(nextBurnTokens, i => {\n          return i.address !== ETH_ADDRESS && i.amount !== '0'\n        })\n      ) {\n        setBurnTokens(nextBurnTokens)\n        setIsShowZipModal(true)\n      }\n    })\n  }\n\n  const withdraw = async () => {\n    let withdrawTimeStart = Date.now(),\n      withdrawValidFinish = 0,\n      preWithdrawGetCoins = 0,\n      getSwapInfoFinish = 0,\n      estimateGasFinish = 0,\n      withdrawFinish = 0,\n      withdrawTransationFinish = 0\n    setIsWithdrawLoading(true)\n    console.log('----------start withdraw----------')\n    if (!isValidToValue()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct value.'\n      })\n    }\n\n    if (!isValidAllowLoss()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Enter the correct Max Loss value.'\n      })\n    }\n\n    if (!isValidSlipper()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct slippage value.'\n      })\n    }\n    withdrawValidFinish = Date.now()\n    setCurrentStep(1)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n    const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n    const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n      .mul(usdValue)\n      .div(BigNumber.from(1e4))\n    try {\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      getSwapInfoFinish = Date.now()\n      setCurrentStep(2)\n      let tx\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithSigner.estimateGas.burn(nextValue, allowMaxLossValue)\n        setCurrentStep(3)\n        estimateGasFinish = Date.now()\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue, {\n          gasLimit: maxGasLimit\n        })\n      } else {\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue)\n      }\n      withdrawFinish = Date.now()\n\n      const { events } = await tx.wait()\n      let args = []\n      for (let i = events.length - 1; i >= 0; i--) {\n        if (events[i].event === 'Burn') {\n          args = events[i].args\n          break\n        }\n      }\n      handleBurn(...args)\n\n      withdrawTransationFinish = Date.now()\n      setCurrentStep(4)\n      setToValue('')\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: 'Success!'\n        })\n      )\n    } catch (error) {\n      console.log('withdraw original error :', error)\n      const errorMsg = errorTextOutput(error)\n      let tip = ''\n      if (isEs(errorMsg)) {\n        tip = 'Vault has been shut down, please try again later!'\n      } else if (isAd(errorMsg)) {\n        tip = 'Vault is in adjustment status, please try again later!'\n      } else if (isRp(errorMsg)) {\n        tip = 'Vault is in rebase status, please try again later!'\n      } else if (isMaxLoss(errorMsg)) {\n        tip = 'Failed to withdraw, please increase the Max Loss!'\n      } else if (isLossMuch(errorMsg)) {\n        tip = 'Failed to exchange, please increase the exchange slippage!'\n      } else if (isExchangeFail(errorMsg)) {\n        tip = 'Failed to exchange, Please try again later!'\n      } else {\n        tip = errorMsg\n      }\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: tip\n        })\n      )\n    }\n    setTimeout(() => {\n      setIsWithdrawLoading(false)\n      setWithdrawError({})\n      setCurrentStep(0)\n    }, 2000)\n    // log withdraw total time\n    const totalTime = withdrawTransationFinish - withdrawTimeStart\n    const szjy = withdrawValidFinish - withdrawTimeStart\n    const szjyPercents = ((100 * szjy) / totalTime).toFixed(2)\n    const ytq = preWithdrawGetCoins === 0 ? 0 : preWithdrawGetCoins - withdrawValidFinish\n    const ytqPercents = ((100 * ytq) / totalTime).toFixed(2)\n    const hqdhlj = preWithdrawGetCoins === 0 ? getSwapInfoFinish - withdrawValidFinish : getSwapInfoFinish - preWithdrawGetCoins\n    const hqdhljPercents = ((100 * hqdhlj) / totalTime).toFixed(2)\n    const eg = estimateGasFinish === 0 ? 0 : estimateGasFinish - getSwapInfoFinish\n    const egPercents = ((100 * eg) / totalTime).toFixed(2)\n    const qk = estimateGasFinish === 0 ? withdrawFinish - getSwapInfoFinish : withdrawFinish - estimateGasFinish\n    const qkPercents = ((100 * qk) / totalTime).toFixed(2)\n    const swc = withdrawTransationFinish - withdrawFinish\n    const swcPercents = ((100 * swc) / totalTime).toFixed(2)\n    console.table({\n      valid: `${szjy}(${szjyPercents}%)`,\n      preWithdraw: `${ytq}(${ytqPercents}%)`,\n      getSwapPath: `${hqdhlj}(${hqdhljPercents}%)`,\n      estimateGas: `${eg}(${egPercents}%)`,\n      withdraw: `${qk}(${qkPercents}%)`,\n      transaction: `${swc}(${swcPercents}%)`\n    })\n  }\n\n  function imgError(e) {\n    const evn = e\n    const img = evn.srcElement ? evn.srcElement : evn.target\n    img.src = '/default.png'\n  }\n\n  /**\n   * check if toValue is valid\n   * @returns\n   */\n  const isValidToValue = () => {\n    if (toValue === '' || toValue === '-' || isEmpty(toValue.replace(/ /g, ''))) return\n    // should be a number\n    if (isNaN(Number(toValue))) return false\n    const nextValue = BN(toValue)\n    const nextToValue = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    // should be positive\n    if (nextToValue.lte(0)) return false\n    // should be integer\n    const nextToValueString = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    if (nextToValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (ethiBalance.lt(BigNumber.from(nextToValue.toFixed()))) return false\n    return true\n  }\n\n  /**\n   * check if allow loss is valid\n   * @returns\n   */\n  const isValidAllowLoss = () => {\n    if (allowMaxLoss === '' || isEmpty(allowMaxLoss.replace(/ /g, ''))) return\n    if (isNaN(allowMaxLoss)) return false\n    if (allowMaxLoss < 0 || allowMaxLoss > 50) return false\n    return true\n  }\n\n  const isValidSlipper = () => {\n    if (slipper === '' || isEmpty(slipper.replace(/ /g, ''))) return\n    if (isNaN(slipper)) return false\n    if (slipper < 0 || slipper > 45) return false\n    return true\n  }\n\n  useEffect(() => {\n    // need open advanced setting\n    // allowLoss, slipper, toValue need valid\n    if (isValidAllowLoss() && isValidSlipper() && isValidToValue()) {\n      estimateWithdraw()\n    }\n    if (isEmpty(toValue)) {\n      setEstimateWithdrawArray([])\n    }\n    return () => {\n      setEstimateWithdrawArray([])\n      return estimateWithdraw.cancel()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toValue, allowMaxLoss, slipper])\n\n  const handleAmountChange = event => {\n    try {\n      setToValue(event.target.value)\n    } catch (error) {\n      setToValue('')\n    }\n  }\n\n  const handleMaxClick = async () => {\n    const [nextEthiBalance] = await reloadBalance()\n    setToValue(formatBalance(nextEthiBalance, ethiDecimals, { showAll: true }))\n  }\n\n  const renderEstimate = () => {\n    if (isEstimate) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <CircularProgress fontSize=\"large\" color=\"primary\" />\n          </div>\n        </GridItem>\n      )\n    }\n    if (isUndefined(estimateWithdrawArray)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <ErrorOutlineIcon fontSize=\"large\" />\n            <p>Amount estimate failed, please try again!</p>\n          </div>\n        </GridItem>\n      )\n    }\n    if (isEmpty(estimateWithdrawArray) || isEmpty(toValue)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <p style={{ fontSize: 26, textAlign: 'right' }}>0.00</p>\n          </div>\n        </GridItem>\n      )\n    }\n    return map(estimateWithdrawArray, item => {\n      return (\n        <GridItem key={item.tokenAddress} xs={12} sm={12} md={6} lg={6}>\n          <Button\n            title={toFixed(item.amounts, BigNumber.from(10).pow(item.decimals))}\n            color=\"transparent\"\n            target=\"_blank\"\n            style={{ fontSize: 14, paddingBottom: 20 }}\n            onClick={() => addToken(item.tokenAddress)}\n          >\n            {item.tokenAddress !== ETH_ADDRESS && <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 25, left: 45 }} />}\n            <img\n              title=\"Add token address to wallet\"\n              className={classes.img}\n              style={{ borderRadius: '50%' }}\n              alt=\"\"\n              src={`./images/${item.tokenAddress}.png`}\n              onError={imgError}\n            />\n            &nbsp;&nbsp;~&nbsp;\n            {toFixed(item.amounts, BigNumber.from(10).pow(item.decimals), 6)}\n          </Button>\n        </GridItem>\n      )\n    })\n  }\n\n  const isValidToValueFlag = isValidToValue()\n  const isValidAllowLossFlag = isValidAllowLoss()\n\n  const isLogin = !isEmpty(userProvider)\n\n  const getPegTokenPrice = () => {\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract.getPegTokenPrice().then(result => {\n      setTimeout(() => {\n        setPegTokenPrice(result)\n      }, 500)\n    })\n    return getPegTokenPrice\n  }\n\n  useEffect(() => {\n    if (isEmpty(address) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI)) return\n    const timer = setInterval(getPegTokenPrice(), 10000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address])\n\n  return (\n    <>\n      <div className={classes.setting}>\n        <PopupState variant=\"popover\" popupId=\"setting-popover\">\n          {popupState => (\n            <div>\n              <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...bindTrigger(popupState)}>\n                <path\n                  d=\"M15 20.625C18.1066 20.625 20.625 18.1066 20.625 15C20.625 11.8934 18.1066 9.375 15 9.375C11.8934 9.375 9.375 11.8934 9.375 15C9.375 18.1066 11.8934 20.625 15 20.625Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M21.5273 7.62891C21.8242 7.90234 22.1055 8.18359 22.3711 8.47266L25.5703 8.92969C26.0916 9.83497 26.4934 10.804 26.7656 11.8125L24.8203 14.4023C24.8203 14.4023 24.8555 15.1992 24.8203 15.5977L26.7656 18.1875C26.4946 19.1965 26.0928 20.1656 25.5703 21.0703L22.3711 21.5273C22.3711 21.5273 21.8203 22.1016 21.5273 22.3711L21.0703 25.5703C20.165 26.0916 19.196 26.4934 18.1875 26.7656L15.5977 24.8203C15.2 24.8555 14.8 24.8555 14.4023 24.8203L11.8125 26.7656C10.8035 26.4946 9.83438 26.0928 8.92969 25.5703L8.47266 22.3711C8.18359 22.0977 7.90234 21.8164 7.62891 21.5273L4.42969 21.0703C3.90842 20.165 3.50663 19.196 3.23438 18.1875L5.17969 15.5977C5.17969 15.5977 5.14453 14.8008 5.17969 14.4023L3.23438 11.8125C3.50537 10.8035 3.90722 9.83438 4.42969 8.92969L7.62891 8.47266C7.90234 8.18359 8.18359 7.90234 8.47266 7.62891L8.92969 4.42969C9.83497 3.90842 10.804 3.50663 11.8125 3.23438L14.4023 5.17969C14.8 5.14452 15.2 5.14452 15.5977 5.17969L18.1875 3.23438C19.1965 3.50537 20.1656 3.90722 21.0703 4.42969L21.5273 7.62891Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <Popover\n                classes={{ paper: classes.popover }}\n                {...bindPopover(popupState)}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center'\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center'\n                }}\n              >\n                <Box p={2}>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={12} lg={12}>\n                      <p className={classes.popoverTitle}>Max Loss</p>\n                      <CustomTextField\n                        classes={{ root: classes.input }}\n                        value={allowMaxLoss}\n                        placeholder=\"Allow loss percent\"\n                        maxEndAdornment\n                        onMaxClick={() => setAllowMaxLoss('50')}\n                        onChange={event => {\n                          const value = event.target.value\n                          setAllowMaxLoss(value)\n                        }}\n                        error={!isUndefined(isValidAllowLossFlag) && !isValidAllowLossFlag}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Box>\n              </Popover>\n            </div>\n          )}\n        </PopupState>\n      </div>\n      <GridContainer className={classes.withdrawContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>From</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.inputLabelWrapper}>\n            <div className={classes.tokenInfo}>\n              <span className={classes.tokenName}>ETHi</span>\n            </div>\n            <CustomTextField\n              classes={{ root: classes.input }}\n              value={toValue}\n              placeholder=\"withdraw amount\"\n              maxEndAdornment\n              onMaxClick={() => handleMaxClick()}\n              onChange={handleAmountChange}\n              error={!isUndefined(isValidToValueFlag) && !isValidToValueFlag && toValue !== '0'}\n            />\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText} title={formatBalance(ethiBalance, ethiDecimals, { showAll: true })}>\n            Balance:&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n          </p>\n        </GridItem>\n        {address && (\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <p className={classes.estimateText} title={toFixed(pegTokenPrice, BN_18)}>\n              <span>1ETHi ≈ {toFixed(pegTokenPrice, BN_18, 6)}ETH</span>\n            </p>\n          </GridItem>\n        )}\n      </GridContainer>\n      <GridContainer className={classes.outputContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.selectorlWrapper}>\n            <p className={classes.estimateBalanceTitle}>ETH</p>\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          {renderEstimate()}\n        </GridItem>\n        {isEmpty(VAULT_ADDRESS) && (\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <p style={{ textAlign: 'center', color: 'red' }}>Switch to the ETH chain firstly!</p>\n          </GridItem>\n        )}\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button\n              disabled={!isLogin || (isLogin && (isUndefined(isValidToValueFlag) || !isValidToValueFlag))}\n              color=\"colorfull\"\n              onClick={withdraw}\n              style={{ width: '100%', padding: '12px 16px' }}\n            >\n              Withdraw\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip\n                }}\n                placement=\"top\"\n                title={`${redeemFeeBpsPercent}% withdrawal fee of the principal.`}\n              >\n                <InfoIcon style={{ marginLeft: '0.5rem' }} />\n              </Tooltip>\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isWithdrawLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.widthdrawLoadingPaper}>\n          <div className={classes.modalBody}>\n            {isEmpty(withdrawError) && <CircularProgress color=\"inherit\" />}\n            {isEmpty(withdrawError) ? <p>In Withdrawing...</p> : <p>Withdraw Error !</p>}\n            <BocStepper\n              classes={{\n                root: classes.root\n              }}\n              alternativeLabel\n              activeStep={currentStep}\n              connector={<BocStepConnector />}\n            >\n              {map(steps, (i, index) => {\n                return (\n                  <Step key={index}>\n                    <BocStepLabel StepIconComponent={BocStepIcon}>{i.title}</BocStepLabel>\n                  </Step>\n                )\n              })}\n            </BocStepper>\n            {!isEmpty(withdrawError) && (\n              <p\n                style={{\n                  color: withdrawError.type === 'error' ? 'red' : 'yellow'\n                }}\n              >\n                <WarningIcon style={{ verticalAlign: 'bottom' }}></WarningIcon>\n                &nbsp;&nbsp;&nbsp;{withdrawError.message}\n              </p>\n            )}\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                setIsWithdrawLoading(false)\n                setWithdrawError({})\n                setCurrentStep(0)\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Paper>\n      </Modal>\n      <Modal\n        className={classes.modal}\n        open={isShowZipModal && !!address}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.swapBody}>\n          {!isEmpty(address) && !isEmpty(exchangeManager) && (\n            <ApproveArrayV2\n              isEthi\n              address={address}\n              tokens={burnTokens}\n              userProvider={userProvider}\n              exchangeManager={exchangeManager}\n              EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n              EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n              slippage={slipper}\n              onSlippageChange={setSlipper}\n              handleClose={() => setIsShowZipModal(false)}\n            />\n          )}\n        </div>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\nimport { gradientText } from '@/assets/jss/common.js'\n\nconst componentsStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: '1rem',\n    marginBottom: 100,\n    ...container\n  },\n  center: {\n    justifyContent: 'center',\n    padding: '50px 72px 50px',\n    backgroundColor: '#0c0735cc',\n    [theme.breakpoints.down('md')]: {\n      padding: '50px 16px 50px'\n    },\n    margin: 0\n  },\n  wrapper: {\n    padding: '5rem 3rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  wrapperMobile: {\n    padding: '3rem 2rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  deposit: {\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderTopLeftRadius: '1.25rem',\n    borderTopRightRadius: '1.25rem'\n  },\n  balance: {\n    marginTop: '0.5rem',\n    marginBottom: '2rem',\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderBottomLeftRadius: '1.25rem',\n    borderBottomRightRadius: '1.25rem'\n  },\n  symbol: {\n    color: '#A68EFD',\n    marginLeft: '1rem',\n    ...gradientText\n  },\n  footer: {},\n  item: {\n    color: '#fff',\n    marginBottom: 20,\n    '& .MuiListItemIcon-root': {\n      minWidth: '38px'\n    }\n  },\n  centerItem: {\n    width: '630px'\n  },\n  balanceCard: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: '0 0 1rem 0',\n    textAlign: 'left',\n    padding: '2.8125rem 2.4375rem',\n    background: '#323338',\n    color: '#fff',\n    borderRadius: '1.25rem'\n  },\n  check: {\n    color: '#A68EFE'\n  },\n  balanceCardValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 30,\n    lineHeight: '30px',\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  balanceCardLabel: {\n    color: '#b2add1',\n    fontSize: 14\n  },\n  tokenInfo: {\n    display: 'flex',\n    position: 'absolute',\n    right: 12,\n    top: 9\n  },\n  addTokenIcon: {\n    cursor: 'pointer',\n    marginLeft: '1rem',\n    display: 'flex'\n  },\n  scanToken: {\n    width: 24,\n    height: 'auto',\n    cursor: 'pointer',\n    borderRadius: '50%',\n    backgroundColor: '#fff'\n  },\n  hidden: {\n    display: 'none'\n  },\n  brand: {\n    color: '#FFFFFF',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '4.2rem',\n    fontWeight: '600',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    width: 'auto',\n    margin: '10px 0 0'\n  },\n  main: {\n    position: 'relative',\n    backgroundColor: 'transparent'\n  },\n  mainRaised: {\n    margin: '0 auto',\n    marginTop: 65\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  radioUnchecked: {\n    width: '0px',\n    height: '0px',\n    padding: '7px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioChecked: {\n    width: '16px',\n    height: '16px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioRoot: {\n    padding: '12px',\n    '&:hover': {\n      backgroundColor: 'unset'\n    }\n  },\n  radio: {\n    color: '#fff !important'\n  },\n  investCard: {\n    padding: '20px 24px',\n    borderRadius: 6,\n    backgroundColor: 'rgba(39, 31, 114, 0.8)',\n    overflow: 'visible'\n  },\n  table: {\n    backgroundColor: '#150752',\n    border: '1px solid rgb(222, 217, 213)'\n  },\n  tableCell: {\n    color: '#fff',\n    fontSize: '12px',\n    letterSpacing: '0.01071em'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  stepContainer: {\n    padding: 20\n  },\n  stepItem: {\n    color: '#fff'\n  },\n  tabsRoot: {\n    padding: '0 20px'\n  },\n  tabsIndicator: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    '& > span': {\n      maxWidth: 120,\n      width: '100%',\n      backgroundColor: '#fff'\n    }\n  },\n  tabTextColor: {\n    color: '#fff'\n  },\n  tabRoot: {\n    width: '50%',\n    fontSize: '16px',\n    maxWidth: 'none'\n  },\n  detailWrapper: {\n    margin: '42px 0 0 0'\n  },\n  slider: {\n    position: 'absolute',\n    top: '50px',\n    left: 'calc(50% - 33rem)',\n    backgroundColor: '#271f72',\n    color: 'azure'\n  },\n  text: {\n    color: 'azure'\n  },\n  spliter: {\n    display: 'flex',\n    justifyContent: 'center',\n    bottom: 0,\n    height: 2,\n    position: 'absolute',\n    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '54%',\n    backgroundColor: '#fff'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@material-ui/core/Card'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Loading from '@/components/LoadingComponent'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n// === Components === //\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport MyStatement from '@/components/MyStatement'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// === Reducers === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { setCurrentTab } from '@/reducers/invest-reducer'\n\n// === constants === //\nimport { ETH_ADDRESS, ETH_DECIMALS } from '@/constants/tokens'\nimport { INVEST_TAB } from '@/constants/invest'\nimport { IERC20_ABI, CHAIN_ID } from '@/constants'\n\n// === Utils === //\nimport moment from 'moment'\nimport { formatBalance } from '@/helpers/number-format'\nimport isEmpty from 'lodash/isEmpty'\nimport last from 'lodash/last'\nimport * as ethers from 'ethers'\nimport useVersionWapper from '@/hooks/useVersionWapper'\nimport { addToken } from '@/helpers/wallet'\nimport { getLastPossibleRebaseTime } from '@/helpers/time-util'\nimport useVault from '@/hooks/useVault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\nconst { BigNumber } = ethers\n\nfunction Ethi(props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const isLayoutSm = useMediaQuery('(max-width: 960px)')\n\n  const {\n    address,\n    userProvider,\n    ETHI_ADDRESS,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    EXCHANGE_AGGREGATOR_ABI,\n    EXCHANGE_ADAPTER_ABI,\n    PRICE_ORCALE_ABI,\n    VAULT_BUFFER_ADDRESS,\n    VAULT_BUFFER_ABI\n  } = props\n\n  const [ethBalance, setEthBalance] = useState(BigNumber.from(0))\n  const [ethiBalance, setEthiBalance] = useState(BigNumber.from(0))\n  const [ethiDecimals, setEthiDecimals] = useState(0)\n  const ethDecimals = ETH_DECIMALS\n\n  const [vaultBufferBalance, setVaultBufferBalance] = useState(BigNumber.from(0))\n  const [vaultBufferDecimals, setVaultBufferDecimals] = useState(0)\n\n  const [isBalanceLoading, setIsBalanceLoading] = useState(false)\n\n  const lastRebaseTime = getLastPossibleRebaseTime()\n\n  const current = useSelector(state => state.investReducer.currentTab)\n  const setCurrent = tab => {\n    loadCoinsBalance()\n    dispatch(setCurrentTab(tab))\n  }\n  const { minimumInvestmentAmount, exchangeManager } = useVault(VAULT_ADDRESS, VAULT_ABI, userProvider)\n\n  // load user balance\n  const loadBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    Promise.all([\n      loadCoinsBalance(),\n      ethiContract\n        .decimals()\n        .then(setEthiDecimals)\n        .catch(() => setEthiDecimals(1)),\n      vaultBufferContract\n        .decimals()\n        .then(setVaultBufferDecimals)\n        .catch(() => setVaultBufferDecimals(1))\n    ]).catch(() => {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: \"Please confirm wallet's network!\"\n        })\n      )\n    })\n  }\n\n  const loadCoinsBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    setIsBalanceLoading(true)\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    return Promise.all([\n      ethiContract.balanceOf(address).catch(() => BigNumber.from(0)),\n      userProvider.getBalance(address),\n      vaultBufferContract.balanceOf(address).catch(() => BigNumber.from(0))\n    ])\n      .then(([ethiBalance, ethBalance, vaultBufferBalance]) => {\n        setEthBalance(ethBalance)\n        setEthiBalance(ethiBalance)\n        setVaultBufferBalance(vaultBufferBalance)\n        return [ethiBalance, ethBalance, vaultBufferBalance]\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsBalanceLoading(false)\n        }, 500)\n      })\n  }\n\n  function handleMint(...eventArgs) {\n    console.log('Mint=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n  function handleBurn(...eventArgs) {\n    console.log('Burn=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n\n  useEffect(() => {\n    const listener = () => {\n      if (isEmpty(VAULT_ABI) || isEmpty(userProvider)) return\n      loadBalance()\n      if (isEmpty(VAULT_ADDRESS)) return\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      if (!isEmpty(address)) {\n        vaultContract.on('Mint', handleMint)\n        vaultContract.on('Burn', handleBurn)\n        return () => {\n          vaultContract.off('Mint', handleMint)\n          vaultContract.off('Burn', handleBurn)\n        }\n      }\n    }\n    return listener()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  const handleAddETHi = () => {\n    addToken(ETHI_ADDRESS, 'ETHi', 18)\n  }\n\n  return (\n    <div className={classes.container}>\n      <GridContainer spacing={0}>\n        <GridItem xs={2} sm={2} md={3} style={{ paddingLeft: '2rem' }}>\n          <List>\n            <ListItem key=\"My Account\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.account)}>\n              <ListItemIcon>\n                <AccountBalanceWalletIcon style={{ color: current === INVEST_TAB.account ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'My Account'} className={classNames(current === INVEST_TAB.account ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem\n              key=\"Deposit\"\n              button\n              className={classNames(classes.item, current === INVEST_TAB.deposit && classes.check)}\n              onClick={() => setCurrent(INVEST_TAB.deposit)}\n            >\n              <ListItemIcon>\n                <SaveAltIcon style={{ color: current === INVEST_TAB.deposit ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Deposit'} className={classNames(current === INVEST_TAB.deposit ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem key=\"Withdraw\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.withdraw)}>\n              <ListItemIcon>\n                <UndoIcon style={{ color: current === INVEST_TAB.withdraw ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Withdraw'} className={classNames(current === INVEST_TAB.withdraw ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n          </List>\n        </GridItem>\n        {current === INVEST_TAB.deposit && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Deposit\n                address={address}\n                ethBalance={ethBalance}\n                ethDecimals={ethDecimals}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                vaultBufferBalance={vaultBufferBalance}\n                vaultBufferDecimals={vaultBufferDecimals}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n                minimumInvestmentAmount={minimumInvestmentAmount}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.withdraw && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Withdraw\n                address={address}\n                exchangeManager={exchangeManager}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n                EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n                PRICE_ORCALE_ABI={PRICE_ORCALE_ABI}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.account && (\n          <GridItem xs={9} sm={9} md={9}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper} style={{ background: 'none', paddingTop: '1rem', paddingLeft: 0 }}>\n              <Card className={classes.balanceCard}>\n                <div className={classes.balanceCardItem}>\n                  <div className={classes.balanceCardValue}>\n                    <span\n                      title={formatBalance(ethiBalance, ethiDecimals, {\n                        showAll: true\n                      })}\n                    >\n                      <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n                    </span>\n                    <span className={classes.symbol}>ETHi</span>\n                    {userProvider && (\n                      <span title=\"Add token address to wallet\">\n                        <AddCircleOutlineIcon className={classes.addTokenIcon} onClick={handleAddETHi} fontSize=\"small\" />\n                      </span>\n                    )}\n                  </div>\n                  <div className={classes.balanceCardValue} style={{ fontSize: '1rem' }}>\n                    <span title={formatBalance(vaultBufferBalance, vaultBufferDecimals, { showAll: true })}>\n                      <Loading loading={isBalanceLoading}>{formatBalance(vaultBufferBalance, vaultBufferDecimals)}</Loading>\n                    </span>\n                    <span className={classes.symbol}>ETHi Ticket&nbsp;&nbsp;</span>\n                    <Tooltip\n                      classes={{\n                        tooltip: classes.tooltip\n                      }}\n                      placement=\"right\"\n                      title={\n                        <span>\n                          ETHi Ticket functions as parallel ETHi that will be converted into ETHi after fund allocations have been successful. Last\n                          execution time was&nbsp;\n                          <span style={{ fontWeight: 'bold' }}>{moment(lastRebaseTime).format('yyyy-MM-DD HH:mm')}</span>\n                        </span>\n                      }\n                    >\n                      <InfoIcon style={{ fontSize: '1rem' }} />\n                    </Tooltip>\n                  </div>\n                  <div className={classes.balanceCardLabel}>AVAILABLE BALANCE</div>\n                </div>\n              </Card>\n              {!isEmpty(address) && <MyStatement address={address} chain={`${CHAIN_ID}`} VAULT_ADDRESS={VAULT_ADDRESS} type={'ETHi'} />}\n            </div>\n          </GridItem>\n        )}\n      </GridContainer>\n    </div>\n  )\n}\n\nexport default useVersionWapper(Ethi, 'ethi')\n","// === Utils === //\nimport parser from 'cron-parser'\nimport min from 'lodash/min'\n\n// === Constants === //\nimport { DO_HARDWORK_CRON, DO_ALLOCATION_CRON } from '@/constants/cron'\n\nvar options = {\n  tz: 'Asia/Shanghai'\n}\n\n/**\n * get next dohardwork time\n */\nexport const getLastDohardworkTime = () => {\n  const dohardworkCron = parser.parseExpression(DO_HARDWORK_CRON, options)\n  const nextDohardworkTime = dohardworkCron.next().getTime()\n  return nextDohardworkTime\n}\n\n/**\n * get next allocation time\n */\nexport const getLastAllocationTime = () => {\n  const allocationCron = parser.parseExpression(DO_ALLOCATION_CRON, options)\n  const nextAllocationTime = allocationCron.next().getTime()\n  return nextAllocationTime\n}\n\n/**\n * get next rebase time\n */\nexport const getLastPossibleRebaseTime = () => {\n  return min([getLastDohardworkTime(), getLastAllocationTime()])\n}\n","export const DO_HARDWORK_CRON = '0 0 7 * * 0,2,3,4,5,6'\nexport const DO_ALLOCATION_CRON = '0 0 7 * * 1'\n","const style = {\n  selectWrapper: {\n    height: '51px',\n    position: 'relative',\n    lineHeight: '51px'\n  },\n  selectTrigger: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: '100%',\n    cursor: 'pointer',\n    border: '1px solid #666666',\n    borderRadius: '20px',\n    paddingLeft: 16,\n    paddingRight: 24\n  },\n  disabled: {\n    backgroundColor: '#313036'\n  },\n  triggerLabelWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  triggerLabel: {\n    color: '#A0A0A0',\n    fontWeight: 'bold'\n  },\n  caret: {\n    color: '#A68EFE',\n    transition: 'all 150ms ease-in'\n  },\n  expandLess: {\n    transform: 'rotate(180deg)'\n  },\n  selectPop: {\n    display: 'none',\n    position: 'absolute',\n    left: '50%',\n    top: '100%',\n    minWidth: '206px',\n    marginTop: '12px',\n    padding: '8px 0',\n    zIndex: 100,\n    background: '#292b2e',\n    borderRadius: '12px',\n    transformOrigin: 'top',\n    transform: 'translate(-50%, 0)',\n    boxShadow: '0 0 0px 1px rgba(161, 161, 161, 0.2)'\n  },\n  selectPopVisible: {\n    display: 'block'\n  },\n  selectItem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 24px',\n    cursor: 'pointer',\n\n    '&:hover': {\n      background: '#323438'\n    }\n  },\n  optImg: {\n    width: 'auto',\n    height: '30px',\n    marginRight: '8px',\n    borderRadius: '50%'\n  },\n  optMultiImgWrapper: {\n    height: '30px',\n    whiteSpace: 'nowrap'\n  },\n  optMultiImg: {\n    width: 'auto',\n    height: '30px',\n    borderRadius: '50%',\n    marginLeft: '-12px',\n    '&:first-child': {\n      marginLeft: 0\n    },\n    '&:last-child': {\n      marginRight: '8px'\n    }\n  },\n  optLabel: {\n    color: '#A0A0A0'\n  }\n}\n\nexport default style\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport isArray from 'lodash/isArray'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\n\nfunction Select({ value, onChange = () => {}, options = [], disabled, className }) {\n  const [popVisible, setPopVisible] = useState(false)\n  const classes = useStyles()\n  const selectedOpt = find(options, opt => opt.value === value) || {}\n  const handleClickAway = () => {\n    setPopVisible(false)\n  }\n\n  const handleTogglePop = () => {\n    if (disabled) return\n    setPopVisible(!popVisible)\n  }\n\n  const handlePopSelect = value => {\n    setPopVisible(false)\n    onChange(value)\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classNames(classes.selectWrapper, className)}>\n        <div\n          className={classNames(classes.selectTrigger, {\n            [classes.disabled]: disabled\n          })}\n          onClick={handleTogglePop}\n        >\n          <div className={classes.triggerLabelWrapper}>\n            {selectedOpt.img &&\n              (!isArray(selectedOpt.img) ? (\n                <img className={classes.optImg} src={selectedOpt.img} alt=\"logo\" />\n              ) : (\n                <div className={classes.optMultiImgWrapper}>\n                  {map(selectedOpt.img, img => (\n                    <img key={img} className={classes.optMultiImg} src={img} alt=\"logo\" />\n                  ))}\n                </div>\n              ))}\n            <span className={classes.triggerLabel}>{selectedOpt.label}</span>\n          </div>\n          {!disabled && (\n            <ExpandMoreIcon\n              className={classNames(classes.caret, {\n                [classes.expandLess]: popVisible\n              })}\n            />\n          )}\n        </div>\n        <ul\n          className={classNames(classes.selectPop, {\n            [classes.selectPopVisible]: popVisible\n          })}\n        >\n          {map(options, opt => (\n            <li\n              key={opt.value}\n              className={classNames(classes.selectItem, {\n                [classes.selectActiveItem]: value === opt.value\n              })}\n              onClick={() => handlePopSelect(opt.value)}\n            >\n              {opt.img &&\n                (!isArray(opt.img) ? (\n                  <img className={classes.optImg} src={opt.img} alt=\"logo\" />\n                ) : (\n                  <div className={classes.optMultiImgWrapper}>\n                    {map(opt.img, img => (\n                      <img key={img} className={classes.optMultiImg} src={img} alt=\"logo\" />\n                    ))}\n                  </div>\n                ))}\n              <span className={classes.optLabel}>{opt.label}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\nconst { Contract, BigNumber } = ethers\n\nconst useRedeemFeeBps = props => {\n  const { userProvider, VAULT_ADDRESS, VAULT_ABI } = props\n  const [value, setValue] = useState(BigNumber.from(0))\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n\n  const reload = () => {\n    setLoading(true)\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract\n      .redeemFeeBps()\n      .then(setValue)\n      .catch(setError)\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS)) {\n      setLoading(false)\n      setError()\n      return\n    }\n    reload()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS])\n\n  return {\n    value,\n    loading,\n    error,\n    reload\n  }\n}\n\nexport default useRedeemFeeBps\n"],"sourceRoot":""}