{"version":3,"sources":["components/MyStatement/MyStatement1.jsx","../node_modules/@material-ui/icons/CompareArrows.js","components/MyVault/style.js","components/MyVault/index.jsx","pages/Usdr/Deposit/style.js","pages/Usdr/Deposit/index.jsx","pages/Usdr/Withdraw/style.js","pages/Usdr/Withdraw/index.jsx","pages/Usdr/style.js","pages/Usdr/index.jsx","hooks/usePriceProvider.js"],"names":["useStyles","makeStyles","styles","MyStatement1","props","address","type","chain","isUSDi","classes","useState","optionForLineChart","setOptionForLineChart","usePersonalData","dataSource","chartLoading","loading","useEffect","option1","getLineEchartOpt","date","balance","token","format","xAxis","axisTick","alignWithLabel","console","log","cardProps","title","tip","tooltip","placement","style","fontSize","color","content","numeral","toFixed","ETHI_BN_DECIMALS","TOKEN_DISPLAY_DECIMALS","ETHI_DISPLAY_DECIMALS","unit","isAPY","xs","sm","md","lg","map","i","index","key","className","lineChart","marginLeft","loadingOption","width","height","option","minHeight","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","componentsStyle","template","display","alignItems","padding","borderRadius","background","cursor","vault","vaultTitle","textAlign","button","marginTop","logo","checked","border","tokenInfo","flex","name","input","maxWidth","MyVault","setPersonalVaultAddress","templateIndex","setTemplateIndex","setValue","showDeposit","setShowDeposit","backToVault","GridContainer","spacing","GridItem","classNames","onClick","alt","src","Button","startIcon","Tabs","onChange","e","newValue","indicatorColor","centered","Tab","label","CustomTextField","root","placeholder","maxEndAdornment","container","modal","justifyContent","modalBody","depositContainer","borderTopLeftRadius","borderTopRightRadius","estimateContainer","borderBottomLeftRadius","borderBottomRightRadius","estimateText","margin","estimateBalanceTitle","estimateBalanceNum","float","footerContainer","tokenInputWrapper","marginBottom","inputLabelWrapper","depositComfirmArea","tokenName","tokenLogo","marginRight","flexText","ModalTokenLogo","labelToolTipIcon","depositModal","backgroundColor","item","paddingTop","subTitle","BigNumber","ethers","steps","Deposit","ethBalance","ethDecimals","ethiDecimals","userProvider","VAULT_ABI","VAULT_ADDRESS","ETH_ADDRESS","isBalanceLoading","minimumInvestmentAmount","dispatch","useDispatch","ethValue","setEthValue","from","mintGasLimit","setMintGasLimit","gasPriceCurrent","setGasPriceCurrent","isLoading","setIsLoading","isOpenEstimateModal","setIsOpenEstimateModal","estimateVaultBuffValue","setEstimateVaultBuffValue","loadingTimer","useRef","nextRebaseTime","getLastPossibleRebaseTime","getGasFee","gasPrice","parseInt","toString","add","mul","isValidValue","decimals","isEmpty","replace","isNaN","Number","nextValue","BN","nextFromValue","multipliedBy","pow","lte","indexOf","lt","sub","diposit","clearTimeout","current","warmDialog","open","message","amount","signer","getSigner","vaultContract","nVaultWithUser","connect","isSuccess","extendObj","isNumber","MULTIPLE_OF_GAS","estimateGas","mint","gas","gasLimit","Math","ceil","maxGasLimit","MAX_GAS_LIMIT","then","tx","wait","catch","error","errorMsg","errorTextOutput","isEs","isAd","isRp","isDistributing","isLessThanMinValue","BN_18","setTimeout","estimateMint","useCallback","debounce","result","cancel","send","noop","timer","setInterval","clearInterval","estimatedUsedValue","isLogin","isValid","event","target","onMaxClick","v","maxValue","formatBalance","gt","showAll","isUndefined","disabled","Modal","aria-labelledby","aria-describedby","Paper","elevation","alternativeLabel","activeStep","connector","Step","StepIconComponent","BocStepIcon","Typography","variant","gutterBottom","Tooltip","fontWeight","div","moment","CircularProgress","switchBar","img","switchBase","switchChecked","swapBody","outline","withdrawContainer","outputContainer","receiveTokenItem","settingBtn","lineHeight","settingTitle","letterSpacing","settingItem","settingItemLabel","position","minWidth","mutedLabel","maxLossFormCtrl","exchanged","paddingLeft","left","top","transform","slippageItem","slippageInput","widthdrawLoadingPaper","estimateItem","setting","right","popover","popoverTitle","WITHDRAW_EXCHANGE_THRESHOLD","Withdraw","exchangeManager","ethiBalance","EXCHANGE_AGGREGATOR_ABI","EXCHANGE_ADAPTER_ABI","reloadBalance","PRICE_ORCALE_ABI","toValue","setToValue","allowMaxLoss","setAllowMaxLoss","slipper","setSlipper","estimateWithdrawArray","setEstimateWithdrawArray","isEstimate","setIsEstimate","isWithdrawLoading","setIsWithdrawLoading","currentStep","setCurrentStep","withdrawError","setWithdrawError","burnTokens","setBurnTokens","isShowZipModal","setIsShowZipModal","pegTokenPrice","setPegTokenPrice","redeemFeeBps","useRedeemFeeBps","getPriceProvider","usePriceProvider","redeemFeeBpsPercent","toNumber","estimateWithdraw","usdValue","allowMaxLossValue","parseFloat","vaultContractWithSigner","callStatic","burn","tokens","amounts","compact","Promise","all","get","tokenAddress","nextEstimateWithdrawArray","isMaxLoss","isLossMuch","isExchangeFail","undefined","handleBurn","a","b","c","el","priceProvider","valueInEth","amountsInEth","getBalance","contract","IERC20_ABI","balanceOf","array","nextBurnTokens","some","withdraw","withdrawTimeStart","Date","now","withdrawValidFinish","preWithdrawGetCoins","getSwapInfoFinish","estimateGasFinish","withdrawFinish","withdrawTransationFinish","isValidToValue","isValidAllowLoss","isValidSlipper","events","args","length","szjyPercents","szjy","totalTime","ytqPercents","ytq","hqdhljPercents","hqdhlj","egPercents","eg","qkPercents","qk","swcPercents","swc","table","valid","preWithdraw","getSwapPath","transaction","imgError","evn","srcElement","nextToValue","handleMaxClick","nextEthiBalance","isValidToValueFlag","isValidAllowLossFlag","getPegTokenPrice","popupId","popupState","viewBox","fill","xmlns","bindTrigger","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popover","paper","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","Box","p","selectorlWrapper","paddingBottom","addToken","onError","verticalAlign","ApproveArrayV2","isEthi","slippage","onSlippageChange","handleClose","theme","zIndex","center","breakpoints","down","wrapper","wrapperMobile","deposit","symbol","gradientText","footer","centerItem","balanceCard","check","balanceCardValue","balanceCardLabel","addTokenIcon","scanToken","hidden","brand","subtitle","main","mainRaised","link","textDecoration","textCenter","radioUnchecked","radioChecked","radioRoot","radio","investCard","overflow","tableCell","boxShadow","stepContainer","stepItem","tabsRoot","tabsIndicator","tabTextColor","tabRoot","detailWrapper","slider","text","spliter","bottom","transition","useVersionWapper","isLayoutSm","useMediaQuery","personalVaultAddress","isVisiable","setIsVisiable","ETHI_ADDRESS","VAULT_BUFFER_ADDRESS","VAULT_BUFFER_ABI","setEthBalance","setEthiBalance","setEthiDecimals","ETH_DECIMALS","beforeTotalValue","setBeforeTotalValue","totalValue","setTotalValue","vaultBufferBalance","setVaultBufferBalance","vaultBufferDecimals","setVaultBufferDecimals","setIsBalanceLoading","useSelector","state","investReducer","currentTab","setCurrent","tab","loadCoinsBalance","setCurrentTab","useVault","loadBalance","vaultBufferContract","ethiContract","finally","handleMint","eventArgs","block","last","getTransaction","loadTotalAssets","afterTotalValue","eq","on","off","listener","totalSupply","List","ListItem","INVEST_TAB","account","ListItemIcon","ListItemText","primary","Card","balanceCardItem","CHAIN_ID","Contract","params","Error","priceOracleAddress"],"mappings":"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","file":"static/js/11.75e5d2ab.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@/components/Card'\nimport { LineEchart } from '@/components/Echarts'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// === Services === //\nimport getLineEchartOpt from '@/components/Echarts/options/line/getLineEchartOpt'\n\n// === Hooks === //\nimport usePersonalData from '@/hooks/usePersonalData'\n\n// === Utils === //\nimport numeral from 'numeral'\nimport map from 'lodash/map'\nimport { toFixed } from '@/helpers/number-format'\n\n// === Constants === //\nimport { ETHI_BN_DECIMALS, ETHI_DISPLAY_DECIMALS } from '@/constants/ethi'\nimport { TOKEN_DISPLAY_DECIMALS } from '@/constants/vault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\n\nconst MyStatement1 = props => {\n  const { address, type, chain } = props\n\n  const isUSDi = type === 'USDi'\n  const classes = useStyles()\n  const [optionForLineChart, setOptionForLineChart] = useState({})\n  const { dataSource, loading: chartLoading } = usePersonalData(chain, type, address, type)\n\n  useEffect(() => {\n    const tvls = [\n      {\n        date: '2022-10-11',\n        balance: '1'\n      },\n      {\n        date: '2022-10-12',\n        balance: '10'\n      },\n      {\n        date: '2022-10-13',\n        balance: '10'\n      },\n      {\n        date: '2022-10-14',\n        balance: '20'\n      },\n      {\n        date: '2022-10-15',\n        balance: '20'\n      },\n      {\n        date: '2022-10-16',\n        balance: '20'\n      },\n      {\n        date: '2022-10-17',\n        balance: '30'\n      }\n    ]\n    const option1 = getLineEchartOpt(tvls, 'balance', dataSource.token, {\n      format: 'MM-DD',\n      xAxis: {\n        axisTick: {\n          alignWithLabel: true\n        }\n      }\n    })\n    console.log('option1=', option1)\n    setOptionForLineChart(option1)\n  }, [dataSource, address])\n\n  const cardProps = [\n    {\n      title: 'Net Deposit',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Total profits from BoC that are withdrawable and cumulative.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed('41231231231224141414', ETHI_BN_DECIMALS, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      unit: 'WETH'\n    },\n    {\n      title: 'Current Value',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past week.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed('55231231231224141414', ETHI_BN_DECIMALS, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      isAPY: true,\n      unit: 'WETH'\n    },\n    {\n      title: 'IRR',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past month.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral('6.21').format('0,0.00'),\n      isAPY: true,\n      unit: '%'\n    }\n  ]\n\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12} lg={12}>\n        <GridContainer>\n          {map(cardProps, (i, index) => {\n            return (\n              <GridItem key={index} xs={12} sm={12} md={4} lg={4}>\n                <Card {...i} />\n              </GridItem>\n            )\n          })}\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Outstanding Loan\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Collateral\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Health Ratio\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  Uniswap Position Value\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  Unrealized Profit\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </GridItem>\n    </GridContainer>\n  )\n}\n\nexport default MyStatement1\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\"\n}), 'CompareArrows');\n\nexports.default = _default;","const componentsStyle = () => ({\n  template: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)',\n    cursor: 'pointer'\n  },\n  vault: {\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  vaultTitle: {\n    textAlign: 'center'\n  },\n  button: {\n    width: '100%',\n    marginTop: '1rem'\n  },\n  logo: {\n    width: '30px',\n    borderRadius: '50%'\n  },\n  checked: {\n    border: '2px solid #A68EFD'\n  },\n  token: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '1rem'\n  },\n  tokenInfo: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  name: {\n    marginLeft: '1rem'\n  },\n  input: {\n    maxWidth: '14rem'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport CustomTextField from '@/components/CustomTextField'\n\n// === Styles === //\nimport styles from './style'\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles(styles)\n\nconst MyVault = props => {\n  const { setPersonalVaultAddress } = props\n  const classes = useStyles()\n  const [templateIndex, setTemplateIndex] = useState(-1)\n  const [value, setValue] = useState(0)\n  const [showDeposit, setShowDeposit] = useState(false)\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue)\n  }\n\n  const toEarn = () => {\n    // setShowDeposit(true)\n    setPersonalVaultAddress('0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619')\n  }\n\n  const backToVault = () => {\n    setShowDeposit(false)\n  }\n\n  const size = 12\n  return (\n    <GridContainer spacing={2}>\n      {!showDeposit && (\n        <>\n          <GridItem xs={size} sm={size} md={size} lg={size}>\n            <div\n              className={classNames({ [classes.template]: true, [classes.checked]: templateIndex === 0 })}\n              onClick={() => setTemplateIndex(templateIndex === 0 ? -1 : 0)}\n            >\n              <img className={classes.logo} alt=\"\" src=\"/images/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619.png\" />\n              <img className={classes.logo} alt=\"\" src=\"/images/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48.png\" />\n              <span className={classes.name}>UniswapV3UsdcWeth500</span>\n            </div>\n          </GridItem>\n          <GridItem xs={size} sm={size} md={size} lg={size}>\n            <div\n              className={classNames({ [classes.template]: true, [classes.checked]: templateIndex === 1 })}\n              onClick={() => setTemplateIndex(templateIndex === 1 ? -1 : 1)}\n            >\n              <img className={classes.logo} alt=\"\" src=\"/images/0xdAC17F958D2ee523a2206206994597C13D831ec7.png\" />\n              <img className={classes.logo} alt=\"\" src=\"/images/0x20BC832ca081b91433ff6c17f85701B6e92486c5.png\" />\n              <span className={classes.name}>UniswapV3UsdtrEth2000</span>\n            </div>\n          </GridItem>\n          <GridItem xs={size} sm={size} md={size} lg={size}>\n            <div\n              className={classNames({ [classes.template]: true, [classes.checked]: templateIndex === 2 })}\n              onClick={() => setTemplateIndex(templateIndex === 2 ? -1 : 2)}\n            >\n              <img className={classes.logo} alt=\"\" src=\"/images/0x6B175474E89094C44Da98b954EedeAC495271d0F.png\" />\n              <img className={classes.logo} alt=\"\" src=\"/images/0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb.png\" />\n              <span className={classes.name}>UniswapV3DaiEth3000</span>\n            </div>\n          </GridItem>\n          {templateIndex !== -1 && (\n            <GridItem xs={size} sm={size} md={6} lg={size}>\n              <div className={classes.vault}>\n                <div className={classes.vaultTitle}>WETH Vault</div>\n                {/* <Button color=\"colorfull\" startIcon={<AddCircleOutlineIcon />} className={classes.button}>\n                Create\n              </Button> */}\n                <Button color=\"colorfull\" startIcon={<CompareArrowsIcon />} className={classes.button} onClick={toEarn}>\n                  Deposit\n                </Button>\n              </div>\n            </GridItem>\n          )}\n          {templateIndex !== -1 && (\n            <GridItem xs={size} sm={size} md={6} lg={size}>\n              <div className={classes.vault}>\n                <div className={classes.vaultTitle}>USDC Vault</div>\n                <Button color=\"colorfull\" startIcon={<AddCircleOutlineIcon />} className={classes.button}>\n                  Create\n                </Button>\n                {/* <Button color=\"colorfull\" startIcon={<CompareArrowsIcon />} className={classes.button} onClick={toEarn}>\n                Earn\n              </Button> */}\n              </div>\n            </GridItem>\n          )}\n        </>\n      )}\n      {showDeposit && (\n        <GridItem xs={12} sm={12} md={12} lg={9}>\n          <div className={classes.vault}>\n            <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" centered>\n              <Tab label=\"Deposit\" />\n              <Tab label=\"Withdraw\" />\n            </Tabs>\n            {value === 0 && (\n              <>\n                <div className={classes.token}>\n                  <div className={classes.tokenInfo}>\n                    <img className={classes.logo} alt=\"\" src=\"/images/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619.png\" />\n                    <span className={classes.name}>WETH</span>\n                  </div>\n                  <CustomTextField classes={{ root: classes.input }} placeholder=\"Deposit amount\" maxEndAdornment />\n                </div>\n                <div>Balance: 0</div>\n                <Button color=\"colorfull\" className={classes.button}>\n                  Deposit\n                </Button>\n                <Button color=\"danger\" className={classes.button} onClick={backToVault}>\n                  Cancel\n                </Button>\n              </>\n            )}\n            {value === 1 && (\n              <>\n                <div className={classes.token}>\n                  <div className={classes.tokenInfo}>\n                    <img className={classes.logo} alt=\"\" src=\"/images/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619.png\" />\n                    <span className={classes.name}>WETH</span>\n                  </div>\n                  <CustomTextField classes={{ root: classes.input }} placeholder=\"Withdraw amount\" maxEndAdornment />\n                </div>\n                <div>Balance: 0</div>\n                <Button color=\"colorfull\" className={classes.button}>\n                  Withdraw\n                </Button>\n                <Button color=\"danger\" className={classes.button} onClick={backToVault}>\n                  Cancel\n                </Button>\n              </>\n            )}\n          </div>\n        </GridItem>\n      )}\n    </GridContainer>\n  )\n}\n\nexport default MyVault\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  depositContainer: {\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem',\n    padding: '2.6875rem 2.25rem'\n  },\n  estimateContainer: {\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n    padding: '2.0625rem 2.6875rem'\n  },\n  estimateText: {\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  tokenInputWrapper: {\n    marginBottom: '16px'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  depositComfirmArea: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  flexText: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  ModalTokenLogo: {\n    width: 25,\n    borderRadius: '50%',\n    margin: '0 8px'\n  },\n  labelToolTipIcon: {\n    fontSize: 16\n  },\n  depositModal: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem'\n  },\n  root: {\n    padding: '1.5rem 0'\n  },\n  item: {\n    paddingTop: '3rem'\n  },\n  subTitle: {\n    color: '#A68EFE'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport isUndefined from 'lodash/isUndefined'\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport isNumber from 'lodash/isNumber'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport Step from '@material-ui/core/Step'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Typography from '@material-ui/core/Typography'\nimport Loading from '@/components/LoadingComponent'\n\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport CustomTextField from '@/components/CustomTextField'\nimport Button from '@/components/CustomButtons/Button'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\n\n// === Utils === //\nimport noop from 'lodash/noop'\nimport { getLastPossibleRebaseTime } from '@/helpers/time-util'\nimport { isAd, isEs, isRp, isDistributing, errorTextOutput, isLessThanMinValue } from '@/helpers/error-handler'\nimport { BN_18 } from '@/constants/big-number'\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\n\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = ['Step1: Deposit', 'Get ETHi Ticket', 'Step2: Allocation Action', 'Get ETHi']\n\nexport default function Deposit({\n  address,\n  ethBalance,\n  ethDecimals,\n  ethiDecimals,\n  userProvider,\n  VAULT_ABI,\n  VAULT_ADDRESS,\n  ETH_ADDRESS,\n  isBalanceLoading,\n  minimumInvestmentAmount\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [ethValue, setEthValue] = useState('')\n  const [mintGasLimit, setMintGasLimit] = useState(BigNumber.from('174107'))\n  const [gasPriceCurrent, setGasPriceCurrent] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [isOpenEstimateModal, setIsOpenEstimateModal] = useState(false)\n  const [estimateVaultBuffValue, setEstimateVaultBuffValue] = useState(BigNumber.from(0))\n  const loadingTimer = useRef()\n\n  const nextRebaseTime = getLastPossibleRebaseTime()\n  const getGasFee = () => {\n    if (!gasPriceCurrent) {\n      return BigNumber.from(0)\n    }\n    const gasPrice = BigNumber.from(parseInt(gasPriceCurrent, 16).toString())\n    // metamask gaslimit great than contract gaslimit, so add extra limit\n    const metamaskExtraLimit = 114\n    return mintGasLimit.add(metamaskExtraLimit).mul(gasPrice)\n  }\n\n  /**\n   * check if value is valid\n   * @returns\n   */\n  function isValidValue() {\n    const balance = ethBalance\n    const decimals = ethDecimals\n    const value = ethValue\n    if (value === '' || value === '-' || value === '0' || isEmpty(value.replace(/ /g, ''))) return\n    // not a number\n    if (isNaN(Number(value))) return false\n    const nextValue = BN(value)\n    const nextFromValue = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    // less than 0\n    if (nextFromValue.lte(0)) return false\n    // value should be integer\n    const nextFromValueString = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    if (nextFromValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (balance.lt(BigNumber.from(nextFromValue.toFixed()))) return false\n\n    if (balance.sub(BigNumber.from(nextFromValue.toFixed())).lt(getGasFee())) return false\n\n    return true\n  }\n\n  const handleInputChange = event => {\n    setEthValue(event.target.value)\n  }\n\n  const handleMaxClick = () => {\n    const v = getGasFee()\n    if (v.lte(0)) {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Since the latest Gasprice is not available, it is impossible to estimate the gas fee currently!'\n        })\n      )\n      return\n    }\n    const maxValue = ethBalance.sub(v)\n    setEthValue(\n      formatBalance(maxValue.gt(0) ? maxValue : 0, ethDecimals, {\n        showAll: true\n      })\n    )\n  }\n\n  const diposit = async () => {\n    clearTimeout(loadingTimer.current)\n    const isValid = isValidValue()\n    if (!isValid) {\n      return dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Please enter the correct value'\n        })\n      )\n    }\n    setIsLoading(true)\n    const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n    console.log('nextTokens=', ETH_ADDRESS, amount)\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    let isSuccess = false\n\n    const extendObj = {}\n    // if gasLimit times not 1, need estimateGas\n    if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n      const gas = await nVaultWithUser.estimateGas.mint(ETH_ADDRESS, amount, 0, { from: address, value: amount })\n      const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n      // gasLimit not exceed maximum\n      const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n      extendObj.gasLimit = maxGasLimit\n    }\n    await nVaultWithUser\n      .mint(ETH_ADDRESS, amount, 0, {\n        ...extendObj,\n        from: address,\n        value: amount\n      })\n      .then(tx => tx.wait())\n      .then(() => {\n        isSuccess = true\n      })\n      .catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        setIsLoading(false)\n      })\n\n    if (isSuccess) {\n      setEthValue('')\n    }\n\n    loadingTimer.current = setTimeout(() => {\n      setIsLoading(false)\n      setIsOpenEstimateModal(false)\n      if (isSuccess) {\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'success',\n            message: 'Success!'\n          })\n        )\n      }\n    }, 2000)\n  }\n\n  const estimateMint = useCallback(\n    debounce(async () => {\n      const isValid = isValidValue()\n      if (!isValid) {\n        setEstimateVaultBuffValue(BigNumber.from(0))\n        return\n      }\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n      const result = await vaultContract.estimateMint(ETH_ADDRESS, amount).catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        return BigNumber.from(0)\n      })\n      setEstimateVaultBuffValue(result)\n    }, 1500)\n  )\n\n  /**\n   *\n   */\n  const openEstimateModal = () => {\n    setIsOpenEstimateModal(true)\n  }\n\n  useEffect(() => {\n    estimateMint()\n    return () => estimateMint.cancel()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethValue])\n\n  // get gasprice per 15s\n  useEffect(() => {\n    if (!userProvider) {\n      return\n    }\n    userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    const timer = setInterval(() => {\n      userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    }, 15000)\n    return () => clearInterval(timer)\n  }, [userProvider])\n\n  useEffect(() => {\n    const estimatedUsedValue = BigNumber.from(10).pow(ethDecimals)\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI) || ethBalance.lt(estimatedUsedValue)) {\n      return\n    }\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    nVaultWithUser.estimateGas\n      .mint(ETH_ADDRESS, estimatedUsedValue, {\n        from: address,\n        value: estimatedUsedValue\n      })\n      .then(setMintGasLimit)\n      .catch(noop)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS, ethBalance, VAULT_ABI])\n\n  const isLogin = !isEmpty(userProvider)\n  const isValid = isValidValue()\n\n  return (\n    <>\n      <GridContainer classes={{ root: classes.depositContainer }}>\n        <p className={classes.estimateText}>From</p>\n        <GridItem xs={12} sm={12} md={12} lg={12} className={classes.tokenInputWrapper}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <div className={classes.inputLabelWrapper}>\n                <div className={classes.tokenInfo}>\n                  <img className={classes.tokenLogo} alt=\"\" src={`./images/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619.png`} />\n                  <span className={classes.tokenName}>WETH</span>\n                </div>\n                <CustomTextField\n                  classes={{ root: classes.input }}\n                  value={ethValue}\n                  onChange={handleInputChange}\n                  placeholder=\"deposit amount\"\n                  maxEndAdornment\n                  onMaxClick={handleMaxClick}\n                  error={!isUndefined(isValid) && !isValid}\n                />\n              </div>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <p\n                className={classes.estimateText}\n                title={formatBalance(ethBalance, ethDecimals, {\n                  showAll: true\n                })}\n              >\n                Balance:&nbsp;&nbsp;\n                <Loading loading={isBalanceLoading}>{formatBalance(ethBalance, ethDecimals)}</Loading>\n              </p>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button disabled={!isLogin || (isLogin && !isValid)} color=\"colorfull\" onClick={openEstimateModal} style={{ width: '100%' }}>\n              Deposit\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isOpenEstimateModal} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <BocStepper\n            classes={{\n              root: classes.root\n            }}\n            alternativeLabel\n            activeStep={1}\n            connector={<BocStepConnector />}\n          >\n            {map(steps, (i, index) => {\n              return (\n                <Step key={index}>\n                  <BocStepLabel StepIconComponent={BocStepIcon}>{i}</BocStepLabel>\n                </Step>\n              )\n            })}\n          </BocStepper>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Deposit Amounts:&nbsp;\n                <span key={address} className={classes.flexText}>\n                  <span style={{ color: 'chocolate', marginRight: 5 }}>{ethValue}</span> ETH&nbsp;\n                  <img className={classes.ModalTokenLogo} alt=\"\" src={'./images/0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE.png'} />\n                </span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Estimate User Get:&nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  &nbsp; + {toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}\n                  &nbsp;\n                </span>\n                &nbsp; ETHi Tickets\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"Estimated amount of ETHi that can be exchanged\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;From&nbsp;\n                <span style={{ color: 'chocolate' }}>{toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}</span>\n                &nbsp; ETHi Tickets <span style={{ fontWeight: 'bold', color: 'dimgrey' }}>To</span>\n                &nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  {toFixed(estimateVaultBuffValue.mul(9987).div(10000), BigNumber.from(10).pow(ethiDecimals), 2)}\n                </span>\n                &nbsp; ETHi\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange Time&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"The latest planned execution date may not be executed due to cost and other factors\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;\n                <span style={{ color: 'chocolate' }}>{moment(nextRebaseTime).format('YYYY-MM-DD HH:mm:ss')}</span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item} style={{ textAlign: 'center' }}>\n              <Button color=\"colorfull\" onClick={diposit} style={{ width: '50%' }}>\n                Continue\n              </Button>\n              <Button style={{ marginLeft: 20 }} color=\"danger\" onClick={() => setIsOpenEstimateModal(false)}>\n                Cancel\n              </Button>\n            </GridItem>\n          </GridContainer>\n        </Paper>\n      </Modal>\n      <Modal className={classes.modal} open={isLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <div className={classes.modalBody}>\n            <CircularProgress color=\"inherit\" />\n            <p>On Deposit...</p>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  swapBody: {\n    width: '42rem',\n    outline: 0\n  },\n  withdrawContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  outputContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem'\n  },\n  estimateText: {\n    height: '1.25rem',\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex',\n    marginTop: '0.5rem',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  receiveTokenItem: {\n    marginBottom: 0\n  },\n  settingBtn: {\n    color: '#39d0d8',\n    textAlign: 'right',\n    lineHeight: '36px',\n    padding: '10px 0',\n    marginRight: '16px'\n  },\n  settingTitle: {\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: '0.01071em',\n    lineHeight: 1.5,\n    textAlign: 'center',\n    width: '100%'\n  },\n  settingItem: {\n    height: 38,\n    lineHeight: '38px',\n    marginBottom: 16,\n    '&:first-child': {\n      marginTop: 24\n    }\n  },\n  settingItemLabel: {\n    position: 'relative',\n    minWidth: 100,\n    marginRight: 16,\n    textAlign: 'right'\n  },\n  mutedLabel: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  maxLossFormCtrl: {\n    width: '160px'\n  },\n  exchanged: {\n    position: 'relative',\n    paddingLeft: 16\n  },\n  tooltip: {\n    fontSize: '14px'\n  },\n  labelToolTipIcon: {\n    position: 'absolute',\n    left: '-18px',\n    top: '50%',\n    color: '#fff',\n    fontSize: 16,\n    transform: 'translate(0, -50%)'\n  },\n  slippageItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  slippageInput: {\n    width: 96,\n    marginLeft: 16\n  },\n  widthdrawLoadingPaper: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem',\n    width: '100%'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  estimateItem: {\n    textAlign: 'center',\n    minHeight: '100px',\n    color: '#A0A0A0',\n    paddingTop: '35px'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  popover: {\n    width: '15rem',\n    background: '#292B2E',\n    border: ' 1px solid #666666',\n    borderRadius: '1.25rem',\n    padding: '1rem'\n  },\n  popoverTitle: {\n    color: '#A0A0A0',\n    margin: 0,\n    padding: '0.5rem 0'\n  },\n  root: {\n    padding: '1.5rem 0'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport AddIcon from '@material-ui/icons/Add'\nimport Step from '@material-ui/core/Step'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Popover from '@material-ui/core/Popover'\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state'\nimport Box from '@material-ui/core/Box'\n\nimport CustomTextField from '@/components/CustomTextField'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Loading from '@/components/LoadingComponent'\nimport ApproveArrayV2 from '@/components/ApproveArray/ApproveArrayV2'\n\n// === Hooks === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport useRedeemFeeBps from '@/hooks/useRedeemFeeBps'\nimport usePriceProvider from '@/hooks/usePriceProvider'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport map from 'lodash/map'\nimport get from 'lodash/get'\nimport debounce from 'lodash/debounce'\nimport compact from 'lodash/compact'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\nimport { isAd, isEs, isRp, isMaxLoss, isLossMuch, isExchangeFail, errorTextOutput } from '@/helpers/error-handler'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT, IERC20_ABI } from '@/constants'\n// import { WETH_ADDRESS } from '@/constants/tokens'\nimport { BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\nimport { some } from 'lodash'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = [{ title: 'Shares Validation' }, { title: 'Gas Estimates' }, { title: 'Withdraw' }]\n\nconst WITHDRAW_EXCHANGE_THRESHOLD = BigNumber.from(10).pow(16)\n\nexport default function Withdraw({\n  address,\n  exchangeManager,\n  ethiBalance,\n  ethiDecimals,\n  userProvider,\n  ETH_ADDRESS,\n  VAULT_ADDRESS,\n  VAULT_ABI,\n  EXCHANGE_AGGREGATOR_ABI,\n  EXCHANGE_ADAPTER_ABI,\n  isBalanceLoading,\n  reloadBalance,\n  PRICE_ORCALE_ABI\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [toValue, setToValue] = useState('')\n  const [allowMaxLoss, setAllowMaxLoss] = useState('0.3')\n  const [slipper, setSlipper] = useState('0.3')\n  const [estimateWithdrawArray, setEstimateWithdrawArray] = useState([])\n  const [isEstimate, setIsEstimate] = useState(false)\n  const [isWithdrawLoading, setIsWithdrawLoading] = useState(false)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [withdrawError, setWithdrawError] = useState({})\n\n  const [burnTokens, setBurnTokens] = useState([\n    // {\n    //   address: ETH_ADDRESS,\n    //   amount: '10000000000000000000'\n    // },\n    // {\n    //   address: WETH_ADDRESS,\n    //   amount: '1000000000000000000'\n    // }\n  ])\n  const [isShowZipModal, setIsShowZipModal] = useState(false)\n\n  const [pegTokenPrice, setPegTokenPrice] = useState(BN_18)\n\n  const { value: redeemFeeBps } = useRedeemFeeBps({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI\n  })\n\n  const { getPriceProvider } = usePriceProvider({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    PRICE_ORCALE_ABI\n  })\n\n  const redeemFeeBpsPercent = redeemFeeBps.toNumber() / 100\n\n  const estimateWithdraw = useCallback(\n    debounce(async () => {\n      setIsEstimate(true)\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n      const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n      const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n        .mul(usdValue)\n        .div(BigNumber.from(1e4))\n      const signer = userProvider.getSigner()\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      try {\n        const [tokens, amounts] = await vaultContractWithSigner.callStatic.burn(nextValue, allowMaxLossValue)\n        console.log('estimate withdraw result:', tokens, amounts)\n        let nextEstimateWithdrawArray = compact(\n          await Promise.all(\n            map(tokens, async (token, index) => {\n              const amount = get(amounts, index, BigNumber.from(0))\n              if (amount.gt(0)) {\n                return {\n                  tokenAddress: token,\n                  decimals: ethiDecimals,\n                  amounts: amount\n                }\n              }\n            })\n          )\n        )\n\n        setEstimateWithdrawArray(nextEstimateWithdrawArray)\n      } catch (error) {\n        console.log('estimate withdraw error', error)\n        console.log('withdraw original error :', error)\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isMaxLoss(errorMsg)) {\n          tip = 'Failed to withdraw, please increase the Max Loss!'\n        } else if (isLossMuch(errorMsg)) {\n          tip = 'Failed to exchange, please increase the exchange slippage!'\n        } else if (isExchangeFail(errorMsg)) {\n          tip = 'Failed to exchange, Please try again later!'\n        } else {\n          tip = errorMsg\n        }\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'error',\n            message: tip\n          })\n        )\n        setEstimateWithdrawArray(undefined)\n      } finally {\n        setTimeout(() => {\n          setIsEstimate(false)\n        }, 500)\n      }\n    }, 1500)\n  )\n\n  const handleBurn = async (a, b, c, d, tokens, amounts) => {\n    console.log('handleBurn')\n    console.log('tokens', tokens)\n    console.log(\n      'amounts',\n      amounts.map(el => el.toString())\n    )\n    const priceProvider = await getPriceProvider()\n    return Promise.all(\n      map(tokens, async (token, i) => {\n        const amount = toFixed(amounts[i], 1)\n        const amountsInEth = await priceProvider.valueInEth(token, amount)\n        if (WITHDRAW_EXCHANGE_THRESHOLD.gt(amountsInEth)) {\n          return\n        }\n\n        let balance = BigNumber.from(0)\n        if (token === ETH_ADDRESS) {\n          balance = await userProvider.getBalance(address)\n        } else {\n          const contract = new ethers.Contract(token, IERC20_ABI, userProvider)\n          balance = await contract.balanceOf(address)\n        }\n\n        return {\n          address: token,\n          amount: balance.gt(amounts[i]) ? amount : balance.toString()\n        }\n      })\n    ).then(array => {\n      const nextBurnTokens = compact(array)\n      if (\n        some(nextBurnTokens, i => {\n          return i.address !== ETH_ADDRESS && i.amount !== '0'\n        })\n      ) {\n        setBurnTokens(nextBurnTokens)\n        setIsShowZipModal(true)\n      }\n    })\n  }\n\n  const withdraw = async () => {\n    let withdrawTimeStart = Date.now(),\n      withdrawValidFinish = 0,\n      preWithdrawGetCoins = 0,\n      getSwapInfoFinish = 0,\n      estimateGasFinish = 0,\n      withdrawFinish = 0,\n      withdrawTransationFinish = 0\n    setIsWithdrawLoading(true)\n    console.log('----------start withdraw----------')\n    if (!isValidToValue()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct value.'\n      })\n    }\n\n    if (!isValidAllowLoss()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Enter the correct Max Loss value.'\n      })\n    }\n\n    if (!isValidSlipper()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct slippage value.'\n      })\n    }\n    withdrawValidFinish = Date.now()\n    setCurrentStep(1)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n    const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n    const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n      .mul(usdValue)\n      .div(BigNumber.from(1e4))\n    try {\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      getSwapInfoFinish = Date.now()\n      setCurrentStep(2)\n      let tx\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithSigner.estimateGas.burn(nextValue, allowMaxLossValue)\n        setCurrentStep(3)\n        estimateGasFinish = Date.now()\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue, {\n          gasLimit: maxGasLimit\n        })\n      } else {\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue)\n      }\n      withdrawFinish = Date.now()\n\n      const { events } = await tx.wait()\n      let args = []\n      for (let i = events.length - 1; i >= 0; i--) {\n        if (events[i].event === 'Burn') {\n          args = events[i].args\n          break\n        }\n      }\n      handleBurn(...args)\n\n      withdrawTransationFinish = Date.now()\n      setCurrentStep(4)\n      setToValue('')\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: 'Success!'\n        })\n      )\n    } catch (error) {\n      console.log('withdraw original error :', error)\n      const errorMsg = errorTextOutput(error)\n      let tip = ''\n      if (isEs(errorMsg)) {\n        tip = 'Vault has been shut down, please try again later!'\n      } else if (isAd(errorMsg)) {\n        tip = 'Vault is in adjustment status, please try again later!'\n      } else if (isRp(errorMsg)) {\n        tip = 'Vault is in rebase status, please try again later!'\n      } else if (isMaxLoss(errorMsg)) {\n        tip = 'Failed to withdraw, please increase the Max Loss!'\n      } else if (isLossMuch(errorMsg)) {\n        tip = 'Failed to exchange, please increase the exchange slippage!'\n      } else if (isExchangeFail(errorMsg)) {\n        tip = 'Failed to exchange, Please try again later!'\n      } else {\n        tip = errorMsg\n      }\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: tip\n        })\n      )\n    }\n    setTimeout(() => {\n      setIsWithdrawLoading(false)\n      setWithdrawError({})\n      setCurrentStep(0)\n    }, 2000)\n    // log withdraw total time\n    const totalTime = withdrawTransationFinish - withdrawTimeStart\n    const szjy = withdrawValidFinish - withdrawTimeStart\n    const szjyPercents = ((100 * szjy) / totalTime).toFixed(2)\n    const ytq = preWithdrawGetCoins === 0 ? 0 : preWithdrawGetCoins - withdrawValidFinish\n    const ytqPercents = ((100 * ytq) / totalTime).toFixed(2)\n    const hqdhlj = preWithdrawGetCoins === 0 ? getSwapInfoFinish - withdrawValidFinish : getSwapInfoFinish - preWithdrawGetCoins\n    const hqdhljPercents = ((100 * hqdhlj) / totalTime).toFixed(2)\n    const eg = estimateGasFinish === 0 ? 0 : estimateGasFinish - getSwapInfoFinish\n    const egPercents = ((100 * eg) / totalTime).toFixed(2)\n    const qk = estimateGasFinish === 0 ? withdrawFinish - getSwapInfoFinish : withdrawFinish - estimateGasFinish\n    const qkPercents = ((100 * qk) / totalTime).toFixed(2)\n    const swc = withdrawTransationFinish - withdrawFinish\n    const swcPercents = ((100 * swc) / totalTime).toFixed(2)\n    console.table({\n      valid: `${szjy}(${szjyPercents}%)`,\n      preWithdraw: `${ytq}(${ytqPercents}%)`,\n      getSwapPath: `${hqdhlj}(${hqdhljPercents}%)`,\n      estimateGas: `${eg}(${egPercents}%)`,\n      withdraw: `${qk}(${qkPercents}%)`,\n      transaction: `${swc}(${swcPercents}%)`\n    })\n  }\n\n  function imgError(e) {\n    const evn = e\n    const img = evn.srcElement ? evn.srcElement : evn.target\n    img.src = '/default.png'\n  }\n\n  /**\n   * check if toValue is valid\n   * @returns\n   */\n  const isValidToValue = () => {\n    if (toValue === '' || toValue === '-' || isEmpty(toValue.replace(/ /g, ''))) return\n    // should be a number\n    if (isNaN(Number(toValue))) return false\n    const nextValue = BN(toValue)\n    const nextToValue = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    // should be positive\n    if (nextToValue.lte(0)) return false\n    // should be integer\n    const nextToValueString = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    if (nextToValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (ethiBalance.lt(BigNumber.from(nextToValue.toFixed()))) return false\n    return true\n  }\n\n  /**\n   * check if allow loss is valid\n   * @returns\n   */\n  const isValidAllowLoss = () => {\n    if (allowMaxLoss === '' || isEmpty(allowMaxLoss.replace(/ /g, ''))) return\n    if (isNaN(allowMaxLoss)) return false\n    if (allowMaxLoss < 0 || allowMaxLoss > 50) return false\n    return true\n  }\n\n  const isValidSlipper = () => {\n    if (slipper === '' || isEmpty(slipper.replace(/ /g, ''))) return\n    if (isNaN(slipper)) return false\n    if (slipper < 0 || slipper > 45) return false\n    return true\n  }\n\n  useEffect(() => {\n    // need open advanced setting\n    // allowLoss, slipper, toValue need valid\n    if (isValidAllowLoss() && isValidSlipper() && isValidToValue()) {\n      estimateWithdraw()\n    }\n    if (isEmpty(toValue)) {\n      setEstimateWithdrawArray([])\n    }\n    return () => {\n      setEstimateWithdrawArray([])\n      return estimateWithdraw.cancel()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toValue, allowMaxLoss, slipper])\n\n  const handleAmountChange = event => {\n    try {\n      setToValue(event.target.value)\n    } catch (error) {\n      setToValue('')\n    }\n  }\n\n  const handleMaxClick = async () => {\n    const [nextEthiBalance] = await reloadBalance()\n    setToValue(formatBalance(nextEthiBalance, ethiDecimals, { showAll: true }))\n  }\n\n  const renderEstimate = () => {\n    if (isEstimate) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <CircularProgress fontSize=\"large\" color=\"primary\" />\n          </div>\n        </GridItem>\n      )\n    }\n    if (isUndefined(estimateWithdrawArray)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <ErrorOutlineIcon fontSize=\"large\" />\n            <p>Amount estimate failed, please try again!</p>\n          </div>\n        </GridItem>\n      )\n    }\n    if (isEmpty(estimateWithdrawArray) || isEmpty(toValue)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <p style={{ fontSize: 26, textAlign: 'right' }}>0.00</p>\n          </div>\n        </GridItem>\n      )\n    }\n    return map(estimateWithdrawArray, item => {\n      return (\n        <GridItem key={item.tokenAddress} xs={12} sm={12} md={6} lg={6}>\n          <Button\n            title={toFixed(item.amounts, BigNumber.from(10).pow(item.decimals))}\n            color=\"transparent\"\n            target=\"_blank\"\n            style={{ fontSize: 14, paddingBottom: 20 }}\n            onClick={() => addToken(item.tokenAddress)}\n          >\n            {item.tokenAddress !== ETH_ADDRESS && <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 25, left: 45 }} />}\n            <img\n              title=\"Add token address to wallet\"\n              className={classes.img}\n              style={{ borderRadius: '50%' }}\n              alt=\"\"\n              src={`./images/${item.tokenAddress}.png`}\n              onError={imgError}\n            />\n            &nbsp;&nbsp;~&nbsp;\n            {toFixed(item.amounts, BigNumber.from(10).pow(item.decimals), 6)}\n          </Button>\n        </GridItem>\n      )\n    })\n  }\n\n  const isValidToValueFlag = isValidToValue()\n  const isValidAllowLossFlag = isValidAllowLoss()\n\n  const isLogin = !isEmpty(userProvider)\n\n  const getPegTokenPrice = () => {\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract.getPegTokenPrice().then(result => {\n      setTimeout(() => {\n        setPegTokenPrice(result)\n      }, 500)\n    })\n    return getPegTokenPrice\n  }\n\n  useEffect(() => {\n    if (isEmpty(address) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI)) return\n    const timer = setInterval(getPegTokenPrice(), 10000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address])\n\n  return (\n    <>\n      <div className={classes.setting}>\n        <PopupState variant=\"popover\" popupId=\"setting-popover\">\n          {popupState => (\n            <div>\n              <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...bindTrigger(popupState)}>\n                <path\n                  d=\"M15 20.625C18.1066 20.625 20.625 18.1066 20.625 15C20.625 11.8934 18.1066 9.375 15 9.375C11.8934 9.375 9.375 11.8934 9.375 15C9.375 18.1066 11.8934 20.625 15 20.625Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M21.5273 7.62891C21.8242 7.90234 22.1055 8.18359 22.3711 8.47266L25.5703 8.92969C26.0916 9.83497 26.4934 10.804 26.7656 11.8125L24.8203 14.4023C24.8203 14.4023 24.8555 15.1992 24.8203 15.5977L26.7656 18.1875C26.4946 19.1965 26.0928 20.1656 25.5703 21.0703L22.3711 21.5273C22.3711 21.5273 21.8203 22.1016 21.5273 22.3711L21.0703 25.5703C20.165 26.0916 19.196 26.4934 18.1875 26.7656L15.5977 24.8203C15.2 24.8555 14.8 24.8555 14.4023 24.8203L11.8125 26.7656C10.8035 26.4946 9.83438 26.0928 8.92969 25.5703L8.47266 22.3711C8.18359 22.0977 7.90234 21.8164 7.62891 21.5273L4.42969 21.0703C3.90842 20.165 3.50663 19.196 3.23438 18.1875L5.17969 15.5977C5.17969 15.5977 5.14453 14.8008 5.17969 14.4023L3.23438 11.8125C3.50537 10.8035 3.90722 9.83438 4.42969 8.92969L7.62891 8.47266C7.90234 8.18359 8.18359 7.90234 8.47266 7.62891L8.92969 4.42969C9.83497 3.90842 10.804 3.50663 11.8125 3.23438L14.4023 5.17969C14.8 5.14452 15.2 5.14452 15.5977 5.17969L18.1875 3.23438C19.1965 3.50537 20.1656 3.90722 21.0703 4.42969L21.5273 7.62891Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <Popover\n                classes={{ paper: classes.popover }}\n                {...bindPopover(popupState)}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center'\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center'\n                }}\n              >\n                <Box p={2}>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={12} lg={12}>\n                      <p className={classes.popoverTitle}>Max Loss</p>\n                      <CustomTextField\n                        classes={{ root: classes.input }}\n                        value={allowMaxLoss}\n                        placeholder=\"Allow loss percent\"\n                        maxEndAdornment\n                        onMaxClick={() => setAllowMaxLoss('50')}\n                        onChange={event => {\n                          const value = event.target.value\n                          setAllowMaxLoss(value)\n                        }}\n                        error={!isUndefined(isValidAllowLossFlag) && !isValidAllowLossFlag}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Box>\n              </Popover>\n            </div>\n          )}\n        </PopupState>\n      </div>\n      <GridContainer className={classes.withdrawContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>From</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.inputLabelWrapper}>\n            <div className={classes.tokenInfo}>\n              <span className={classes.tokenName}>WETH</span>\n            </div>\n            <CustomTextField\n              classes={{ root: classes.input }}\n              value={toValue}\n              placeholder=\"withdraw amount\"\n              maxEndAdornment\n              onMaxClick={() => handleMaxClick()}\n              onChange={handleAmountChange}\n              error={!isUndefined(isValidToValueFlag) && !isValidToValueFlag && toValue !== '0'}\n            />\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText} title={formatBalance(ethiBalance, ethiDecimals, { showAll: true })}>\n            Balance:&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n          </p>\n        </GridItem>\n      </GridContainer>\n      <GridContainer className={classes.outputContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.selectorlWrapper}>\n            <p className={classes.estimateBalanceTitle}>WETH</p>\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          {renderEstimate()}\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button\n              disabled={!isLogin || (isLogin && (isUndefined(isValidToValueFlag) || !isValidToValueFlag))}\n              color=\"colorfull\"\n              onClick={withdraw}\n              style={{ width: '100%', padding: '12px 16px' }}\n            >\n              Withdraw\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip\n                }}\n                placement=\"top\"\n                title={`${redeemFeeBpsPercent}% withdrawal fee of the principal.`}\n              >\n                <InfoIcon style={{ marginLeft: '0.5rem' }} />\n              </Tooltip>\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isWithdrawLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.widthdrawLoadingPaper}>\n          <div className={classes.modalBody}>\n            {isEmpty(withdrawError) && <CircularProgress color=\"inherit\" />}\n            {isEmpty(withdrawError) ? <p>In Withdrawing...</p> : <p>Withdraw Error !</p>}\n            <BocStepper\n              classes={{\n                root: classes.root\n              }}\n              alternativeLabel\n              activeStep={currentStep}\n              connector={<BocStepConnector />}\n            >\n              {map(steps, (i, index) => {\n                return (\n                  <Step key={index}>\n                    <BocStepLabel StepIconComponent={BocStepIcon}>{i.title}</BocStepLabel>\n                  </Step>\n                )\n              })}\n            </BocStepper>\n            {!isEmpty(withdrawError) && (\n              <p\n                style={{\n                  color: withdrawError.type === 'error' ? 'red' : 'yellow'\n                }}\n              >\n                <WarningIcon style={{ verticalAlign: 'bottom' }}></WarningIcon>\n                &nbsp;&nbsp;&nbsp;{withdrawError.message}\n              </p>\n            )}\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                setIsWithdrawLoading(false)\n                setWithdrawError({})\n                setCurrentStep(0)\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Paper>\n      </Modal>\n      <Modal\n        className={classes.modal}\n        open={isShowZipModal && !!address}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.swapBody}>\n          {!isEmpty(address) && !isEmpty(exchangeManager) && (\n            <ApproveArrayV2\n              isEthi\n              address={address}\n              tokens={burnTokens}\n              userProvider={userProvider}\n              exchangeManager={exchangeManager}\n              EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n              EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n              slippage={slipper}\n              onSlippageChange={setSlipper}\n              handleClose={() => setIsShowZipModal(false)}\n            />\n          )}\n        </div>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\nimport { gradientText } from '@/assets/jss/common.js'\n\nconst componentsStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: 65,\n    marginBottom: 100,\n    ...container\n  },\n  center: {\n    justifyContent: 'center',\n    padding: '50px 72px 50px',\n    backgroundColor: '#0c0735cc',\n    [theme.breakpoints.down('md')]: {\n      padding: '50px 16px 50px'\n    },\n    margin: 0\n  },\n  wrapper: {\n    padding: '5rem 3rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  wrapperMobile: {\n    padding: '3rem 2rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  deposit: {\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderTopLeftRadius: '1.25rem',\n    borderTopRightRadius: '1.25rem'\n  },\n  balance: {\n    marginTop: '0.5rem',\n    marginBottom: '2rem',\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderBottomLeftRadius: '1.25rem',\n    borderBottomRightRadius: '1.25rem'\n  },\n  symbol: {\n    color: '#A68EFD',\n    marginLeft: '1rem',\n    ...gradientText\n  },\n  footer: {},\n  item: {\n    color: '#fff',\n    marginBottom: 20,\n    '& .MuiListItemIcon-root': {\n      minWidth: '38px'\n    }\n  },\n  centerItem: {\n    width: '630px'\n  },\n  balanceCard: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: '0 1rem 1rem 0',\n    textAlign: 'left',\n    padding: '2.8125rem 2.4375rem',\n    background: '#323338',\n    color: '#fff',\n    borderRadius: '1.25rem'\n  },\n  check: {\n    color: '#A68EFE'\n  },\n  balanceCardValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 30,\n    lineHeight: '30px',\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  balanceCardLabel: {\n    color: '#b2add1',\n    fontSize: 14\n  },\n  tokenInfo: {\n    display: 'flex',\n    position: 'absolute',\n    right: 12,\n    top: 9\n  },\n  addTokenIcon: {\n    cursor: 'pointer',\n    marginLeft: '1rem',\n    display: 'flex'\n  },\n  scanToken: {\n    width: 24,\n    height: 'auto',\n    cursor: 'pointer',\n    borderRadius: '50%',\n    backgroundColor: '#fff'\n  },\n  hidden: {\n    display: 'none'\n  },\n  brand: {\n    color: '#FFFFFF',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '4.2rem',\n    fontWeight: '600',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    width: 'auto',\n    margin: '10px 0 0'\n  },\n  main: {\n    position: 'relative',\n    backgroundColor: 'transparent'\n  },\n  mainRaised: {\n    margin: '0 auto',\n    marginTop: 65\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  radioUnchecked: {\n    width: '0px',\n    height: '0px',\n    padding: '7px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioChecked: {\n    width: '16px',\n    height: '16px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioRoot: {\n    padding: '12px',\n    '&:hover': {\n      backgroundColor: 'unset'\n    }\n  },\n  radio: {\n    color: '#fff !important'\n  },\n  investCard: {\n    padding: '20px 24px',\n    borderRadius: 6,\n    backgroundColor: 'rgba(39, 31, 114, 0.8)',\n    overflow: 'visible'\n  },\n  table: {\n    backgroundColor: '#150752',\n    border: '1px solid rgb(222, 217, 213)'\n  },\n  tableCell: {\n    color: '#fff',\n    fontSize: '12px',\n    letterSpacing: '0.01071em'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& .MuiPaper-root': {\n      minWidth: 430,\n      minHeight: 120,\n      padding: '32px 24px',\n      fontSize: 16,\n      border: 0,\n      color: '#fff',\n      boxShadow: '0px 15px 15px rgba(0, 0, 0, 0.05)',\n      borderRadius: '20px',\n      background: '#292B2E',\n      outline: 0,\n      width: '550px'\n    }\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  stepContainer: {\n    padding: 20\n  },\n  stepItem: {\n    color: '#fff'\n  },\n  tabsRoot: {\n    padding: '0 20px'\n  },\n  tabsIndicator: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    '& > span': {\n      maxWidth: 120,\n      width: '100%',\n      backgroundColor: '#fff'\n    }\n  },\n  tabTextColor: {\n    color: '#fff'\n  },\n  tabRoot: {\n    width: '50%',\n    fontSize: '16px',\n    maxWidth: 'none'\n  },\n  detailWrapper: {\n    margin: '42px 0 0 0'\n  },\n  slider: {\n    position: 'absolute',\n    top: '50px',\n    left: 'calc(50% - 33rem)',\n    backgroundColor: '#271f72',\n    color: 'azure'\n  },\n  text: {\n    color: 'azure'\n  },\n  spliter: {\n    display: 'flex',\n    justifyContent: 'center',\n    bottom: 0,\n    height: 2,\n    position: 'absolute',\n    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '54%',\n    backgroundColor: '#fff'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@material-ui/core/Card'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport Loading from '@/components/LoadingComponent'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n// === Components === //\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport MyStatement from '@/components/MyStatement/MyStatement1'\nimport MyVault from '@/components/MyVault'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// === Reducers === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { setCurrentTab } from '@/reducers/invest-reducer'\n\n// === constants === //\nimport { ETH_ADDRESS, ETH_DECIMALS } from '@/constants/tokens'\nimport { INVEST_TAB } from '@/constants/invest'\nimport { IERC20_ABI, CHAIN_ID } from '@/constants'\n\n// === Utils === //\nimport { formatBalance } from '@/helpers/number-format'\nimport isEmpty from 'lodash/isEmpty'\nimport last from 'lodash/last'\nimport noop from 'lodash/noop'\nimport * as ethers from 'ethers'\nimport useVersionWapper from '@/hooks/useVersionWapper'\nimport { addToken } from '@/helpers/wallet'\nimport useVault from '@/hooks/useVault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\nconst { BigNumber } = ethers\n\nfunction Usdr(props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const isLayoutSm = useMediaQuery('(max-width: 960px)')\n\n  const [personalVaultAddress, setPersonalVaultAddress] = useState()\n  const [isVisiable, setIsVisiable] = useState(true)\n\n  const {\n    address,\n    userProvider,\n    ETHI_ADDRESS,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    EXCHANGE_AGGREGATOR_ABI,\n    EXCHANGE_ADAPTER_ABI,\n    PRICE_ORCALE_ABI,\n    VAULT_BUFFER_ADDRESS,\n    VAULT_BUFFER_ABI\n  } = props\n\n  const [ethBalance, setEthBalance] = useState(BigNumber.from(0))\n  const [ethiBalance, setEthiBalance] = useState(BigNumber.from(0))\n  const [ethiDecimals, setEthiDecimals] = useState(0)\n  const ethDecimals = ETH_DECIMALS\n\n  const [beforeTotalValue, setBeforeTotalValue] = useState(BigNumber.from(0))\n  const [totalValue, setTotalValue] = useState(BigNumber.from(0))\n\n  const [vaultBufferBalance, setVaultBufferBalance] = useState(BigNumber.from(0))\n  const [vaultBufferDecimals, setVaultBufferDecimals] = useState(0)\n\n  const [isBalanceLoading, setIsBalanceLoading] = useState(false)\n\n  const current = useSelector(state => state.investReducer.currentTab)\n  const setCurrent = tab => {\n    loadCoinsBalance()\n    dispatch(setCurrentTab(tab))\n  }\n  const { minimumInvestmentAmount, exchangeManager } = useVault(VAULT_ADDRESS, VAULT_ABI, userProvider)\n\n  // load user balance\n  const loadBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    Promise.all([\n      loadCoinsBalance(),\n      ethiContract\n        .decimals()\n        .then(setEthiDecimals)\n        .catch(() => setEthiDecimals(1)),\n      vaultBufferContract\n        .decimals()\n        .then(setVaultBufferDecimals)\n        .catch(() => setVaultBufferDecimals(1))\n    ]).catch(() => {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: \"Please confirm wallet's network!\"\n        })\n      )\n    })\n  }\n\n  const loadCoinsBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    setIsBalanceLoading(true)\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    return Promise.all([\n      ethiContract.balanceOf(address).catch(() => BigNumber.from(0)),\n      userProvider.getBalance(address),\n      vaultBufferContract.balanceOf(address).catch(() => BigNumber.from(0))\n    ])\n      .then(([ethiBalance, ethBalance, vaultBufferBalance]) => {\n        setEthBalance(ethBalance)\n        setEthiBalance(ethiBalance)\n        setVaultBufferBalance(vaultBufferBalance)\n        return [ethiBalance, ethBalance, vaultBufferBalance]\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsBalanceLoading(false)\n        }, 500)\n      })\n  }\n\n  useEffect(() => {\n    if (isEmpty(VAULT_ADDRESS)) return\n    const loadTotalAssetsFn = () =>\n      loadTotalAssets()\n        .then(afterTotalValue => {\n          if (!afterTotalValue.eq(beforeTotalValue)) {\n            setBeforeTotalValue(totalValue)\n            setTotalValue(afterTotalValue)\n          }\n        })\n        .catch(noop)\n    const timer = setInterval(loadTotalAssetsFn, 3000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [totalValue.toString()])\n\n  function handleMint(...eventArgs) {\n    console.log('Mint=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n  function handleBurn(...eventArgs) {\n    console.log('Burn=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n\n  useEffect(() => {\n    const listener = () => {\n      if (isEmpty(VAULT_ABI) || isEmpty(userProvider)) return\n      loadBalance()\n      if (isEmpty(VAULT_ADDRESS)) return\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      if (!isEmpty(address)) {\n        vaultContract.on('Mint', handleMint)\n        vaultContract.on('Burn', handleBurn)\n        return () => {\n          vaultContract.off('Mint', handleMint)\n          vaultContract.off('Burn', handleBurn)\n        }\n      }\n    }\n    return listener()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  const loadTotalAssets = () => {\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    return ethiContract.totalSupply()\n  }\n\n  const handleAddETHi = () => {\n    addToken(ETHI_ADDRESS, 'ETHi', 18)\n  }\n\n  return (\n    <div className={classes.container}>\n      <GridContainer spacing={0} style={{ paddingTop: '100px' }}>\n        <GridItem xs={2} sm={2} md={3} style={{ paddingLeft: '2rem' }}>\n          <List>\n            <ListItem key=\"My Account\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.account)}>\n              <ListItemIcon>\n                <AccountBalanceWalletIcon style={{ color: current === INVEST_TAB.account ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'My Account'} className={classNames(current === INVEST_TAB.account ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem\n              key=\"Deposit\"\n              button\n              className={classNames(classes.item, current === INVEST_TAB.deposit && classes.check)}\n              onClick={() => setCurrent(INVEST_TAB.deposit)}\n            >\n              <ListItemIcon>\n                <SaveAltIcon style={{ color: current === INVEST_TAB.deposit ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Deposit'} className={classNames(current === INVEST_TAB.deposit ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem key=\"Withdraw\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.withdraw)}>\n              <ListItemIcon>\n                <UndoIcon style={{ color: current === INVEST_TAB.withdraw ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Withdraw'} className={classNames(current === INVEST_TAB.withdraw ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n          </List>\n        </GridItem>\n        {current === INVEST_TAB.deposit && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Deposit\n                address={address}\n                ethBalance={ethBalance}\n                ethDecimals={ethDecimals}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                vaultBufferBalance={vaultBufferBalance}\n                vaultBufferDecimals={vaultBufferDecimals}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n                minimumInvestmentAmount={minimumInvestmentAmount}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.withdraw && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Withdraw\n                address={address}\n                exchangeManager={exchangeManager}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n                EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n                PRICE_ORCALE_ABI={PRICE_ORCALE_ABI}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.account && (\n          <GridItem xs={9} sm={9} md={9}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper} style={{ background: 'none', paddingTop: '1rem', paddingLeft: 0 }}>\n              <Card className={classes.balanceCard}>\n                <div className={classes.balanceCardItem}>\n                  <div className={classes.balanceCardValue}>\n                    <span\n                      title={formatBalance(ethiBalance, ethiDecimals, {\n                        showAll: true\n                      })}\n                    >\n                      <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n                    </span>\n                    <span className={classes.symbol}>WETH</span>\n                    {userProvider && (\n                      <span title=\"Add token address to wallet\">\n                        <AddCircleOutlineIcon className={classes.addTokenIcon} onClick={handleAddETHi} fontSize=\"small\" />\n                      </span>\n                    )}\n                  </div>\n                  <div className={classes.balanceCardLabel}>AVAILABLE BALANCE</div>\n                </div>\n              </Card>\n              {!isEmpty(address) && !isEmpty(personalVaultAddress) && (\n                <MyStatement address={address} chain={`${CHAIN_ID}`} VAULT_ADDRESS={VAULT_ADDRESS} type={'ETHi'} />\n              )}\n            </div>\n          </GridItem>\n        )}\n        <Modal className={classes.modal} open={isVisiable} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n          <Paper elevation={3}>\n            <MyVault\n              setPersonalVaultAddress={v => {\n                setIsVisiable(false)\n                setPersonalVaultAddress(v)\n              }}\n            />\n          </Paper>\n        </Modal>\n      </GridContainer>\n    </div>\n  )\n}\n\nexport default useVersionWapper(Usdr, 'Usdr')\n","// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\nconst { Contract } = ethers\n\nconst usePriceProvider = params => {\n  const { userProvider, VAULT_ADDRESS, VAULT_ABI, PRICE_ORCALE_ABI } = params\n\n  const getPriceProvider = async () => {\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS)) {\n      throw new Error('userProvider or VAULT_ADDRESS is empty')\n    }\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    return vaultContract.priceProvider().then(priceOracleAddress => {\n      const priceOracleContract = new Contract(priceOracleAddress, PRICE_ORCALE_ABI, userProvider)\n      return priceOracleContract\n    })\n  }\n\n  return {\n    getPriceProvider\n  }\n}\n\nexport default usePriceProvider\n"],"sourceRoot":""}