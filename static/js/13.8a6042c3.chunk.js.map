{"version":3,"sources":["components/MyStatement/MyStatement1.jsx","../node_modules/lodash/flatten.js","../node_modules/@material-ui/icons/Build.js","../node_modules/@material-ui/icons/CompareArrows.js","hooks/useVaultFactory.js","components/MyVault/style.js","components/MyVault/index.jsx","pages/Usdr/Deposit/style.js","pages/Usdr/Deposit/index.jsx","pages/Usdr/Withdraw/style.js","pages/Usdr/Withdraw/index.jsx","hooks/useVaultOnRisk.js","pages/Usdr/style.js","pages/Usdr/index.jsx"],"names":["useStyles","makeStyles","styles","MyStatement1","props","address","type","chain","isUSDi","classes","useState","optionForLineChart","setOptionForLineChart","usePersonalData","dataSource","chartLoading","loading","useEffect","option1","getLineEchartOpt","date","balance","token","format","xAxis","axisTick","alignWithLabel","console","log","cardProps","title","tip","tooltip","placement","style","fontSize","color","content","numeral","toFixed","ETHI_BN_DECIMALS","TOKEN_DISPLAY_DECIMALS","ETHI_DISPLAY_DECIMALS","unit","isAPY","xs","sm","md","lg","map","i","index","key","className","lineChart","marginLeft","loadingOption","width","height","option","minHeight","baseFlatten","require","module","exports","array","length","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","Contract","ethers","tokens","WETH_ADDRESS_MATIC","USDC_ADDRESS_MATIC","useVaultFactory","vaultFactoryAddress","VAULT_FACTORY_ABI","userProvider","vaultImplList","setVaultImplList","personalVault","setPersonalVault","adding","setAdding","userAddress","useUserAddress","getVaultImplList","useCallback","isEmpty","then","getVaultImplListByUser","vaultFactoryContract","requestArray","implAddress","Promise","all","arrayItem","vaultAddressMap","rs","ZERO_ADDRESS","hasCreate","resp","flatten","addVault","connect","getSigner","createNewVault","tx","wait","finally","deleteVault","deleteVaultAddressMapForDebug","componentsStyle","template","display","alignItems","padding","borderRadius","background","cursor","vault","vaultTitle","textAlign","icon","button","marginTop","logo","checked","border","tokenInfo","flex","name","input","maxWidth","MyVault","vaultChangeHandle","VAULT_FACTORY_ADDRESS","vaults","filter","includes","GridContainer","spacing","item","GridItem","alt","src","Button","startIcon","onClick","container","modal","justifyContent","modalBody","depositContainer","borderTopLeftRadius","borderTopRightRadius","estimateContainer","borderBottomLeftRadius","borderBottomRightRadius","estimateText","margin","estimateBalanceTitle","estimateBalanceNum","float","footerContainer","tokenInputWrapper","marginBottom","inputLabelWrapper","depositComfirmArea","tokenName","tokenLogo","marginRight","flexText","ModalTokenLogo","labelToolTipIcon","depositModal","backgroundColor","root","paddingTop","subTitle","BigNumber","Deposit","VAULT_ABI","VAULT_ADDRESS","ETH_ADDRESS","isBalanceLoading","minimumInvestmentAmount","wantTokenBalance","wantTokenDecimals","wantTokenSymbol","wantTokenForVault","dispatch","useDispatch","ethValue","setEthValue","isLoading","setIsLoading","loadingTimer","useRef","isValidValue","decimals","replace","isNaN","Number","nextValue","BN","nextFromValue","multipliedBy","from","pow","toString","lte","indexOf","lt","diposit","clearTimeout","current","warmDialog","open","message","amount","signer","vaultContract","nVaultWithUser","isSuccess","extendObj","isNumber","MULTIPLE_OF_GAS","estimateGas","mint","gas","gasLimit","Math","ceil","maxGasLimit","MAX_GAS_LIMIT","catch","error","errorMsg","errorTextOutput","isEs","isAd","isRp","isDistributing","isLessThanMinValue","BN_18","setTimeout","estimateMint","debounce","cancel","estimatedUsedValue","isLogin","isValid","CustomTextField","onChange","event","target","placeholder","maxEndAdornment","onMaxClick","maxValue","formatBalance","gt","showAll","isUndefined","disabled","Modal","aria-labelledby","aria-describedby","Paper","elevation","CircularProgress","switchBar","img","switchBase","switchChecked","swapBody","outline","withdrawContainer","outputContainer","receiveTokenItem","settingBtn","lineHeight","settingTitle","letterSpacing","settingItem","settingItemLabel","position","minWidth","mutedLabel","maxLossFormCtrl","exchanged","paddingLeft","left","top","transform","slippageItem","slippageInput","widthdrawLoadingPaper","estimateItem","setting","right","popover","popoverTitle","steps","Withdraw","reloadBalance","totalAsset","toValue","setToValue","estimateWithdrawArray","setEstimateWithdrawArray","isEstimate","setIsEstimate","isWithdrawLoading","setIsWithdrawLoading","currentStep","setCurrentStep","withdrawError","setWithdrawError","pegTokenPrice","setPegTokenPrice","redeemFeeBpsPercent","toNumber","estimateWithdraw","usdValue","mul","div","allowMaxLossValue","parseInt","parseFloat","vaultContractWithSigner","callStatic","burn","amounts","compact","get","tokenAddress","nextEstimateWithdrawArray","isMaxLoss","isLossMuch","isExchangeFail","undefined","handleBurn","withdraw","withdrawTimeStart","Date","now","withdrawValidFinish","preWithdrawGetCoins","getSwapInfoFinish","estimateGasFinish","withdrawFinish","withdrawTransationFinish","isValidToValue","isValidAllowLoss","isValidSlipper","events","args","szjyPercents","szjy","totalTime","ytqPercents","ytq","hqdhljPercents","hqdhlj","egPercents","eg","qkPercents","qk","swcPercents","swc","table","valid","preWithdraw","getSwapPath","transaction","imgError","e","evn","srcElement","nextToValue","handleMaxClick","nexttotalAsset","isValidToValueFlag","timer","setInterval","getPegTokenPrice","result","clearInterval","selectorlWrapper","paddingBottom","addToken","onError","Tooltip","alternativeLabel","activeStep","connector","Step","StepIconComponent","BocStepIcon","verticalAlign","useVaultOnRisk","setError","setLoading","setTotalAsset","underlyingUnitsPerShare","setUnderlyingUnitsPerShare","setMinimumInvestmentAmount","Error","queryBaseInfo","depositTo3rdPoolTotalAssets","fetchUnderlyingUnitsPerShare","theme","zIndex","center","breakpoints","down","wrapper","wrapperMobile","deposit","symbol","gradientText","footer","centerItem","balanceCard","check","balanceCardValue","fontWeight","balanceCardLabel","addTokenIcon","scanToken","hidden","brand","subtitle","main","mainRaised","link","textDecoration","textCenter","radioUnchecked","radioChecked","radioRoot","radio","investCard","overflow","tableCell","boxShadow","stepContainer","stepItem","tabsRoot","tabsIndicator","tabTextColor","tabRoot","detailWrapper","slider","text","spliter","bottom","transition","useVersionWapper","isLayoutSm","useMediaQuery","UNISWAPV3_RISK_ON_VAULT","setIsBalanceLoading","personalVaultAddress","setPersonalVaultAddress","setWantTokenForVault","setWantTokenBalance","setWantTokenDecimals","setWantTokenSymbol","isVisiable","setIsVisiable","useSelector","state","investReducer","currentTab","setCurrent","tab","loadData","setCurrentTab","handleAddToken","wantTokenContract","IERC20_ABI","balanceOf","List","ListItem","classNames","INVEST_TAB","account","ListItemIcon","ListItemText","primary","Card","balanceCardItem","CHAIN_ID"],"mappings":";gTA6BMA,EAAYC,YAAWC,KAwOdC,IAtOM,SAAAC,GACnB,IAAQC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAEjBC,EAAkB,SAATF,EACTG,EAAUT,IAChB,EAAoDU,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAA8CC,YAAgBN,EAAOD,EAAMD,EAASC,GAA5EQ,EAAR,EAAQA,WAAqBC,EAA7B,EAAoBC,QAEpBC,qBAAU,WACR,IA8BMC,EAAUC,YA9BH,CACX,CACEC,KAAM,aACNC,QAAS,KAEX,CACED,KAAM,aACNC,QAAS,MAEX,CACED,KAAM,aACNC,QAAS,MAEX,CACED,KAAM,aACNC,QAAS,MAEX,CACED,KAAM,aACNC,QAAS,MAEX,CACED,KAAM,aACNC,QAAS,MAEX,CACED,KAAM,aACNC,QAAS,OAG0B,UAAWP,EAAWQ,MAAO,CAClEC,OAAQ,QACRC,MAAO,CACLC,SAAU,CACRC,gBAAgB,MAItBC,QAAQC,IAAI,WAAYV,GACxBN,EAAsBM,KACrB,CAACJ,EAAYT,IAEhB,IAAMwB,EAAY,CAChB,CACEC,MAAO,cACPC,IACE,kBAAC,IAAD,CACEtB,QAAS,CACPuB,QAASvB,EAAQuB,SAEnBC,UAAU,QACVH,MAAO,gEAEP,kBAAC,IAAD,CAAUI,MAAO,CAAEC,SAAU,WAAYC,MAAO,6BAGpDC,QAASC,IAAQC,YAAQ,uBAAwBC,IAAkBhC,EAASiC,IAAyBC,MAAwBnB,OAC3Hf,EAAS,WAAa,cAExBmC,KAAM,QAER,CACEb,MAAO,gBACPC,IACE,kBAAC,IAAD,CACEtB,QAAS,CACPuB,QAASvB,EAAQuB,SAEnBC,UAAU,QACVH,MAAO,6BAEP,kBAAC,IAAD,CAAUI,MAAO,CAAEC,SAAU,WAAYC,MAAO,6BAGpDC,QAASC,IAAQC,YAAQ,uBAAwBC,IAAkBhC,EAASiC,IAAyBC,MAAwBnB,OAC3Hf,EAAS,WAAa,cAExBoC,OAAO,EACPD,KAAM,QAER,CACEb,MAAO,MACPC,IACE,kBAAC,IAAD,CACEtB,QAAS,CACPuB,QAASvB,EAAQuB,SAEnBC,UAAU,QACVH,MAAO,8BAEP,kBAAC,IAAD,CAAUI,MAAO,CAAEC,SAAU,WAAYC,MAAO,6BAGpDC,QAASC,IAAQ,QAAQf,OAAO,UAChCqB,OAAO,EACPD,KAAM,MAIV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,KACGC,IAAIpB,GAAW,SAACqB,EAAGC,GAClB,OACE,kBAAC,IAAD,CAAUC,IAAKD,EAAON,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,IAASE,QAKlB,kBAAC,IAAD,CAAeG,UAAW5C,EAAQ6C,WAChC,kBAAC,IAAD,CAAUT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,CACEhC,QAASD,EACTe,MACE,sDAEE,kBAAC,IAAD,CAASA,MAAK,6CAAwCtB,EAAS,OAAS,OAA1D,uBACZ,kBAAC,IAAD,CAAU0B,MAAO,CAAEqB,WAAY,EAAGpB,SAAU,YAIlDqB,cAAe,CACbC,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CAAYC,OAAQhD,EAAoBuB,MAAO,CAAE0B,UAAW,cAIlE,kBAAC,IAAD,CAAeP,UAAW5C,EAAQ6C,WAChC,kBAAC,IAAD,CAAUT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,CACEhC,QAASD,EACTe,MACE,gDAEE,kBAAC,IAAD,CAASA,MAAK,6CAAwCtB,EAAS,OAAS,OAA1D,uBACZ,kBAAC,IAAD,CAAU0B,MAAO,CAAEqB,WAAY,EAAGpB,SAAU,YAIlDqB,cAAe,CACbC,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CAAYC,OAAQhD,EAAoBuB,MAAO,CAAE0B,UAAW,cAIlE,kBAAC,IAAD,CAAeP,UAAW5C,EAAQ6C,WAChC,kBAAC,IAAD,CAAUT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,CACEhC,QAASD,EACTe,MACE,kDAEE,kBAAC,IAAD,CAASA,MAAK,6CAAwCtB,EAAS,OAAS,OAA1D,uBACZ,kBAAC,IAAD,CAAU0B,MAAO,CAAEqB,WAAY,EAAGpB,SAAU,YAIlDqB,cAAe,CACbC,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CAAYC,OAAQhD,EAAoBuB,MAAO,CAAE0B,UAAW,cAIlE,kBAAC,IAAD,CAAeP,UAAW5C,EAAQ6C,WAChC,kBAAC,IAAD,CAAUT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,CACEhC,QAASD,EACTe,MACE,uDAEE,kBAAC,IAAD,CAASA,MAAK,6CAAwCtB,EAAS,OAAS,OAA1D,uBACZ,kBAAC,IAAD,CAAU0B,MAAO,CAAEqB,WAAY,EAAGpB,SAAU,YAIlDqB,cAAe,CACbC,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CAAYC,OAAQhD,EAAoBuB,MAAO,CAAE0B,UAAW,cAIlE,kBAAC,IAAD,CAAeP,UAAW5C,EAAQ6C,WAChC,kBAAC,IAAD,CAAUT,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,kBAAC,IAAD,CACEhC,QAASD,EACTe,MACE,kDAEE,kBAAC,IAAD,CAASA,MAAK,6CAAwCtB,EAAS,OAAS,OAA1D,uBACZ,kBAAC,IAAD,CAAU0B,MAAO,CAAEqB,WAAY,EAAGpB,SAAU,YAIlDqB,cAAe,CACbC,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CAAYC,OAAQhD,EAAoBuB,MAAO,CAAE0B,UAAW,kB,qBC5P1E,IAAIC,EAAcC,EAAQ,KAqB1BC,EAAOC,QALP,SAAiBC,GAEf,OADsB,MAATA,EAAgB,EAAIA,EAAMC,QACvBL,EAAYI,EAAO,GAAK,K,kCChB1C,IAAIE,EAAyBL,EAAQ,IAEjCM,EAA0BN,EAAQ,KAEtCO,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAIC,EAAQL,EAAwBN,EAAQ,IAIxCY,GAAW,EAFMP,EAAuBL,EAAQ,MAElBU,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,6KACD,SAEJZ,EAAQQ,QAAUE,G,kCCjBlB,IAAIP,EAAyBL,EAAQ,IAEjCM,EAA0BN,EAAQ,KAEtCO,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAIC,EAAQL,EAAwBN,EAAQ,IAIxCY,GAAW,EAFMP,EAAuBL,EAAQ,MAElBU,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,6EACD,iBAEJZ,EAAQQ,QAAUE,G,2hNCLlB,IAAQG,EAAaC,IAEfC,EAAS,CAACC,IAAoBC,KAqFrBC,EAnFS,SAACC,EAAqBC,EAAmBC,GAC/D,MAA0C3E,mBAAS,IAAnD,mBAAO4E,EAAP,KAAsBC,EAAtB,KACA,EAA0C7E,mBAAS,IAAnD,mBAAO8E,EAAP,KAAsBC,EAAtB,KACA,EAA4B/E,oBAAS,GAArC,mBAAOgF,EAAP,KAAeC,EAAf,KAEMC,EAAcC,YAAeR,GAE7BS,EAAmBC,uBAAY,WAC/BC,IAAQb,IAAwBa,IAAQX,IACf,IAAIR,EAASM,EAAqBC,EAAmBC,GAC7DS,mBAAmBG,KAAKV,KAC5C,CAACJ,EAAqBE,EAAcD,IAEjCc,EAAyBH,uBAAY,WACzC,KAAIC,IAAQb,IAAwBa,IAAQX,IAAiBW,IAAQV,IAAkBU,IAAQJ,IAA/F,CACA,IAAMO,EAAuB,IAAItB,EAASM,EAAqBC,EAAmBC,GAC5Ee,EAAenD,IAAIqC,GAAe,SAAAe,GACtC,OAAOC,QAAQC,IACbtD,IAAI8B,GAAQ,SAACyB,EAAWrD,GACtB,OAAOgD,EAAqBM,gBAAgBb,EAAaS,EAAalD,GAAO8C,MAAK,SAAAS,GAChF,OAAIA,IAAOC,IAAqB,CAAEC,WAAW,EAAOtG,KAAM+F,EAAa/E,MAAOkF,GACvE,CACLnG,QAASqG,EACTpG,KAAM+F,EACNO,WAAW,EACXtF,MAAOkF,aAMjBF,QAAQC,IAAIH,GAAcH,MAAK,SAAAY,GAC7BpB,EAAiBqB,IAAQD,UAE1B,CAACjB,EAAaT,EAAqBE,EAAcC,EAAeF,IAE7D2B,EAAWhB,sBAAW,uCAC1B,WAAOzE,EAAOhB,GAAd,8EACEqF,GAAU,GACJQ,EAAuB,IAAItB,EAASM,EAAqBC,EAAmBC,GAFpF,SAGQc,EACHa,QAAQ3B,EAAa4B,aACrBC,eAAe5F,EAAOhB,GACtB2F,MAAK,SAAAkB,GAAE,OAAIA,EAAGC,UACdnB,KAAKC,GACLmB,SAAQ,WACP1B,GAAU,MAThB,2CAD0B,wDAa1B,CAACR,EAAqBE,EAAca,EAAwBd,IAGxDkC,EAAcvB,sBAAW,uCAC7B,WAAOzF,EAAM6C,GAAb,iEACEwC,GAAU,GACmB,IAAId,EAASM,EAAqBC,EAAmBC,GAE/E2B,QAAQ3B,EAAa4B,aACrBM,8BAA8B3B,EAAatF,EAAM6C,GACjD8C,MAAK,SAAAkB,GAAE,OAAIA,EAAGC,UACdnB,KAAKC,GACLmB,SAAQ,WACP1B,GAAU,MAThB,2CAD6B,wDAa7B,CAACR,EAAqBe,EAAwBN,EAAaP,EAAcD,IAO3E,OAJAnE,oBAAU6E,EAAkB,CAACA,IAE7B7E,oBAAUiF,EAAwB,CAACA,IAE5B,CACLf,sBACAG,gBACAE,gBACAE,SAEAqB,WACAO,gB,kBC/CWE,EAlDS,iBAAO,CAC7BC,SAAU,CACRC,QAAS,OACTC,WAAY,SACZC,QAAS,OACTC,aAAc,OACdC,WAAY,+FACZC,OAAQ,WAEVC,MAAO,CACLJ,QAAS,OACTC,aAAc,OACdC,WAAY,gGAEdG,WAAY,CACVC,UAAW,UAEbC,KAAM,CACJ1E,MAAO,OACPoE,aAAc,OAEhBO,OAAQ,CACN3E,MAAO,OACP4E,UAAW,QAEbC,KAAM,CACJ7E,MAAO,OACPoE,aAAc,OAEhBU,QAAS,CACPC,OAAQ,qBAEVlH,MAAO,CACLoG,QAAS,OACTC,WAAY,SACZU,UAAW,QAEbI,UAAW,CACTC,KAAM,EACNhB,QAAS,OACTC,WAAY,UAEdgB,KAAM,CACJpF,WAAY,QAEdqF,MAAO,CACLC,SAAU,W,SCxBR7I,EAAYC,YAAWC,GAqDd4I,IAnDC,SAAA1I,GACd,IAAQ2I,EAAsF3I,EAAtF2I,kBAAmB1D,EAAmEjF,EAAnEiF,aAAc2D,EAAqD5I,EAArD4I,sBAAuB5D,EAA8BhF,EAA9BgF,kBAAmBL,EAAW3E,EAAX2E,OACnF,EAAoCG,EAAgB8D,EAAuB5D,EAAmBC,GAAtFG,EAAR,EAAQA,cAAeuB,EAAvB,EAAuBA,SACjBtG,EAAUT,IAEViJ,EAASC,IAAO1D,GAAe,SAAAtC,GAAC,OAAI6B,EAAOoE,SAASjG,EAAE5B,UAG5D,OADA2H,EAAO/E,OAAS,EAEd,kBAACkF,EAAA,EAAD,CAAeC,QAAS,GACrBpG,IAAIgG,GAAQ,SAACK,EAAMnG,GAClB,OACE,kBAACoG,EAAA,EAAD,CAAUxG,GAAI,EAAGK,IAAKD,GACnB6C,kBAAQsD,GACP,yBAAKjG,UAAW5C,EAAQuH,OACtB,yBAAK3E,UAAW5C,EAAQwH,YACtB,yBAAKuB,IAAI,GAAGnG,UAAW5C,EAAQ0H,KAAMsB,IAAG,wCAG1C,kBAACC,EAAA,EAAD,CAAQtH,MAAM,YAAYuH,UAAW,kBAAC,IAAD,MAAetG,UAAW5C,EAAQ2H,QAAvE,mBAKF,yBAAK/E,UAAW5C,EAAQuH,OACtB,yBAAK3E,UAAW5C,EAAQwH,YACtB,yBAAKuB,IAAI,GAAGnG,UAAW5C,EAAQ0H,KAAMsB,IAAG,wCAAmCH,EAAKhI,MAAxC,WAEzCgI,EAAK1C,UACJ,kBAAC8C,EAAA,EAAD,CACEtH,MAAM,YACNuH,UAAW,kBAAC,IAAD,MACXtG,UAAW5C,EAAQ2H,OACnBwB,QAAS,kBAAMb,EAAkBO,EAAKjJ,QAASiJ,EAAKhI,SAJtD,WASA,kBAACoI,EAAA,EAAD,CAAQtH,MAAM,YAAYuH,UAAW,kBAAC,IAAD,MAA0BtG,UAAW5C,EAAQ2H,OAAQwB,QAAS,kBAAM7C,EAASuC,EAAKhI,MAAOgI,EAAKhJ,QAAnI,kB,geCqCHkH,EAjGS,iBAAO,CAC7BqC,cACAC,MAAO,CACLpC,QAAS,OACTC,WAAY,SACZoC,eAAgB,UAElBC,UAAW,CACT9B,UAAW,UAEb+B,iBAAkB,CAChBzB,OAAQ,oBACR0B,oBAAqB,OACrBC,qBAAsB,OACtBvC,QAAS,qBAEXwC,kBAAmB,CACjB5B,OAAQ,oBACRH,UAAW,SACXgC,uBAAwB,OACxBC,wBAAyB,OACzB1C,QAAS,uBAEX2C,aAAc,CACZnI,MAAO,UACPoI,OAAQ,EACR9C,QAAS,QAEX+C,qBAAsB,CACpBtI,SAAU,YAEZuI,mBAAoB,CAClBC,MAAO,QACPxI,SAAU,QAEZyI,gBAAiB,CACfvC,UAAW,UAEbwC,kBAAmB,CACjBC,aAAc,QAEhBC,kBAAmB,CACjBrD,QAAS,OACTqC,eAAgB,gBAChBpC,WAAY,UAEdiB,MAAO,CACLC,SAAU,WAEZmC,mBAAoB,CAClBtD,QAAS,OACTqC,eAAgB,iBAElBtB,UAAW,CACTf,QAAS,OACTC,WAAY,UAEdsD,UAAW,CACT9I,SAAU,YAEZ+I,UAAW,CACTzH,MAAO,GACPoE,aAAc,MACdsD,YAAa,GAEfC,SAAU,CACR1D,QAAS,cACTqC,eAAgB,SAChBpC,WAAY,UAEd0D,eAAgB,CACd5H,MAAO,GACPoE,aAAc,MACd2C,OAAQ,SAEVc,iBAAkB,CAChBnJ,SAAU,IAEZoJ,aAAc,CACZ3D,QAAS,OACTiB,SAAU,QACVzG,MAAO,4BACPoG,OAAQ,oBACRgD,gBAAiB,OACjB3D,aAAc,QAEhB4D,KAAM,CACJ7D,QAAS,YAEX0B,KAAM,CACJoC,WAAY,QAEdC,SAAU,CACRvJ,MAAO,a,yyMC9DX,IAAQwJ,GAAc9G,IAChB9E,GAAYC,YAAWC,GAEd,SAAS2L,GAAT,GAYX,IAXFxL,EAWC,EAXDA,QACAgF,EAUC,EAVDA,aACAyG,EASC,EATDA,UACAC,EAQC,EARDA,cACAC,EAOC,EAPDA,YACAC,EAMC,EANDA,iBACAC,EAKC,EALDA,wBACAC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,kBACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,kBAEM7L,EAAUT,KACVuM,EAAWC,cACjB,EAAgC9L,mBAAS,IAAzC,mBAAO+L,EAAP,KAAiBC,EAAjB,KACA,EAAkChM,oBAAS,GAA3C,mBAAOiM,EAAP,KAAkBC,EAAlB,KACMC,EAAeC,mBAMrB,SAASC,IACP,IAAM1L,EAAU8K,EACVa,EAAWZ,EACX7H,EAAQkI,EACd,GAAc,KAAVlI,GAA0B,MAAVA,GAA2B,MAAVA,IAAiByB,IAAQzB,EAAM0I,QAAQ,KAAM,KAAlF,CAEA,GAAIC,MAAMC,OAAO5I,IAAS,OAAO,EACjC,IAAM6I,EAAYC,IAAG9I,GACf+I,EAAgBF,EAAUG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIT,GAAUU,YAE9E,OAAIJ,EAAcK,IAAI,MAG8B,IADxBP,EAAUG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIT,GAAUU,YAC5DnL,UAAUqL,QAAQ,OAEtCvM,EAAQwM,GAAGjC,GAAU4B,KAAKF,EAAc/K,cAK9C,IAaMuL,EAAO,uCAAG,uGACdC,aAAalB,EAAamB,SACVjB,IAFF,yCAILR,EACL0B,YAAW,CACTC,MAAM,EACN5N,KAAM,UACN6N,QAAS,qCARD,UAYdvB,GAAa,GACPwB,EAASxC,GAAU4B,KAAKH,IAAGZ,GAAUc,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YAAYnL,WAC9GZ,QAAQC,IAAI,cAAeoK,EAAaoC,GAClCC,EAAShJ,EAAa4B,YACtBqH,EAAgB,IAAIxJ,IAAgBiH,EAAeD,EAAWzG,GAC9DkJ,EAAiBD,EAActH,QAAQqH,GACzCG,GAAY,EAEVC,EAAY,IAEdC,IAASC,MAAwC,IAApBA,IAtBnB,kCAuBMJ,EAAeK,YAAYC,KAAK7C,EAAaoC,EAAQ,EAAG,CAAEZ,KAAMnN,EAASkE,MAAO6J,IAvBtF,QAuBNU,EAvBM,OAwBNC,EAAWC,KAAKC,KAAKH,EAAMH,KAE3BO,EAAcH,EAAWI,IAAgBJ,EAAWI,IAC1DV,EAAUM,SAAWG,EA3BT,yBA6BRX,EACHM,KAAK7C,EAAaoC,EAAQ,EADvB,2BAECK,GAFD,IAGFjB,KAAMnN,EACNkE,MAAO6J,KAERnI,MAAK,SAAAkB,GAAE,OAAIA,EAAGC,UACdnB,MAAK,WACJuI,GAAY,KAEbY,OAAM,SAAAC,GACL,IAAMC,EAAWC,YAAgBF,GAC7BtN,EAAM,GACNyN,YAAKF,GACPvN,EAAM,oDACG0N,YAAKH,GACdvN,EAAM,yDACG2N,YAAKJ,GACdvN,EAAM,qDACG4N,YAAeL,GACxBvN,EAAM,oDACG6N,YAAmBN,KAC5BvN,EAAG,8CAA0CQ,YAAQ2J,EAAyB2D,IAAO,GAAlF,SAED9N,GACFwK,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,QACN6N,QAASpM,KAIf6K,GAAa,MA9DH,QAiEV4B,GACF9B,EAAY,IAGdG,EAAamB,QAAU8B,YAAW,WAChClD,GAAa,GACT4B,GACFjC,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,UACN6N,QAAS,gBAId,KAhFW,4CAAH,qDAmFP4B,EAAehK,sBACnBiK,IAAQ,sBAAC,yFACSjD,IADT,wDAKDuB,EAAgB,IAAIxJ,IAAgBiH,EAAeD,EAAWzG,GAC9D+I,EAASxC,GAAU4B,KAAKH,IAAGZ,GAAUc,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YAAYnL,WANvG,SAOD+L,EAAcyB,aAAa/D,EAAaoC,GAAQgB,OAAM,SAAAC,GAC1D,IAAMC,EAAWC,YAAgBF,GAC7BtN,EAAM,GAqBV,OApBIyN,YAAKF,GACPvN,EAAM,oDACG0N,YAAKH,GACdvN,EAAM,yDACG2N,YAAKJ,GACdvN,EAAM,qDACG4N,YAAeL,GACxBvN,EAAM,oDACG6N,YAAmBN,KAC5BvN,EAAG,8CAA0CQ,YAAQ2J,EAAyB2D,IAAO,GAAlF,SAED9N,GACFwK,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,QACN6N,QAASpM,KAIR6J,GAAU4B,KAAK,MA9BjB,2CAgCN,OAGLvM,qBAAU,WAER,OADA8O,IACO,kBAAMA,EAAaE,YAEzB,CAACxD,IAEJxL,qBAAU,WACR,IAAMiP,EAAqBtE,GAAU4B,KAAK,IAAIC,IAAIrB,GAC9CpG,IAAQX,IAAiBW,IAAQ+F,IAAkB/F,IAAQ8F,IAAcK,EAAiB0B,GAAGqC,KAchG,CAAC7K,EAAc0G,EAAeI,EAAkBL,IAEnD,IAAMqE,GAAWnK,IAAQX,GACnB+K,EAAUrD,IAEhB,OACE,oCACE,kBAAC3D,EAAA,EAAD,CAAe3I,QAAS,CAAEgL,KAAMhL,EAAQwJ,mBACtC,uBAAG5G,UAAW5C,EAAQ8J,cAAtB,QACA,kBAAChB,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIK,UAAW5C,EAAQoK,mBAC3D,kBAACzB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQsK,mBACtB,yBAAK1H,UAAW5C,EAAQgI,WACtB,yBAAKpF,UAAW5C,EAAQyK,UAAW1B,IAAI,GAAGC,IAAG,mBAAc6C,EAAd,UAC7C,0BAAMjJ,UAAW5C,EAAQwK,WAAYoB,IAEvC,kBAACgE,EAAA,EAAD,CACE5P,QAAS,CAAEgL,KAAMhL,EAAQmI,OACzBrE,MAAOkI,EACP6D,SA9KU,SAAAC,GACxB7D,EAAY6D,EAAMC,OAAOjM,QA8KXkM,YAAY,iBACZC,iBAAe,EACfC,WA7KO,WACrB,IAAMC,EAAWzE,EACjBO,EACEmE,YAAcD,EAASE,GAAG,GAAKF,EAAW,EAAGxE,EAAmB,CAC9D2E,SAAS,MA0KC1B,OAAQ2B,IAAYZ,KAAaA,MAIvC,kBAAC7G,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,uBACEK,UAAW5C,EAAQ8J,aACnBzI,MAAO+O,YAAc1E,EAAkBC,EAAmB,CACxD2E,SAAS,KAHb,mBAOE,kBAAC,IAAD,CAAS/P,QAASiL,GAAmB4E,YAAc1E,EAAkBC,SAM/E,kBAAChD,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQmK,iBACtB,kBAAClB,EAAA,EAAD,CAAQuH,UAAWd,GAAYA,IAAYC,EAAUhO,MAAM,YAAYwH,QAASkE,EAAS5L,MAAO,CAAEuB,MAAO,SAAzG,cAMN,kBAACyN,EAAA,EAAD,CAAO7N,UAAW5C,EAAQqJ,MAAOoE,KAAMvB,EAAWwE,kBAAgB,qBAAqBC,mBAAiB,4BACtG,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGjO,UAAW5C,EAAQ8K,cACtC,yBAAKlI,UAAW5C,EAAQuJ,WACtB,kBAACuH,EAAA,EAAD,CAAkBnP,MAAM,YACxB,gD,wOClHGoF,GA5KS,iBAAO,CAC7BqC,cACA2H,UAAW,CACThG,gBAAiB,sBAEnBiG,IAAK,CACHhO,MAAO,QAETiO,WAAY,CACVtP,MAAO,QAETuP,cAAe,CACbvP,MAAO,WAET0H,MAAO,CACLpC,QAAS,OACTC,WAAY,SACZoC,eAAgB,UAElBC,UAAW,CACT9B,UAAW,UAEb0J,SAAU,CACRnO,MAAO,QACPoO,QAAS,GAEXC,kBAAmB,CACjBlK,QAAS,oBACTY,OAAQ,oBACR0B,oBAAqB,OACrBC,qBAAsB,QAExB4H,gBAAiB,CACfnK,QAAS,oBACTY,OAAQ,oBACRH,UAAW,SACXgC,uBAAwB,OACxBC,wBAAyB,QAE3BC,aAAc,CACZ7G,OAAQ,UACRtB,MAAO,UACPoI,OAAQ,EACR9C,QAAS,OACTW,UAAW,SACXV,WAAY,UAEdiB,MAAO,CACLC,SAAU,WAEZ+B,gBAAiB,CACfvC,UAAW,UAEb0C,kBAAmB,CACjBrD,QAAS,OACTqC,eAAgB,gBAChBpC,WAAY,UAEdc,UAAW,CACTf,QAAS,OACTC,WAAY,UAEdsD,UAAW,CACT9I,SAAU,YAEZ6P,iBAAkB,CAChBlH,aAAc,GAEhBmH,WAAY,CACV7P,MAAO,UACP8F,UAAW,QACXgK,WAAY,OACZtK,QAAS,SACTuD,YAAa,QAEfgH,aAAc,CACZ/P,MAAO,OACPD,SAAU,GACViQ,cAAe,YACfF,WAAY,IACZhK,UAAW,SACXzE,MAAO,QAET4O,YAAa,CACX3O,OAAQ,GACRwO,WAAY,OACZpH,aAAc,GACd,gBAAiB,CACfzC,UAAW,KAGfiK,iBAAkB,CAChBC,SAAU,WACVC,SAAU,IACVrH,YAAa,GACbjD,UAAW,SAEbuK,WAAY,CACVF,SAAU,WACV7K,QAAS,gBAEXgL,gBAAiB,CACfjP,MAAO,SAETkP,UAAW,CACTJ,SAAU,WACVK,YAAa,IAEf5Q,QAAS,CACPG,SAAU,QAEZmJ,iBAAkB,CAChBiH,SAAU,WACVM,KAAM,QACNC,IAAK,MACL1Q,MAAO,OACPD,SAAU,GACV4Q,UAAW,sBAEbC,aAAc,CACZtL,QAAS,OACTC,WAAY,UAEdsL,cAAe,CACbxP,MAAO,GACPF,WAAY,IAEd2P,sBAAuB,CACrBtL,QAAS,OACTiB,SAAU,QACVzG,MAAO,4BACPoG,OAAQ,oBACRgD,gBAAiB,OACjB3D,aAAc,OACdpE,MAAO,QAETgH,qBAAsB,CACpBtI,SAAU,YAEZuI,mBAAoB,CAClBC,MAAO,QACPxI,SAAU,QAEZgR,aAAc,CACZjL,UAAW,SACXtE,UAAW,QACXxB,MAAO,UACPsJ,WAAY,QAEd0H,QAAS,CACPb,SAAU,WACVc,MAAO,OACPP,IAAK,OACL/K,OAAQ,WAEVuL,QAAS,CACP7P,MAAO,QACPqE,WAAY,UACZU,OAAQ,qBACRX,aAAc,UACdD,QAAS,QAEX2L,aAAc,CACZnR,MAAO,UACPoI,OAAQ,EACR5C,QAAS,YAEX6D,KAAM,CACJ7D,QAAS,c,2yMC3Hb,IAAQgE,GAAc9G,IAChB9E,GAAYC,YAAWC,IAEvBsT,GAAQ,CAAC,CAAE1R,MAAO,qBAAuB,CAAEA,MAAO,iBAAmB,CAAEA,MAAO,aAErE,SAAS2R,GAAT,GAUX,IATFpT,EASC,EATDA,QACAgF,EAQC,EARDA,aACA0G,EAOC,EAPDA,cACAD,EAMC,EANDA,UACAG,EAKC,EALDA,iBACAyH,EAIC,EAJDA,cACAC,EAGC,EAHDA,WACAvH,EAEC,EAFDA,kBACAC,EACC,EADDA,gBAEM5L,EAAUT,KACVuM,EAAWC,cACjB,EAA8B9L,mBAAS,IAAvC,mBAAOkT,EAAP,KAAgBC,EAAhB,KAGA,EAA0DnT,mBAAS,IAAnE,mBAAOoT,EAAP,KAA8BC,EAA9B,KACA,EAAoCrT,oBAAS,GAA7C,mBAAOsT,EAAP,KAAmBC,EAAnB,KACA,EAAkDvT,oBAAS,GAA3D,mBAAOwT,EAAP,KAA0BC,EAA1B,KACA,EAAsCzT,mBAAS,GAA/C,mBAAO0T,GAAP,KAAoBC,GAApB,KACA,GAA0C3T,mBAAS,IAAnD,qBAAO4T,GAAP,MAAsBC,GAAtB,MAEA,GAA0C7T,mBAASmP,KAAnD,qBAAO2E,GAAP,MAAsBC,GAAtB,MAIMC,GAFe9I,GAAU4B,KAAK,GAEKmH,WAAa,IAEhDC,GAAmB7O,sBACvBiK,IAAQ,uBAAC,oHACPiE,GAAc,GACR3F,EAAgB,IAAIxJ,IAAgBiH,EAAeD,EAAWzG,GAC9D+H,EAAYxB,GAAU4B,KAAKH,IAAGuG,GAASrG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YAAYnL,WAC1GsS,EAAWzH,EAAU0H,IAAIN,IAAeO,IAAIlF,IAAMtN,WAClDyS,EAAoBpJ,GAAU4B,KAAK,IAAQyH,SAAS,KAAOC,WApBhD,OAoB2ER,MACzFI,IAAID,GACJE,IAAInJ,GAAU4B,KAAK,MAChBa,EAAShJ,EAAa4B,YACtBkO,EAA0B7G,EAActH,QAAQqH,GAT/C,mBAY2B8G,EAAwBC,WAAWC,KAAKjI,EAAW4H,GAZ9E,2CAYEjQ,EAZF,KAYUuQ,EAZV,KAaL3T,QAAQC,IAAI,4BAA6BmD,EAAQuQ,GAb5C,KAc2BC,KAd3B,UAeGjP,QAAQC,IACZtD,KAAI8B,EAAD,wCAAS,WAAOzD,EAAO6B,GAAd,6EACJiL,EAASoH,KAAIF,EAASnS,EAAOyI,GAAU4B,KAAK,KACvCsD,GAAG,GAFJ,yCAGD,CACL2E,aAAcnU,EACd0L,SAAUZ,EACVkJ,QAASlH,IANH,2CAAT,0DAhBF,oBAcDsH,GAdC,cA6BL3B,EAAyB2B,GA7BpB,kDA+BL/T,QAAQC,IAAI,0BAAZ,MACAD,QAAQC,IAAI,4BAAZ,MACM0N,EAAWC,YAAgB,EAAD,IAC5BxN,EAAM,GAERA,EADEyN,YAAKF,GACD,oDACGG,YAAKH,GACR,yDACGI,YAAKJ,GACR,qDACGqG,YAAUrG,GACb,oDACGsG,YAAWtG,GACd,6DACGuG,YAAevG,GAClB,8CAEAA,EAER/C,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,QACN6N,QAASpM,KAGbgS,OAAyB+B,GAzDpB,yBA2DLhG,YAAW,WACTmE,GAAc,KACb,KA7DE,6EA+DN,OAGC8B,GAAU,wCAAG,+EACjBpU,QAAQC,IAAI,cADK,2CAAH,qDAIVoU,GAAQ,wCAAG,8JACXC,EAAoBC,KAAKC,MAC3BC,EAAsB,EACtBC,EAAsB,EACtBC,EAAoB,EACpBC,EAAoB,EACpBC,EAAiB,EACjBC,EAA2B,EAC7BtC,GAAqB,GACrBxS,QAAQC,IAAI,sCACP8U,KAVU,yCAWNnC,GAAiB,CACtBjU,KAAM,UACN6N,QAAS,qCAbE,UAiBVwI,KAjBU,yCAkBNpC,GAAiB,CACtBjU,KAAM,UACN6N,QAAS,uCApBE,UAwBVyI,KAxBU,yCAyBNrC,GAAiB,CACtBjU,KAAM,UACN6N,QAAS,8CA3BE,UA8BfiI,EAAsBF,KAAKC,MAC3B9B,GAAe,GACT/F,EAAgB,IAAIxJ,IAAgBiH,EAAeD,EAAWzG,GAC9DgJ,EAAShJ,EAAa4B,YACtBmG,EAAYxB,GAAU4B,KAAKH,IAAGuG,GAASrG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YAAYnL,WAC1GsS,EAAWzH,EAAU0H,IAAIN,IAAeO,IAAIlF,IAAMtN,WAClDyS,EAAoBpJ,GAAU4B,KAAK,IAAQyH,SAAS,KAAOC,WAzH9C,OAyHyER,MACzFI,IAAID,GACJE,IAAInJ,GAAU4B,KAAK,MAtCP,UAwCP2H,EAA0B7G,EAActH,QAAQqH,GAEtDiI,EAAoBJ,KAAKC,MACzB9B,GAAe,IAGX3F,IAASC,MAAwC,IAApBA,IA9CpB,kCA+COwG,EAAwBvG,YAAYyG,KAAKjI,EAAW4H,GA/C3D,eA+CLlG,EA/CK,OAgDXuF,GAAe,GACfkC,EAAoBL,KAAKC,MACnBpH,EAAWC,KAAKC,KAAKH,EAAMH,KAE3BO,EAAcH,EAAWI,IAAgBJ,EAAWI,IApD/C,UAqDAgG,EAAwBE,KAAKjI,EAAW4H,EAAmB,CACpEjG,SAAUG,IAtDD,QAqDX/H,EArDW,gDAyDAgO,EAAwBE,KAAKjI,EAAW4H,GAzDxC,QAyDX7N,EAzDW,sBA2DbqP,EAAiBN,KAAKC,MA3DT,UA6DYhP,EAAGC,OA7Df,iBA6DLyP,EA7DK,EA6DLA,OACJC,EAAO,GACF5T,EAAI2T,EAAO3S,OAAS,EA/DhB,aA+DmBhB,GAAK,GA/DxB,oBAgEa,SAApB2T,EAAO3T,GAAGqN,MAhEH,wBAiETuG,EAAOD,EAAO3T,GAAG4T,KAjER,6BA+D2B5T,IA/D3B,wBAqEb6S,GAAU,WAAV,eAAce,IAEdL,EAA2BP,KAAKC,MAChC9B,GAAe,GACfR,EAAW,IACXtH,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,UACN6N,QAAS,cA9EA,mDAkFbxM,QAAQC,IAAI,4BAAZ,MACM0N,EAAWC,YAAgB,EAAD,IAC5BxN,EAAM,GAERA,EADEyN,YAAKF,GACD,oDACGG,YAAKH,GACR,yDACGI,YAAKJ,GACR,qDACGqG,YAAUrG,GACb,oDACGsG,YAAWtG,GACd,6DACGuG,YAAevG,GAClB,8CAEAA,EAER/C,EACE0B,YAAW,CACTC,MAAM,EACN5N,KAAM,QACN6N,QAASpM,KAxGA,QA4Gf+N,YAAW,WACTqE,GAAqB,GACrBI,GAAiB,IACjBF,GAAe,KACd,KAIG0C,GAAiB,KADjBC,EAAOZ,EAAsBH,IAD7BgB,EAAYR,EAA2BR,IAEG1T,QAAQ,GAElD2U,GAAgB,KADhBC,EAA8B,IAAxBd,EAA4B,EAAIA,EAAsBD,GAC/Ba,GAAW1U,QAAQ,GAEhD6U,GAAmB,KADnBC,EAAiC,IAAxBhB,EAA4BC,EAAoBF,EAAsBE,EAAoBD,GAChEY,GAAW1U,QAAQ,GAEtD+U,GAAe,KADfC,EAA2B,IAAtBhB,EAA0B,EAAIA,EAAoBD,GAC5BW,GAAW1U,QAAQ,GAE9CiV,GAAe,KADfC,EAA2B,IAAtBlB,EAA0BC,EAAiBF,EAAoBE,EAAiBD,GAC1DU,GAAW1U,QAAQ,GAE9CmV,GAAgB,KADhBC,EAAMlB,EAA2BD,GACJS,GAAW1U,QAAQ,GACtDZ,QAAQiW,MAAM,CACZC,MAAM,GAAD,OAAKb,EAAL,YAAaD,EAAb,MACLe,YAAY,GAAD,OAAKX,EAAL,YAAYD,EAAZ,MACXa,YAAY,GAAD,OAAKV,EAAL,YAAeD,EAAf,MACXxI,YAAY,GAAD,OAAK2I,EAAL,YAAWD,EAAX,MACXtB,SAAS,GAAD,OAAKyB,EAAL,YAAWD,EAAX,MACRQ,YAAY,GAAD,OAAKL,EAAL,YAAYD,EAAZ,QArIE,2DAAH,qDAyId,SAASO,GAASC,GAChB,IAAMC,EAAMD,GACAC,EAAIC,WAAaD,EAAIC,WAAaD,EAAI3H,QAC9C/G,IAAM,eAOZ,IAAMiN,GAAiB,WACrB,GAAgB,KAAZ9C,GAA8B,MAAZA,IAAmB5N,IAAQ4N,EAAQ3G,QAAQ,KAAM,KAAvE,CAEA,GAAIC,MAAMC,OAAOyG,IAAW,OAAO,EACnC,IAAMxG,EAAYC,IAAGuG,GACfyE,EAAcjL,EAAUG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YAErF,OAAI2K,EAAY1K,IAAI,MAG8B,IADxBP,EAAUG,aAAa3B,GAAU4B,KAAK,IAAIC,IAAIrB,GAAmBsB,YACrEnL,UAAUqL,QAAQ,OAEpC+F,EAAW9F,GAAGjC,GAAU4B,KAAK6K,EAAY9V,eAQzCoU,GAAmB,WACvB,IAA2B3Q,IA7PR,MA6P6BiH,QAAQ,KAAM,KAC9D,OAAIC,MA9Pe,QAmQf0J,GAAiB,WACrB,IAAsB5Q,IAnQR,MAmQwBiH,QAAQ,KAAM,KACpD,OAAIC,MApQU,QAyQhBjM,qBAAU,WASR,OANI0V,MAAsBD,MACxB9B,KAEE5O,IAAQ4N,IACVG,EAAyB,IAEpB,WAEL,OADAA,EAAyB,IAClBa,GAAiB3E,YAGzB,CAAC2D,EAxRiB,QA0RrB,IAQM0E,GAAc,wCAAG,yGACU5E,IADV,mCACd6E,EADc,KAErB1E,EAAWhD,YAAc0H,EAAgBnM,EAAmB,CAAE2E,SAAS,KAFlD,2CAAH,qDA6DdyH,GAAqB9B,KAErBvG,IAAWnK,IAAQX,GAmBzB,OAPApE,qBAAU,WACR,KAAI+E,IAAQ3F,IAAY2F,IAAQ+F,IAAkB/F,IAAQ8F,IAA1D,CACA,IAAM2M,EAAQC,YAZS,SAAnBC,IAOJ,OANsB,IAAI7T,IAAgBiH,EAAeD,EAAWzG,GACtDsT,mBAAmB1S,MAAK,SAAA2S,GACpC9I,YAAW,WACT2E,GAAiBmE,KAChB,QAEED,EAKmBA,GAAoB,KAC9C,OAAO,kBAAME,cAAcJ,OAE1B,CAACpY,IAGF,oCACE,kBAAC+I,EAAA,EAAD,CAAe/F,UAAW5C,EAAQqR,mBAChC,kBAACvI,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,uBAAGK,UAAW5C,EAAQ8J,cAAtB,SAEF,kBAAChB,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQsK,mBACtB,yBAAK1H,UAAW5C,EAAQgI,WACtB,0BAAMpF,UAAW5C,EAAQwK,WAAYoB,EAArC,WAEF,kBAACgE,EAAA,EAAD,CACE5P,QAAS,CAAEgL,KAAMhL,EAAQmI,OACzBrE,MAAOqP,EACPnD,YAAY,kBACZC,iBAAe,EACfC,WAAY,kBAAM2H,MAClBhI,SA3Ge,SAAAC,GACzB,IACEsD,EAAWtD,EAAMC,OAAOjM,OACxB,MAAO8K,GACPwE,EAAW,MAwGHxE,OAAQ2B,IAAYwH,MAAwBA,IAAkC,MAAZ5E,MAIxE,kBAACrK,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,uBAAGK,UAAW5C,EAAQ8J,aAAczI,MAAO+O,YAAc8C,EAAYvH,EAAmB,CAAE2E,SAAS,KAAnG,eAEE,kBAAC,IAAD,CAAS/P,QAASiL,GAAmB4E,YAAc8C,EAAYvH,OAIrE,kBAAChD,EAAA,EAAD,CAAe/F,UAAW5C,EAAQsR,iBAChC,kBAACxI,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,uBAAGK,UAAW5C,EAAQ8J,cAAtB,OAEF,kBAAChB,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQqY,kBACtB,uBAAGzV,UAAW5C,EAAQgK,sBAAuB4B,KAGjD,kBAAC9C,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAlHtCgR,EAEA,kBAACzK,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQ0S,cACtB,kBAAC5B,EAAA,EAAD,CAAkBpP,SAAS,QAAQC,MAAM,cAK7C4O,IAAY8C,GAEZ,kBAACvK,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQ0S,cACtB,kBAAC,KAAD,CAAkBhR,SAAS,UAC3B,0EAKJ6D,IAAQ8N,IAA0B9N,IAAQ4N,GAE1C,kBAACrK,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQ0S,cACtB,uBAAGjR,MAAO,CAAEC,SAAU,GAAI+F,UAAW,UAArC,UAKDjF,KAAI6Q,GAAuB,SAAAxK,GAChC,OACE,kBAACC,EAAA,EAAD,CAAUnG,IAAKkG,EAAKmM,aAAc5S,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3D,kBAAC0G,EAAA,EAAD,CACE5H,MAAOS,YAAQ+G,EAAKgM,QAAS1J,GAAU4B,KAAK,IAAIC,IAAInE,EAAK0D,WACzD5K,MAAM,cACNoO,OAAO,SACPtO,MAAO,CAAEC,SAAU,GAAI4W,cAAe,IACtCnP,QAAS,kBAAMoP,aAAS1P,EAAKmM,gBAE7B,kBAAC,KAAD,CAAStT,SAAS,QAAQD,MAAO,CAAEqQ,SAAU,WAAYO,IAAK,GAAID,KAAM,MACxE,yBACE/Q,MAAM,8BACNuB,UAAW5C,EAAQgR,IACnBvP,MAAO,CAAE2F,aAAc,OACvB2B,IAAI,GACJC,IAAG,mBAAcH,EAAKmM,aAAnB,QACHwD,QAAShB,KAdb,gBAiBG1V,YAAQ+G,EAAKgM,QAAS1J,GAAU4B,KAAK,IAAIC,IAAInE,EAAK0D,UAAW,UAsEpE,kBAAC5D,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAU1G,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpC,yBAAKK,UAAW5C,EAAQmK,iBACtB,kBAAClB,EAAA,EAAD,CACEuH,UAAWd,IAAYA,KAAYa,IAAYwH,MAAwBA,IACvEpW,MAAM,YACNwH,QAASoM,GACT9T,MAAO,CAAEuB,MAAO,OAAQmE,QAAS,cAJnC,WAOE,kBAACsR,GAAA,EAAD,CACEzY,QAAS,CACPuB,QAASvB,EAAQuB,SAEnBC,UAAU,MACVH,MAAK,UAAK4S,GAAL,uCAEL,kBAAC,KAAD,CAAUxS,MAAO,CAAEqB,WAAY,iBAMzC,kBAAC2N,EAAA,EAAD,CAAO7N,UAAW5C,EAAQqJ,MAAOoE,KAAMgG,EAAmB/C,kBAAgB,qBAAqBC,mBAAiB,4BAC9G,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGjO,UAAW5C,EAAQyS,uBACtC,yBAAK7P,UAAW5C,EAAQuJ,WACrBhE,IAAQsO,KAAkB,kBAAC/C,EAAA,EAAD,CAAkBnP,MAAM,YAClD4D,IAAQsO,IAAiB,gDAA2B,+CACrD,kBAAC,KAAD,CACE7T,QAAS,CACPgL,KAAMhL,EAAQgL,MAEhB0N,kBAAgB,EAChBC,WAAYhF,GACZiF,UAAW,kBAAC,KAAD,OAEVpW,KAAIuQ,IAAO,SAACtQ,EAAGC,GACd,OACE,kBAACmW,GAAA,EAAD,CAAMlW,IAAKD,GACT,kBAAC,KAAD,CAAcoW,kBAAmBC,MAActW,EAAEpB,aAKvDkE,IAAQsO,KACR,uBACEpS,MAAO,CACLE,MAA8B,UAAvBkS,GAAchU,KAAmB,MAAQ,WAGlD,kBAAC,KAAD,CAAa4B,MAAO,CAAEuX,cAAe,YALvC,eAMqBnF,GAAcnG,SAGrC,kBAACzE,EAAA,EAAD,CACEtH,MAAM,SACNwH,QAAS,WACPuK,GAAqB,GACrBI,GAAiB,IACjBF,GAAe,KALnB,c,6EC7gBJxP,GAAwBC,IAAd8G,GAAc9G,IA0EjB4U,GAxEQ,SAAC3N,EAAeD,EAAWzG,GAChD,MAA0B3E,qBAA1B,mBAAO2O,EAAP,KAAcsK,EAAd,KACA,EAA8BjZ,oBAAS,GAAvC,mBAAOM,EAAP,KAAgB4Y,EAAhB,KACA,EAAoClZ,mBAASkL,GAAU4B,KAAK,IAA5D,mBAAOmG,EAAP,KAAmBkG,EAAnB,KACA,EAA8DnZ,mBAASkL,GAAU4B,KAAK,IAAtF,mBAAOsM,EAAP,KAAgCC,EAAhC,KACA,EAA8DrZ,mBAASkL,GAAU4B,KAAK,IAAtF,mBAAOtB,EAAP,KAAgC8N,EAAhC,KAEM3Z,EAAUwF,aAAeR,GAEzBwS,EAAQ,WACZ,OAAI7R,IAAQ+F,GAAuB,IAAIkO,MAAM,0BACzCjU,IAAQ8F,GAAmB,IAAImO,MAAM,sBACrCjU,IAAQX,GAAsB,IAAI4U,MAAM,8BAA5C,GAOIC,EAAgB,WACpB,IAAM7K,EAAQwI,IACd,GAAIxI,EAAO,OAAOsK,EAAStK,GAC3BuK,GAAW,GACX,IACMxT,EAAe,CADC,IAAItB,IAAgBiH,EAAeD,EAAWzG,GAEpD8U,8BAA8B/K,OAAM,kBAAMxD,GAAU4B,KAAK,OAGzE,OAAOlH,QAAQC,IAAIH,GAChBH,MAAK,YAA4C,IAAD,mBAAzC0N,EAAyC,KAA7BzH,EAA6B,KAG/C,OAFA2N,EAAclG,GACdqG,EAA2B9N,GACpB,CACLyH,iBAGHvE,MAAMuK,GACNtS,SAAQ,kBAAMuS,GAAW,OAwB9B,OAXA3Y,qBAAU,WAER,GADc4W,IAIZ,OAFA+B,GAAW,QACXD,IAGFO,MAEC,CAAC7Z,EAAS0L,EAAeD,EAAWzG,IAEhC,CACLrE,UACAqO,QACAsE,aACAzH,0BACAkO,6BA1BmC,WACnC,IAAM9L,EAAgB,IAAIzJ,GAASkH,EAAeD,EAAWzG,GAC7DuU,GAAW,GACXtL,EACGwL,0BACA1K,MAAMuK,GACN1T,KAAK8T,GACL1S,SAAQ,kBAAMuS,GAAW,OAoB5BM,gBACAJ,4B,mBCuLWtS,GAnQS,SAAA6S,GAAK,YAAK,CAChCxQ,UAAU,aACRyQ,OAAQ,KACRlY,MAAO,UACPiG,UAAW,GACXyC,aAAc,KACXjB,KAEL0Q,QAAM,GACJxQ,eAAgB,SAChBnC,QAAS,iBACT4D,gBAAiB,aAHb,eAIH6O,EAAMG,YAAYC,KAAK,MAAQ,CAC9B7S,QAAS,mBALP,wBAOI,GAPJ,GASN8S,QAAS,CACP9S,QAAS,YACTC,aAAc,UACdC,WAAY,gGAEd6S,cAAe,CACb/S,QAAS,YACTC,aAAc,UACdC,WAAY,gGAEd8S,QAAS,CACPhT,QAAS,OACTY,OAAQ,oBACR0B,oBAAqB,UACrBC,qBAAsB,WAExB9I,QAAS,CACPgH,UAAW,SACXyC,aAAc,OACdlD,QAAS,OACTY,OAAQ,oBACR6B,uBAAwB,UACxBC,wBAAyB,WAE3BuQ,OAAO,aACLzY,MAAO,UACPmB,WAAY,QACTuX,MAELC,OAAQ,GACRzR,KAAM,CACJlH,MAAO,OACP0I,aAAc,GACd,0BAA2B,CACzB0H,SAAU,SAGdwI,WAAY,CACVvX,MAAO,SAETwX,YAAa,CACX1I,SAAU,WACV7K,QAAS,OACTC,WAAY,SACZoC,eAAgB,aAChBS,OAAQ,gBACRtC,UAAW,OACXN,QAAS,sBACTE,WAAY,UACZ1F,MAAO,OACPyF,aAAc,WAEhBqT,MAAO,CACL9Y,MAAO,WAET+Y,iBAAkB,CAChBzT,QAAS,OACTC,WAAY,SACZoC,eAAgB,aAChBrG,OAAQ,GACRwO,WAAY,OACZ/P,SAAU,GACViZ,WAAY,OACZhZ,MAAO,OACP0I,aAAc,GAEhBuQ,iBAAkB,CAChBjZ,MAAO,UACPD,SAAU,IAEZsG,UAAW,CACTf,QAAS,OACT6K,SAAU,WACVc,MAAO,GACPP,IAAK,GAEPwI,aAAc,CACZvT,OAAQ,UACRxE,WAAY,OACZmE,QAAS,QAEX6T,UAAW,CACT9X,MAAO,GACPC,OAAQ,OACRqE,OAAQ,UACRF,aAAc,MACd2D,gBAAiB,QAEnBgQ,OAAQ,CACN9T,QAAS,QAEX+T,MAAO,CACLrZ,MAAO,UACP8F,UAAW,QAEbpG,MAAO,CACLK,SAAU,SACViZ,WAAY,MACZ1T,QAAS,eACT6K,SAAU,YAEZmJ,SAAU,CACRvZ,SAAU,WACVsB,MAAO,OACP+G,OAAQ,YAEVmR,KAAM,CACJpJ,SAAU,WACV/G,gBAAiB,eAEnBoQ,WAAY,CACVpR,OAAQ,SACRnC,UAAW,IAEbwT,KAAM,CACJC,eAAgB,QAElBC,WAAY,CACV7T,UAAW,UAEbsJ,UAAW,CACThG,gBAAiB,sBAEnBiG,IAAK,CACHhO,MAAO,QAETuY,eAAgB,CACdvY,MAAO,MACPC,OAAQ,MACRkE,QAAS,MACTY,OAAQ,iBACRX,aAAc,OAEhBoU,aAAc,CACZxY,MAAO,OACPC,OAAQ,OACR8E,OAAQ,iBACRX,aAAc,OAEhBqU,UAAW,CACTtU,QAAS,OACT,UAAW,CACT4D,gBAAiB,UAGrB2Q,MAAO,CACL/Z,MAAO,mBAETga,WAAY,CACVxU,QAAS,YACTC,aAAc,EACd2D,gBAAiB,yBACjB6Q,SAAU,WAEZzE,MAAO,CACLpM,gBAAiB,UACjBhD,OAAQ,gCAEV8T,UAAW,CACTla,MAAO,OACPD,SAAU,OACViQ,cAAe,aAEjBV,WAAY,CACVtP,MAAO,QAETuP,cAAe,CACbvP,MAAO,WAET0H,MAAO,CACLpC,QAAS,OACTC,WAAY,SACZoC,eAAgB,SAChB,mBAAoB,CAClByI,SAAU,IACV5O,UAAW,IACXgE,QAAS,YACTzF,SAAU,GACVqG,OAAQ,EACRpG,MAAO,OACPma,UAAW,oCACX1U,aAAc,OACdC,WAAY,UACZ+J,QAAS,EACTpO,MAAO,UAGXuG,UAAW,CACT9B,UAAW,UAEbsU,cAAe,CACb5U,QAAS,IAEX6U,SAAU,CACRra,MAAO,QAETsa,SAAU,CACR9U,QAAS,UAEX+U,cAAe,CACbnR,gBAAiB,cACjB9D,QAAS,OACTqC,eAAgB,SAChB,WAAY,CACVlB,SAAU,IACVpF,MAAO,OACP+H,gBAAiB,SAGrBoR,aAAc,CACZxa,MAAO,QAETya,QAAS,CACPpZ,MAAO,MACPtB,SAAU,OACV0G,SAAU,QAEZiU,cAAe,CACbtS,OAAQ,cAEVuS,OAAQ,CACNxK,SAAU,WACVO,IAAK,OACLD,KAAM,oBACNrH,gBAAiB,UACjBpJ,MAAO,SAET4a,KAAM,CACJ5a,MAAO,SAET6a,QAAS,CACPvV,QAAS,OACTqC,eAAgB,SAChBmT,OAAQ,EACRxZ,OAAQ,EACR6O,SAAU,WACV4K,WAAY,6CACZ1Z,MAAO,MACP+H,gBAAiB,UCjNfxL,GAAYC,YAAWC,IACrB0L,GAAc9G,IAEhBC,GAAS,CAACE,MAwLDmY,wBAtLf,SAAchd,GACZ,IAAMK,EAAUT,KACVuM,EAAWC,cACX6Q,EAAaC,YAAc,sBAG/Bjd,EAMED,EANFC,QACAgF,EAKEjF,EALFiF,aACA0G,EAIE3L,EAJF2L,cACA/C,EAGE5I,EAHF4I,sBACA5D,EAEEhF,EAFFgF,kBACAmY,EACEnd,EADFmd,wBAGF,EAAgD7c,oBAAS,GAAzD,mBAAOuL,EAAP,KAAyBuR,EAAzB,KACA,EAAwD9c,qBAAxD,mBAAO+c,EAAP,KAA6BC,EAA7B,KACA,EAAkDhd,qBAAlD,mBAAO4L,EAAP,KAA0BqR,EAA1B,KACA,EAAgDjd,mBAASkL,GAAU4B,KAAK,IAAxE,mBAAOrB,EAAP,KAAyByR,EAAzB,KACA,EAAkDld,mBAAS,GAA3D,mBAAO0L,EAAP,KAA0ByR,EAA1B,KACA,GAA8Cnd,mBAAS,IAAvD,qBAAO2L,GAAP,MAAwByR,GAAxB,MACA,GAAoCpd,oBAAS,GAA7C,qBAAOqd,GAAP,MAAmBC,GAAnB,MAEArc,QAAQC,IAAI,wBAAZ,OAAqCuK,QAArC,IAAqCA,OAArC,EAAqCA,EAAkBuB,YAEvD,IAAMM,GAAUiQ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,cACnDC,GAAa,SAAAC,GACjBC,KACAhS,EAASiS,aAAcF,KAEzB,GAAgD5E,GAAe+D,EAAsBF,EAAyBlY,GAAtG6G,GAAR,GAAQA,wBAAyByH,GAAjC,GAAiCA,WACjChS,QAAQC,IAAI,0CAAZ,OAAuD+R,SAAvD,IAAuDA,QAAvD,EAAuDA,GAAYjG,YAEnE,IAAM+Q,GAAiB1Y,uBAAY,WACjCiT,aAAS1M,EAAmBD,GAAiBD,KAC5C,CAACE,EAAmBD,GAAiBD,IAElCmS,GAAWxY,uBAAY,WAC3B,IAAIC,IAAQsG,KAAsBtG,IAAQyX,GAA1C,CAEAD,GAAoB,GACpB,IAAMkB,EAAoB,IAAI5Z,IAAgBwH,EAAmBqS,IAAYtZ,GAa7E,OAXAiB,QAAQC,IAAI,CAACmY,EAAkBE,UAAUve,GAAUqe,EAAkB1R,WAAY0R,EAAkB7D,WAChG5U,MAAK,YAAkC,IAAD,mBAA/B5E,EAA+B,KAAtB2L,EAAsB,KAAZ6N,EAAY,KACrC+C,EAAoBvc,GACpBwc,EAAqB7Q,GACrB8Q,GAAmBjD,MAEpBxT,SAAQ,WACPyI,YAAW,WACT0N,GAAoB,KACnB,QAEAe,MACN,CAACjS,EAAmBmR,EAAsBpd,EAASgF,IAMtD,OAJApE,qBAAU,WACRyX,YAAY6F,GAAU,OACrB,CAACA,KAGF,yBAAKlb,UAAW5C,EAAQoJ,WACtB,kBAACT,EAAA,EAAD,CAAeC,QAAS,EAAGnH,MAAO,CAAEwJ,WAAY,UAC9C,kBAACnC,EAAA,EAAD,CAAU1G,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,MAAO,CAAE0Q,YAAa,SACnD,kBAACiM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAU1b,IAAI,aAAagF,QAAM,EAAC/E,UAAW0b,IAAWte,EAAQ6I,MAAOM,QAAS,kBAAMyU,GAAWW,KAAWC,WAC1G,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAA0Bhd,MAAO,CAAEE,MAAO4L,KAAYgR,KAAWC,QAAU,UAAY,YAEvF5B,GACA,kBAAC8B,EAAA,EAAD,CAAcC,QAAS,aAAc/b,UAAW0b,IAAW/Q,KAAYgR,KAAWC,QAAUxe,EAAQya,MAAQza,EAAQuc,SAGxH,kBAAC8B,EAAA,EAAD,CACE1b,IAAI,UACJgF,QAAM,EACN/E,UAAW0b,IAAWte,EAAQ6I,KAAM0E,KAAYgR,KAAWpE,SAAWna,EAAQya,OAC9EtR,QAAS,kBAAMyU,GAAWW,KAAWpE,WAErC,kBAACsE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAahd,MAAO,CAAEE,MAAO4L,KAAYgR,KAAWpE,QAAU,UAAY,YAE1EyC,GACA,kBAAC8B,EAAA,EAAD,CAAcC,QAAS,UAAW/b,UAAW0b,IAAW/Q,KAAYgR,KAAWpE,QAAUna,EAAQya,MAAQza,EAAQuc,SAGrH,kBAAC8B,EAAA,EAAD,CAAU1b,IAAI,WAAWgF,QAAM,EAAC/E,UAAW0b,IAAWte,EAAQ6I,MAAOM,QAAS,kBAAMyU,GAAWW,KAAWhJ,YACxG,kBAACkJ,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUhd,MAAO,CAAEE,MAAO4L,KAAYgR,KAAWhJ,SAAW,UAAY,YAExEqH,GACA,kBAAC8B,EAAA,EAAD,CAAcC,QAAS,WAAY/b,UAAW0b,IAAW/Q,KAAYgR,KAAWhJ,SAAWvV,EAAQya,MAAQza,EAAQuc,WAK1HhP,KAAYgR,KAAWpE,SACtB,kBAACrR,EAAA,EAAD,CAAU1G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1B,yBAAKM,UAAWga,EAAa5c,EAAQka,cAAgBla,EAAQia,SAC3D,kBAAC7O,GAAD,CACExL,QAASA,EACT8L,iBAAkBA,EAClBC,kBAAmBA,EACnB/G,aAAcA,EACdgH,gBAAiBA,GACjBC,kBAAmBA,EACnBP,cAAe0R,EACf3R,UAAWyR,EACXtR,iBAAkBA,EAClBC,wBAAyBA,OAKhC8B,KAAYgR,KAAWhJ,UACtB,kBAACzM,EAAA,EAAD,CAAU1G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1B,yBAAKM,UAAWga,EAAa5c,EAAQka,cAAgBla,EAAQia,SAC3D,kBAACjH,GAAD,CACEpO,aAAcA,EACdsO,WAAYA,GACZvH,kBAAmBA,EACnBC,gBAAiBA,GACjBN,cAAe0R,EACf3R,UAAWyR,EACXtR,iBAAkBA,EAClByH,cAAe6K,OAKtBvQ,KAAYgR,KAAWC,SACtB,kBAAC1V,EAAA,EAAD,CAAU1G,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1B,yBAAKM,UAAWga,EAAa5c,EAAQka,cAAgBla,EAAQia,QAASxY,MAAO,CAAE4F,WAAY,OAAQ4D,WAAY,OAAQkH,YAAa,IAClI,kBAACyM,EAAA,EAAD,CAAMhc,UAAW5C,EAAQwa,aACvB,yBAAK5X,UAAW5C,EAAQ6e,iBACtB,yBAAKjc,UAAW5C,EAAQ0a,kBACtB,0BACErZ,MAAO+O,YAAc8C,GAAYvH,EAAmB,CAClD2E,SAAS,KAGX,kBAAC,IAAD,CAAS/P,QAASiL,GAAmB4E,YAAc8C,GAAYvH,KAEjE,0BAAM/I,UAAW5C,EAAQoa,QACvB,kBAAC,IAAD,CAAS7Z,QAASgF,IAAQqG,KAAoBJ,GAAmBI,KAElEhH,GACC,0BAAMvD,MAAM,+BACV,kBAAC,IAAD,CAAsBuB,UAAW5C,EAAQ6a,aAAc1R,QAAS6U,GAAgBtc,SAAS,YAI/F,yBAAKkB,UAAW5C,EAAQ4a,kBAAxB,wBAGFrV,IAAQ3F,KAAa2F,IAAQyX,IAC7B,kBAAC,KAAD,CAAapd,QAASA,EAASE,MAAK,UAAKgf,KAAYxT,cAAeA,MAK5E,kBAACmF,EAAA,EAAD,CAAO7N,UAAW5C,EAAQqJ,MAAOoE,KAAM6P,GAAY5M,kBAAgB,qBAAqBC,mBAAiB,4BACvG,kBAACC,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACxI,GAAA,EAAD,CACE/D,OAAQA,GACR1E,QAASA,EACTgF,aAAcA,EACd2D,sBAAuBA,EACvB5D,kBAAmBA,EACnB2D,kBAAmB,SAAC1I,EAASiB,GAC3B0c,IAAc,GACdN,EAAwBrd,GACxBsd,EAAqBrc,YAUC","file":"static/js/13.8a6042c3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@/components/Card'\nimport { LineEchart } from '@/components/Echarts'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// === Services === //\nimport getLineEchartOpt from '@/components/Echarts/options/line/getLineEchartOpt'\n\n// === Hooks === //\nimport usePersonalData from '@/hooks/usePersonalData'\n\n// === Utils === //\nimport numeral from 'numeral'\nimport map from 'lodash/map'\nimport { toFixed } from '@/helpers/number-format'\n\n// === Constants === //\nimport { ETHI_BN_DECIMALS, ETHI_DISPLAY_DECIMALS } from '@/constants/ethi'\nimport { TOKEN_DISPLAY_DECIMALS } from '@/constants/vault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\n\nconst MyStatement1 = props => {\n  const { address, type, chain } = props\n\n  const isUSDi = type === 'USDi'\n  const classes = useStyles()\n  const [optionForLineChart, setOptionForLineChart] = useState({})\n  const { dataSource, loading: chartLoading } = usePersonalData(chain, type, address, type)\n\n  useEffect(() => {\n    const tvls = [\n      {\n        date: '2022-10-11',\n        balance: '1'\n      },\n      {\n        date: '2022-10-12',\n        balance: '10'\n      },\n      {\n        date: '2022-10-13',\n        balance: '10'\n      },\n      {\n        date: '2022-10-14',\n        balance: '20'\n      },\n      {\n        date: '2022-10-15',\n        balance: '20'\n      },\n      {\n        date: '2022-10-16',\n        balance: '20'\n      },\n      {\n        date: '2022-10-17',\n        balance: '30'\n      }\n    ]\n    const option1 = getLineEchartOpt(tvls, 'balance', dataSource.token, {\n      format: 'MM-DD',\n      xAxis: {\n        axisTick: {\n          alignWithLabel: true\n        }\n      }\n    })\n    console.log('option1=', option1)\n    setOptionForLineChart(option1)\n  }, [dataSource, address])\n\n  const cardProps = [\n    {\n      title: 'Net Deposit',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Total profits from BoC that are withdrawable and cumulative.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed('41231231231224141414', ETHI_BN_DECIMALS, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      unit: 'WETH'\n    },\n    {\n      title: 'Current Value',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past week.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed('55231231231224141414', ETHI_BN_DECIMALS, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      isAPY: true,\n      unit: 'WETH'\n    },\n    {\n      title: 'IRR',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past month.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral('6.21').format('0,0.00'),\n      isAPY: true,\n      unit: '%'\n    }\n  ]\n\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12} lg={12}>\n        <GridContainer>\n          {map(cardProps, (i, index) => {\n            return (\n              <GridItem key={index} xs={12} sm={12} md={4} lg={4}>\n                <Card {...i} />\n              </GridItem>\n            )\n          })}\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Outstanding Loan\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Collateral\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  AAVE Health Ratio\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  Uniswap Position Value\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={chartLoading}\n              title={\n                <span>\n                  Unrealized Profit\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </GridItem>\n    </GridContainer>\n  )\n}\n\nexport default MyStatement1\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z\"\n}), 'Build');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\"\n}), 'CompareArrows');\n\nexports.default = _default;","import { useCallback, useEffect, useState } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport map from 'lodash/map'\nimport isEmpty from 'lodash/isEmpty'\nimport flatten from 'lodash/flatten'\n\n// === Hooks === //\nimport useUserAddress from '@/hooks/useUserAddress'\n\n// === Constants === //\nimport { USDC_ADDRESS_MATIC, WETH_ADDRESS_MATIC, ZERO_ADDRESS } from '@/constants/tokens'\n\nconst { Contract } = ethers\n\nconst tokens = [WETH_ADDRESS_MATIC, USDC_ADDRESS_MATIC]\n\nconst useVaultFactory = (vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider) => {\n  const [vaultImplList, setVaultImplList] = useState([])\n  const [personalVault, setPersonalVault] = useState([])\n  const [adding, setAdding] = useState(false)\n\n  const userAddress = useUserAddress(userProvider)\n\n  const getVaultImplList = useCallback(() => {\n    if (isEmpty(vaultFactoryAddress) || isEmpty(userProvider)) return\n    const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n    vaultFactoryContract.getVaultImplList().then(setVaultImplList)\n  }, [vaultFactoryAddress, userProvider, VAULT_FACTORY_ABI])\n\n  const getVaultImplListByUser = useCallback(() => {\n    if (isEmpty(vaultFactoryAddress) || isEmpty(userProvider) || isEmpty(vaultImplList) || isEmpty(userAddress)) return\n    const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n    const requestArray = map(vaultImplList, implAddress => {\n      return Promise.all(\n        map(tokens, (arrayItem, index) => {\n          return vaultFactoryContract.vaultAddressMap(userAddress, implAddress, index).then(rs => {\n            if (rs === ZERO_ADDRESS) return { hasCreate: false, type: implAddress, token: arrayItem }\n            return {\n              address: rs,\n              type: implAddress,\n              hasCreate: true,\n              token: arrayItem\n            }\n          })\n        })\n      )\n    })\n    Promise.all(requestArray).then(resp => {\n      setPersonalVault(flatten(resp))\n    })\n  }, [userAddress, vaultFactoryAddress, userProvider, vaultImplList, VAULT_FACTORY_ABI])\n\n  const addVault = useCallback(\n    async (token, type) => {\n      setAdding(true)\n      const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n      await vaultFactoryContract\n        .connect(userProvider.getSigner())\n        .createNewVault(token, type)\n        .then(tx => tx.wait())\n        .then(getVaultImplListByUser)\n        .finally(() => {\n          setAdding(false)\n        })\n    },\n    [vaultFactoryAddress, userProvider, getVaultImplListByUser, VAULT_FACTORY_ABI]\n  )\n\n  const deleteVault = useCallback(\n    async (type, index) => {\n      setAdding(true)\n      const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n      vaultFactoryContract\n        .connect(userProvider.getSigner())\n        .deleteVaultAddressMapForDebug(userAddress, type, index)\n        .then(tx => tx.wait())\n        .then(getVaultImplListByUser)\n        .finally(() => {\n          setAdding(false)\n        })\n    },\n    [vaultFactoryAddress, getVaultImplListByUser, userAddress, userProvider, VAULT_FACTORY_ABI]\n  )\n\n  useEffect(getVaultImplList, [getVaultImplList])\n\n  useEffect(getVaultImplListByUser, [getVaultImplListByUser])\n\n  return {\n    vaultFactoryAddress,\n    vaultImplList,\n    personalVault,\n    adding,\n    // functions\n    addVault,\n    deleteVault\n  }\n}\n\nexport default useVaultFactory\n","const componentsStyle = () => ({\n  template: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)',\n    cursor: 'pointer'\n  },\n  vault: {\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  vaultTitle: {\n    textAlign: 'center'\n  },\n  icon: {\n    width: '100%',\n    borderRadius: '50%'\n  },\n  button: {\n    width: '100%',\n    marginTop: '1rem'\n  },\n  logo: {\n    width: '30px',\n    borderRadius: '50%'\n  },\n  checked: {\n    border: '2px solid #A68EFD'\n  },\n  token: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '1rem'\n  },\n  tokenInfo: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  name: {\n    marginLeft: '1rem'\n  },\n  input: {\n    maxWidth: '14rem'\n  }\n})\n\nexport default componentsStyle\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport BuildIcon from '@material-ui/icons/Build'\n\n// === Hooks === //\nimport useVaultFactory from '@/hooks/useVaultFactory'\n\n// === Utils === //\nimport map from 'lodash/map'\nimport filter from 'lodash/filter'\n\n// === Styles === //\nimport styles from './style'\nimport { isEmpty } from 'lodash'\n\nconst useStyles = makeStyles(styles)\n\nconst MyVault = props => {\n  const { vaultChangeHandle, userProvider, VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, tokens } = props\n  const { personalVault, addVault } = useVaultFactory(VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, userProvider)\n  const classes = useStyles()\n\n  const vaults = filter(personalVault, i => tokens.includes(i.token))\n  // only has 1 vault currently. set length = 2 makes page beatiful more.\n  vaults.length = 2\n  return (\n    <GridContainer spacing={2}>\n      {map(vaults, (item, index) => {\n        return (\n          <GridItem md={6} key={index}>\n            {isEmpty(item) ? (\n              <div className={classes.vault}>\n                <div className={classes.vaultTitle}>\n                  <img alt=\"\" className={classes.icon} src={`https://bankofchain.io/logo256.png`} />\n                </div>\n\n                <Button color=\"colorfull\" startIcon={<BuildIcon />} className={classes.button}>\n                  on Building...\n                </Button>\n              </div>\n            ) : (\n              <div className={classes.vault}>\n                <div className={classes.vaultTitle}>\n                  <img alt=\"\" className={classes.icon} src={`https://bankofchain.io/images/${item.token}.png`} />\n                </div>\n                {item.hasCreate ? (\n                  <Button\n                    color=\"colorfull\"\n                    startIcon={<CompareArrowsIcon />}\n                    className={classes.button}\n                    onClick={() => vaultChangeHandle(item.address, item.token)}\n                  >\n                    Deposit\n                  </Button>\n                ) : (\n                  <Button color=\"colorfull\" startIcon={<AddCircleOutlineIcon />} className={classes.button} onClick={() => addVault(item.token, item.type)}>\n                    Create\n                  </Button>\n                )}\n              </div>\n            )}\n          </GridItem>\n        )\n      })}\n    </GridContainer>\n  )\n}\n\nexport default MyVault\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  depositContainer: {\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem',\n    padding: '2.6875rem 2.25rem'\n  },\n  estimateContainer: {\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n    padding: '2.0625rem 2.6875rem'\n  },\n  estimateText: {\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  tokenInputWrapper: {\n    marginBottom: '16px'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  depositComfirmArea: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  flexText: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  ModalTokenLogo: {\n    width: 25,\n    borderRadius: '50%',\n    margin: '0 8px'\n  },\n  labelToolTipIcon: {\n    fontSize: 16\n  },\n  depositModal: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem'\n  },\n  root: {\n    padding: '1.5rem 0'\n  },\n  item: {\n    paddingTop: '3rem'\n  },\n  subTitle: {\n    color: '#A68EFE'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Loading from '@/components/LoadingComponent'\n\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport CustomTextField from '@/components/CustomTextField'\nimport Button from '@/components/CustomButtons/Button'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\n\n// === Constants === //\nimport { isAd, isEs, isRp, isDistributing, errorTextOutput, isLessThanMinValue } from '@/helpers/error-handler'\nimport { BN_18 } from '@/constants/big-number'\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\n\n// === Styles === //\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nexport default function Deposit({\n  address,\n  userProvider,\n  VAULT_ABI,\n  VAULT_ADDRESS,\n  ETH_ADDRESS,\n  isBalanceLoading,\n  minimumInvestmentAmount,\n  wantTokenBalance,\n  wantTokenDecimals,\n  wantTokenSymbol,\n  wantTokenForVault\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [ethValue, setEthValue] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const loadingTimer = useRef()\n\n  /**\n   * check if value is valid\n   * @returns\n   */\n  function isValidValue() {\n    const balance = wantTokenBalance\n    const decimals = wantTokenDecimals\n    const value = ethValue\n    if (value === '' || value === '-' || value === '0' || isEmpty(value.replace(/ /g, ''))) return\n    // not a number\n    if (isNaN(Number(value))) return false\n    const nextValue = BN(value)\n    const nextFromValue = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    // less than 0\n    if (nextFromValue.lte(0)) return false\n    // value should be integer\n    const nextFromValueString = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    if (nextFromValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (balance.lt(BigNumber.from(nextFromValue.toFixed()))) return false\n\n    return true\n  }\n\n  const handleInputChange = event => {\n    setEthValue(event.target.value)\n  }\n\n  const handleMaxClick = () => {\n    const maxValue = wantTokenBalance\n    setEthValue(\n      formatBalance(maxValue.gt(0) ? maxValue : 0, wantTokenDecimals, {\n        showAll: true\n      })\n    )\n  }\n\n  const diposit = async () => {\n    clearTimeout(loadingTimer.current)\n    const isValid = isValidValue()\n    if (!isValid) {\n      return dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Please enter the correct value'\n        })\n      )\n    }\n    setIsLoading(true)\n    const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString()).toFixed())\n    console.log('nextTokens=', ETH_ADDRESS, amount)\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    let isSuccess = false\n\n    const extendObj = {}\n    // if gasLimit times not 1, need estimateGas\n    if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n      const gas = await nVaultWithUser.estimateGas.mint(ETH_ADDRESS, amount, 0, { from: address, value: amount })\n      const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n      // gasLimit not exceed maximum\n      const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n      extendObj.gasLimit = maxGasLimit\n    }\n    await nVaultWithUser\n      .mint(ETH_ADDRESS, amount, 0, {\n        ...extendObj,\n        from: address,\n        value: amount\n      })\n      .then(tx => tx.wait())\n      .then(() => {\n        isSuccess = true\n      })\n      .catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        setIsLoading(false)\n      })\n\n    if (isSuccess) {\n      setEthValue('')\n    }\n\n    loadingTimer.current = setTimeout(() => {\n      setIsLoading(false)\n      if (isSuccess) {\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'success',\n            message: 'Success!'\n          })\n        )\n      }\n    }, 2000)\n  }\n\n  const estimateMint = useCallback(\n    debounce(async () => {\n      const isValid = isValidValue()\n      if (!isValid) {\n        return\n      }\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString()).toFixed())\n      await vaultContract.estimateMint(ETH_ADDRESS, amount).catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        return BigNumber.from(0)\n      })\n    }, 1500)\n  )\n\n  useEffect(() => {\n    estimateMint()\n    return () => estimateMint.cancel()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethValue])\n\n  useEffect(() => {\n    const estimatedUsedValue = BigNumber.from(10).pow(wantTokenDecimals)\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI) || wantTokenBalance.lt(estimatedUsedValue)) {\n      return\n    }\n    // const signer = userProvider.getSigner()\n    // const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    // const nVaultWithUser = vaultContract.connect(signer)\n    // nVaultWithUser.estimateGas\n    //   .mint(ETH_ADDRESS, estimatedUsedValue, {\n    //     from: address,\n    //     value: estimatedUsedValue\n    //   })\n    //   .then(setMintGasLimit)\n    //   .catch(noop)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS, wantTokenBalance, VAULT_ABI])\n\n  const isLogin = !isEmpty(userProvider)\n  const isValid = isValidValue()\n\n  return (\n    <>\n      <GridContainer classes={{ root: classes.depositContainer }}>\n        <p className={classes.estimateText}>From</p>\n        <GridItem xs={12} sm={12} md={12} lg={12} className={classes.tokenInputWrapper}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <div className={classes.inputLabelWrapper}>\n                <div className={classes.tokenInfo}>\n                  <img className={classes.tokenLogo} alt=\"\" src={`./images/${wantTokenForVault}.png`} />\n                  <span className={classes.tokenName}>{wantTokenSymbol}</span>\n                </div>\n                <CustomTextField\n                  classes={{ root: classes.input }}\n                  value={ethValue}\n                  onChange={handleInputChange}\n                  placeholder=\"deposit amount\"\n                  maxEndAdornment\n                  onMaxClick={handleMaxClick}\n                  error={!isUndefined(isValid) && !isValid}\n                />\n              </div>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <p\n                className={classes.estimateText}\n                title={formatBalance(wantTokenBalance, wantTokenDecimals, {\n                  showAll: true\n                })}\n              >\n                Balance:&nbsp;&nbsp;\n                <Loading loading={isBalanceLoading}>{formatBalance(wantTokenBalance, wantTokenDecimals)}</Loading>\n              </p>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button disabled={!isLogin || (isLogin && !isValid)} color=\"colorfull\" onClick={diposit} style={{ width: '100%' }}>\n              Deposit\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <div className={classes.modalBody}>\n            <CircularProgress color=\"inherit\" />\n            <p>On Deposit...</p>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  swapBody: {\n    width: '42rem',\n    outline: 0\n  },\n  withdrawContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  outputContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem'\n  },\n  estimateText: {\n    height: '1.25rem',\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex',\n    marginTop: '0.5rem',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  receiveTokenItem: {\n    marginBottom: 0\n  },\n  settingBtn: {\n    color: '#39d0d8',\n    textAlign: 'right',\n    lineHeight: '36px',\n    padding: '10px 0',\n    marginRight: '16px'\n  },\n  settingTitle: {\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: '0.01071em',\n    lineHeight: 1.5,\n    textAlign: 'center',\n    width: '100%'\n  },\n  settingItem: {\n    height: 38,\n    lineHeight: '38px',\n    marginBottom: 16,\n    '&:first-child': {\n      marginTop: 24\n    }\n  },\n  settingItemLabel: {\n    position: 'relative',\n    minWidth: 100,\n    marginRight: 16,\n    textAlign: 'right'\n  },\n  mutedLabel: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  maxLossFormCtrl: {\n    width: '160px'\n  },\n  exchanged: {\n    position: 'relative',\n    paddingLeft: 16\n  },\n  tooltip: {\n    fontSize: '14px'\n  },\n  labelToolTipIcon: {\n    position: 'absolute',\n    left: '-18px',\n    top: '50%',\n    color: '#fff',\n    fontSize: 16,\n    transform: 'translate(0, -50%)'\n  },\n  slippageItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  slippageInput: {\n    width: 96,\n    marginLeft: 16\n  },\n  widthdrawLoadingPaper: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem',\n    width: '100%'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  estimateItem: {\n    textAlign: 'center',\n    minHeight: '100px',\n    color: '#A0A0A0',\n    paddingTop: '35px'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  popover: {\n    width: '15rem',\n    background: '#292B2E',\n    border: ' 1px solid #666666',\n    borderRadius: '1.25rem',\n    padding: '1rem'\n  },\n  popoverTitle: {\n    color: '#A0A0A0',\n    margin: 0,\n    padding: '0.5rem 0'\n  },\n  root: {\n    padding: '1.5rem 0'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport AddIcon from '@material-ui/icons/Add'\nimport Step from '@material-ui/core/Step'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport CustomTextField from '@/components/CustomTextField'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Loading from '@/components/LoadingComponent'\n\n// === Hooks === //\nimport { warmDialog } from '@/reducers/meta-reducer'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport map from 'lodash/map'\nimport get from 'lodash/get'\nimport debounce from 'lodash/debounce'\nimport compact from 'lodash/compact'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\nimport { isAd, isEs, isRp, isMaxLoss, isLossMuch, isExchangeFail, errorTextOutput } from '@/helpers/error-handler'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\nimport { BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = [{ title: 'Shares Validation' }, { title: 'Gas Estimates' }, { title: 'Withdraw' }]\n\nexport default function Withdraw({\n  address,\n  userProvider,\n  VAULT_ADDRESS,\n  VAULT_ABI,\n  isBalanceLoading,\n  reloadBalance,\n  totalAsset,\n  wantTokenDecimals,\n  wantTokenSymbol\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [toValue, setToValue] = useState('')\n  const allowMaxLoss = '0.3'\n  const slipper = '0.3'\n  const [estimateWithdrawArray, setEstimateWithdrawArray] = useState([])\n  const [isEstimate, setIsEstimate] = useState(false)\n  const [isWithdrawLoading, setIsWithdrawLoading] = useState(false)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [withdrawError, setWithdrawError] = useState({})\n\n  const [pegTokenPrice, setPegTokenPrice] = useState(BN_18)\n\n  const redeemFeeBps = BigNumber.from(0)\n\n  const redeemFeeBpsPercent = redeemFeeBps.toNumber() / 100\n\n  const estimateWithdraw = useCallback(\n    debounce(async () => {\n      setIsEstimate(true)\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString()).toFixed())\n      const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n      const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n        .mul(usdValue)\n        .div(BigNumber.from(1e4))\n      const signer = userProvider.getSigner()\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      try {\n        const [tokens, amounts] = await vaultContractWithSigner.callStatic.burn(nextValue, allowMaxLossValue)\n        console.log('estimate withdraw result:', tokens, amounts)\n        let nextEstimateWithdrawArray = compact(\n          await Promise.all(\n            map(tokens, async (token, index) => {\n              const amount = get(amounts, index, BigNumber.from(0))\n              if (amount.gt(0)) {\n                return {\n                  tokenAddress: token,\n                  decimals: wantTokenDecimals,\n                  amounts: amount\n                }\n              }\n            })\n          )\n        )\n\n        setEstimateWithdrawArray(nextEstimateWithdrawArray)\n      } catch (error) {\n        console.log('estimate withdraw error', error)\n        console.log('withdraw original error :', error)\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isMaxLoss(errorMsg)) {\n          tip = 'Failed to withdraw, please increase the Max Loss!'\n        } else if (isLossMuch(errorMsg)) {\n          tip = 'Failed to exchange, please increase the exchange slippage!'\n        } else if (isExchangeFail(errorMsg)) {\n          tip = 'Failed to exchange, Please try again later!'\n        } else {\n          tip = errorMsg\n        }\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'error',\n            message: tip\n          })\n        )\n        setEstimateWithdrawArray(undefined)\n      } finally {\n        setTimeout(() => {\n          setIsEstimate(false)\n        }, 500)\n      }\n    }, 1500)\n  )\n\n  const handleBurn = async () => {\n    console.log('handleBurn')\n  }\n\n  const withdraw = async () => {\n    let withdrawTimeStart = Date.now(),\n      withdrawValidFinish = 0,\n      preWithdrawGetCoins = 0,\n      getSwapInfoFinish = 0,\n      estimateGasFinish = 0,\n      withdrawFinish = 0,\n      withdrawTransationFinish = 0\n    setIsWithdrawLoading(true)\n    console.log('----------start withdraw----------')\n    if (!isValidToValue()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct value.'\n      })\n    }\n\n    if (!isValidAllowLoss()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Enter the correct Max Loss value.'\n      })\n    }\n\n    if (!isValidSlipper()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct slippage value.'\n      })\n    }\n    withdrawValidFinish = Date.now()\n    setCurrentStep(1)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString()).toFixed())\n    const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n    const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n      .mul(usdValue)\n      .div(BigNumber.from(1e4))\n    try {\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      getSwapInfoFinish = Date.now()\n      setCurrentStep(2)\n      let tx\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithSigner.estimateGas.burn(nextValue, allowMaxLossValue)\n        setCurrentStep(3)\n        estimateGasFinish = Date.now()\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue, {\n          gasLimit: maxGasLimit\n        })\n      } else {\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue)\n      }\n      withdrawFinish = Date.now()\n\n      const { events } = await tx.wait()\n      let args = []\n      for (let i = events.length - 1; i >= 0; i--) {\n        if (events[i].event === 'Burn') {\n          args = events[i].args\n          break\n        }\n      }\n      handleBurn(...args)\n\n      withdrawTransationFinish = Date.now()\n      setCurrentStep(4)\n      setToValue('')\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: 'Success!'\n        })\n      )\n    } catch (error) {\n      console.log('withdraw original error :', error)\n      const errorMsg = errorTextOutput(error)\n      let tip = ''\n      if (isEs(errorMsg)) {\n        tip = 'Vault has been shut down, please try again later!'\n      } else if (isAd(errorMsg)) {\n        tip = 'Vault is in adjustment status, please try again later!'\n      } else if (isRp(errorMsg)) {\n        tip = 'Vault is in rebase status, please try again later!'\n      } else if (isMaxLoss(errorMsg)) {\n        tip = 'Failed to withdraw, please increase the Max Loss!'\n      } else if (isLossMuch(errorMsg)) {\n        tip = 'Failed to exchange, please increase the exchange slippage!'\n      } else if (isExchangeFail(errorMsg)) {\n        tip = 'Failed to exchange, Please try again later!'\n      } else {\n        tip = errorMsg\n      }\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: tip\n        })\n      )\n    }\n    setTimeout(() => {\n      setIsWithdrawLoading(false)\n      setWithdrawError({})\n      setCurrentStep(0)\n    }, 2000)\n    // log withdraw total time\n    const totalTime = withdrawTransationFinish - withdrawTimeStart\n    const szjy = withdrawValidFinish - withdrawTimeStart\n    const szjyPercents = ((100 * szjy) / totalTime).toFixed(2)\n    const ytq = preWithdrawGetCoins === 0 ? 0 : preWithdrawGetCoins - withdrawValidFinish\n    const ytqPercents = ((100 * ytq) / totalTime).toFixed(2)\n    const hqdhlj = preWithdrawGetCoins === 0 ? getSwapInfoFinish - withdrawValidFinish : getSwapInfoFinish - preWithdrawGetCoins\n    const hqdhljPercents = ((100 * hqdhlj) / totalTime).toFixed(2)\n    const eg = estimateGasFinish === 0 ? 0 : estimateGasFinish - getSwapInfoFinish\n    const egPercents = ((100 * eg) / totalTime).toFixed(2)\n    const qk = estimateGasFinish === 0 ? withdrawFinish - getSwapInfoFinish : withdrawFinish - estimateGasFinish\n    const qkPercents = ((100 * qk) / totalTime).toFixed(2)\n    const swc = withdrawTransationFinish - withdrawFinish\n    const swcPercents = ((100 * swc) / totalTime).toFixed(2)\n    console.table({\n      valid: `${szjy}(${szjyPercents}%)`,\n      preWithdraw: `${ytq}(${ytqPercents}%)`,\n      getSwapPath: `${hqdhlj}(${hqdhljPercents}%)`,\n      estimateGas: `${eg}(${egPercents}%)`,\n      withdraw: `${qk}(${qkPercents}%)`,\n      transaction: `${swc}(${swcPercents}%)`\n    })\n  }\n\n  function imgError(e) {\n    const evn = e\n    const img = evn.srcElement ? evn.srcElement : evn.target\n    img.src = '/default.png'\n  }\n\n  /**\n   * check if toValue is valid\n   * @returns\n   */\n  const isValidToValue = () => {\n    if (toValue === '' || toValue === '-' || isEmpty(toValue.replace(/ /g, ''))) return\n    // should be a number\n    if (isNaN(Number(toValue))) return false\n    const nextValue = BN(toValue)\n    const nextToValue = nextValue.multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString())\n    // should be positive\n    if (nextToValue.lte(0)) return false\n    // should be integer\n    const nextToValueString = nextValue.multipliedBy(BigNumber.from(10).pow(wantTokenDecimals).toString())\n    if (nextToValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (totalAsset.lt(BigNumber.from(nextToValue.toFixed()))) return false\n    return true\n  }\n\n  /**\n   * check if allow loss is valid\n   * @returns\n   */\n  const isValidAllowLoss = () => {\n    if (allowMaxLoss === '' || isEmpty(allowMaxLoss.replace(/ /g, ''))) return\n    if (isNaN(allowMaxLoss)) return false\n    if (allowMaxLoss < 0 || allowMaxLoss > 50) return false\n    return true\n  }\n\n  const isValidSlipper = () => {\n    if (slipper === '' || isEmpty(slipper.replace(/ /g, ''))) return\n    if (isNaN(slipper)) return false\n    if (slipper < 0 || slipper > 45) return false\n    return true\n  }\n\n  useEffect(() => {\n    // need open advanced setting\n    // allowLoss, toValue need valid\n    if (isValidAllowLoss() && isValidToValue()) {\n      estimateWithdraw()\n    }\n    if (isEmpty(toValue)) {\n      setEstimateWithdrawArray([])\n    }\n    return () => {\n      setEstimateWithdrawArray([])\n      return estimateWithdraw.cancel()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toValue, allowMaxLoss])\n\n  const handleAmountChange = event => {\n    try {\n      setToValue(event.target.value)\n    } catch (error) {\n      setToValue('')\n    }\n  }\n\n  const handleMaxClick = async () => {\n    const [nexttotalAsset] = await reloadBalance()\n    setToValue(formatBalance(nexttotalAsset, wantTokenDecimals, { showAll: true }))\n  }\n\n  const renderEstimate = () => {\n    if (isEstimate) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <CircularProgress fontSize=\"large\" color=\"primary\" />\n          </div>\n        </GridItem>\n      )\n    }\n    if (isUndefined(estimateWithdrawArray)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <ErrorOutlineIcon fontSize=\"large\" />\n            <p>Amount estimate failed, please try again!</p>\n          </div>\n        </GridItem>\n      )\n    }\n    if (isEmpty(estimateWithdrawArray) || isEmpty(toValue)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <p style={{ fontSize: 26, textAlign: 'right' }}>0.00</p>\n          </div>\n        </GridItem>\n      )\n    }\n    return map(estimateWithdrawArray, item => {\n      return (\n        <GridItem key={item.tokenAddress} xs={12} sm={12} md={6} lg={6}>\n          <Button\n            title={toFixed(item.amounts, BigNumber.from(10).pow(item.decimals))}\n            color=\"transparent\"\n            target=\"_blank\"\n            style={{ fontSize: 14, paddingBottom: 20 }}\n            onClick={() => addToken(item.tokenAddress)}\n          >\n            <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 25, left: 45 }} />\n            <img\n              title=\"Add token address to wallet\"\n              className={classes.img}\n              style={{ borderRadius: '50%' }}\n              alt=\"\"\n              src={`./images/${item.tokenAddress}.png`}\n              onError={imgError}\n            />\n            &nbsp;&nbsp;~&nbsp;\n            {toFixed(item.amounts, BigNumber.from(10).pow(item.decimals), 6)}\n          </Button>\n        </GridItem>\n      )\n    })\n  }\n\n  const isValidToValueFlag = isValidToValue()\n\n  const isLogin = !isEmpty(userProvider)\n\n  const getPegTokenPrice = () => {\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract.getPegTokenPrice().then(result => {\n      setTimeout(() => {\n        setPegTokenPrice(result)\n      }, 500)\n    })\n    return getPegTokenPrice\n  }\n\n  useEffect(() => {\n    if (isEmpty(address) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI)) return\n    const timer = setInterval(getPegTokenPrice(), 10000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address])\n\n  return (\n    <>\n      <GridContainer className={classes.withdrawContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>From</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.inputLabelWrapper}>\n            <div className={classes.tokenInfo}>\n              <span className={classes.tokenName}>{wantTokenSymbol} VAULT</span>\n            </div>\n            <CustomTextField\n              classes={{ root: classes.input }}\n              value={toValue}\n              placeholder=\"withdraw amount\"\n              maxEndAdornment\n              onMaxClick={() => handleMaxClick()}\n              onChange={handleAmountChange}\n              error={!isUndefined(isValidToValueFlag) && !isValidToValueFlag && toValue !== '0'}\n            />\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText} title={formatBalance(totalAsset, wantTokenDecimals, { showAll: true })}>\n            Balance:&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(totalAsset, wantTokenDecimals)}</Loading>\n          </p>\n        </GridItem>\n      </GridContainer>\n      <GridContainer className={classes.outputContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.selectorlWrapper}>\n            <p className={classes.estimateBalanceTitle}>{wantTokenSymbol}</p>\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          {renderEstimate()}\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button\n              disabled={!isLogin || (isLogin && (isUndefined(isValidToValueFlag) || !isValidToValueFlag))}\n              color=\"colorfull\"\n              onClick={withdraw}\n              style={{ width: '100%', padding: '12px 16px' }}\n            >\n              Withdraw\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip\n                }}\n                placement=\"top\"\n                title={`${redeemFeeBpsPercent}% withdrawal fee of the principal.`}\n              >\n                <InfoIcon style={{ marginLeft: '0.5rem' }} />\n              </Tooltip>\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isWithdrawLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.widthdrawLoadingPaper}>\n          <div className={classes.modalBody}>\n            {isEmpty(withdrawError) && <CircularProgress color=\"inherit\" />}\n            {isEmpty(withdrawError) ? <p>In Withdrawing...</p> : <p>Withdraw Error !</p>}\n            <BocStepper\n              classes={{\n                root: classes.root\n              }}\n              alternativeLabel\n              activeStep={currentStep}\n              connector={<BocStepConnector />}\n            >\n              {map(steps, (i, index) => {\n                return (\n                  <Step key={index}>\n                    <BocStepLabel StepIconComponent={BocStepIcon}>{i.title}</BocStepLabel>\n                  </Step>\n                )\n              })}\n            </BocStepper>\n            {!isEmpty(withdrawError) && (\n              <p\n                style={{\n                  color: withdrawError.type === 'error' ? 'red' : 'yellow'\n                }}\n              >\n                <WarningIcon style={{ verticalAlign: 'bottom' }}></WarningIcon>\n                &nbsp;&nbsp;&nbsp;{withdrawError.message}\n              </p>\n            )}\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                setIsWithdrawLoading(false)\n                setWithdrawError({})\n                setCurrentStep(0)\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\n// === Hooks === //\nimport useUserAddress from './useUserAddress'\n\nconst { Contract, BigNumber } = ethers\n\nconst useVaultOnRisk = (VAULT_ADDRESS, VAULT_ABI, userProvider) => {\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n  const [totalAsset, setTotalAsset] = useState(BigNumber.from(0))\n  const [underlyingUnitsPerShare, setUnderlyingUnitsPerShare] = useState(BigNumber.from(0))\n  const [minimumInvestmentAmount, setMinimumInvestmentAmount] = useState(BigNumber.from(0))\n\n  const address = useUserAddress(userProvider)\n\n  const valid = () => {\n    if (isEmpty(VAULT_ADDRESS)) return new Error('VAULT_ADDRESS is need!')\n    if (isEmpty(VAULT_ABI)) return new Error('VAULT_ABI is need!')\n    if (isEmpty(userProvider)) return new Error('userProvider is need!')\n  }\n\n  /**\n   * query vault base info\n   * @returns\n   */\n  const queryBaseInfo = () => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const requestArray = [\n      vaultContract.depositTo3rdPoolTotalAssets().catch(() => BigNumber.from(0)),\n      // vaultContract.minimumInvestmentAmount().catch(() => BigNumber.from(0))\n    ]\n    return Promise.all(requestArray)\n      .then(([totalAsset, minimumInvestmentAmount]) => {\n        setTotalAsset(totalAsset)\n        setMinimumInvestmentAmount(minimumInvestmentAmount)\n        return {\n          totalAsset\n        }\n      })\n      .catch(setError)\n      .finally(() => setLoading(false))\n  }\n\n  const fetchUnderlyingUnitsPerShare = () => {\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    setLoading(true)\n    vaultContract\n      .underlyingUnitsPerShare()\n      .catch(setError)\n      .then(setUnderlyingUnitsPerShare)\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    const error = valid()\n    if (error) {\n      setLoading(false)\n      setError()\n      return\n    }\n    queryBaseInfo()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  return {\n    loading,\n    error,\n    totalAsset,\n    minimumInvestmentAmount,\n    fetchUnderlyingUnitsPerShare,\n    queryBaseInfo,\n    underlyingUnitsPerShare\n  }\n}\n\nexport default useVaultOnRisk\n","import { container } from '@/assets/jss/material-kit-react.js'\nimport { gradientText } from '@/assets/jss/common.js'\n\nconst componentsStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: 65,\n    marginBottom: 100,\n    ...container\n  },\n  center: {\n    justifyContent: 'center',\n    padding: '50px 72px 50px',\n    backgroundColor: '#0c0735cc',\n    [theme.breakpoints.down('md')]: {\n      padding: '50px 16px 50px'\n    },\n    margin: 0\n  },\n  wrapper: {\n    padding: '5rem 3rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  wrapperMobile: {\n    padding: '3rem 2rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  deposit: {\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderTopLeftRadius: '1.25rem',\n    borderTopRightRadius: '1.25rem'\n  },\n  balance: {\n    marginTop: '0.5rem',\n    marginBottom: '2rem',\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderBottomLeftRadius: '1.25rem',\n    borderBottomRightRadius: '1.25rem'\n  },\n  symbol: {\n    color: '#A68EFD',\n    marginLeft: '1rem',\n    ...gradientText\n  },\n  footer: {},\n  item: {\n    color: '#fff',\n    marginBottom: 20,\n    '& .MuiListItemIcon-root': {\n      minWidth: '38px'\n    }\n  },\n  centerItem: {\n    width: '630px'\n  },\n  balanceCard: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: '0 1rem 1rem 0',\n    textAlign: 'left',\n    padding: '2.8125rem 2.4375rem',\n    background: '#323338',\n    color: '#fff',\n    borderRadius: '1.25rem'\n  },\n  check: {\n    color: '#A68EFE'\n  },\n  balanceCardValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 30,\n    lineHeight: '30px',\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  balanceCardLabel: {\n    color: '#b2add1',\n    fontSize: 14\n  },\n  tokenInfo: {\n    display: 'flex',\n    position: 'absolute',\n    right: 12,\n    top: 9\n  },\n  addTokenIcon: {\n    cursor: 'pointer',\n    marginLeft: '1rem',\n    display: 'flex'\n  },\n  scanToken: {\n    width: 24,\n    height: 'auto',\n    cursor: 'pointer',\n    borderRadius: '50%',\n    backgroundColor: '#fff'\n  },\n  hidden: {\n    display: 'none'\n  },\n  brand: {\n    color: '#FFFFFF',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '4.2rem',\n    fontWeight: '600',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    width: 'auto',\n    margin: '10px 0 0'\n  },\n  main: {\n    position: 'relative',\n    backgroundColor: 'transparent'\n  },\n  mainRaised: {\n    margin: '0 auto',\n    marginTop: 65\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  radioUnchecked: {\n    width: '0px',\n    height: '0px',\n    padding: '7px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioChecked: {\n    width: '16px',\n    height: '16px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioRoot: {\n    padding: '12px',\n    '&:hover': {\n      backgroundColor: 'unset'\n    }\n  },\n  radio: {\n    color: '#fff !important'\n  },\n  investCard: {\n    padding: '20px 24px',\n    borderRadius: 6,\n    backgroundColor: 'rgba(39, 31, 114, 0.8)',\n    overflow: 'visible'\n  },\n  table: {\n    backgroundColor: '#150752',\n    border: '1px solid rgb(222, 217, 213)'\n  },\n  tableCell: {\n    color: '#fff',\n    fontSize: '12px',\n    letterSpacing: '0.01071em'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& .MuiPaper-root': {\n      minWidth: 430,\n      minHeight: 120,\n      padding: '32px 24px',\n      fontSize: 16,\n      border: 0,\n      color: '#fff',\n      boxShadow: '0px 15px 15px rgba(0, 0, 0, 0.05)',\n      borderRadius: '20px',\n      background: '#292B2E',\n      outline: 0,\n      width: '550px'\n    }\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  stepContainer: {\n    padding: 20\n  },\n  stepItem: {\n    color: '#fff'\n  },\n  tabsRoot: {\n    padding: '0 20px'\n  },\n  tabsIndicator: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    '& > span': {\n      maxWidth: 120,\n      width: '100%',\n      backgroundColor: '#fff'\n    }\n  },\n  tabTextColor: {\n    color: '#fff'\n  },\n  tabRoot: {\n    width: '50%',\n    fontSize: '16px',\n    maxWidth: 'none'\n  },\n  detailWrapper: {\n    margin: '42px 0 0 0'\n  },\n  slider: {\n    position: 'absolute',\n    top: '50px',\n    left: 'calc(50% - 33rem)',\n    backgroundColor: '#271f72',\n    color: 'azure'\n  },\n  text: {\n    color: 'azure'\n  },\n  spliter: {\n    display: 'flex',\n    justifyContent: 'center',\n    bottom: 0,\n    height: 2,\n    position: 'absolute',\n    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '54%',\n    backgroundColor: '#fff'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@material-ui/core/Card'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport Loading from '@/components/LoadingComponent'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n// === Components === //\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport MyStatement from '@/components/MyStatement/MyStatement1'\nimport MyVault from '@/components/MyVault'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// === Reducers === //\nimport { setCurrentTab } from '@/reducers/invest-reducer'\n\n// === constants === //\nimport { USDC_ADDRESS_MATIC } from '@/constants/tokens'\nimport { INVEST_TAB } from '@/constants/invest'\nimport { IERC20_ABI, CHAIN_ID } from '@/constants'\n\n// === Utils === //\nimport { formatBalance } from '@/helpers/number-format'\nimport isEmpty from 'lodash/isEmpty'\nimport * as ethers from 'ethers'\nimport useVersionWapper from '@/hooks/useVersionWapper'\nimport { addToken } from '@/helpers/wallet'\n\n// === Hooks === //\nimport useVaultOnRisk from '@/hooks/useVaultOnRisk'\n\n// === Styles === //\nimport styles from './style'\nimport { useCallback } from 'react'\n\nconst useStyles = makeStyles(styles)\nconst { BigNumber } = ethers\n\nconst tokens = [USDC_ADDRESS_MATIC]\n\nfunction Usdr(props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const isLayoutSm = useMediaQuery('(max-width: 960px)')\n\n  const {\n    address,\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_FACTORY_ADDRESS,\n    VAULT_FACTORY_ABI,\n    UNISWAPV3_RISK_ON_VAULT,\n  } = props\n\n  const [isBalanceLoading, setIsBalanceLoading] = useState(false)\n  const [personalVaultAddress, setPersonalVaultAddress] = useState()\n  const [wantTokenForVault, setWantTokenForVault] = useState()\n  const [wantTokenBalance, setWantTokenBalance] = useState(BigNumber.from(0))\n  const [wantTokenDecimals, setWantTokenDecimals] = useState(0)\n  const [wantTokenSymbol, setWantTokenSymbol] = useState('')\n  const [isVisiable, setIsVisiable] = useState(true)\n\n  console.log('personalVaultAddress=', wantTokenBalance?.toString())\n\n  const current = useSelector(state => state.investReducer.currentTab)\n  const setCurrent = tab => {\n    loadData()\n    dispatch(setCurrentTab(tab))\n  }\n  const { minimumInvestmentAmount, totalAsset } = useVaultOnRisk(personalVaultAddress, UNISWAPV3_RISK_ON_VAULT, userProvider)\n  console.log('minimumInvestmentAmount, exchangeManage', totalAsset?.toString())\n\n  const handleAddToken = useCallback(() => {\n    addToken(wantTokenForVault, wantTokenSymbol, wantTokenDecimals)\n  }, [wantTokenForVault, wantTokenSymbol, wantTokenDecimals])\n\n  const loadData = useCallback(() => {\n    if (isEmpty(wantTokenForVault) || isEmpty(personalVaultAddress)) return\n\n    setIsBalanceLoading(true)\n    const wantTokenContract = new ethers.Contract(wantTokenForVault, IERC20_ABI, userProvider)\n\n    Promise.all([wantTokenContract.balanceOf(address), wantTokenContract.decimals(), wantTokenContract.symbol()])\n      .then(([balance, decimals, symbol]) => {\n        setWantTokenBalance(balance)\n        setWantTokenDecimals(decimals)\n        setWantTokenSymbol(symbol)\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsBalanceLoading(false)\n        }, 500)\n      })\n    return loadData\n  }, [wantTokenForVault, personalVaultAddress, address, userProvider])\n\n  useEffect(() => {\n    setInterval(loadData, 3000)\n  }, [loadData])\n\n  return (\n    <div className={classes.container}>\n      <GridContainer spacing={0} style={{ paddingTop: '100px' }}>\n        <GridItem xs={2} sm={2} md={3} style={{ paddingLeft: '2rem' }}>\n          <List>\n            <ListItem key=\"My Account\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.account)}>\n              <ListItemIcon>\n                <AccountBalanceWalletIcon style={{ color: current === INVEST_TAB.account ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'My Account'} className={classNames(current === INVEST_TAB.account ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem\n              key=\"Deposit\"\n              button\n              className={classNames(classes.item, current === INVEST_TAB.deposit && classes.check)}\n              onClick={() => setCurrent(INVEST_TAB.deposit)}\n            >\n              <ListItemIcon>\n                <SaveAltIcon style={{ color: current === INVEST_TAB.deposit ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Deposit'} className={classNames(current === INVEST_TAB.deposit ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem key=\"Withdraw\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.withdraw)}>\n              <ListItemIcon>\n                <UndoIcon style={{ color: current === INVEST_TAB.withdraw ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Withdraw'} className={classNames(current === INVEST_TAB.withdraw ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n          </List>\n        </GridItem>\n        {current === INVEST_TAB.deposit && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Deposit\n                address={address}\n                wantTokenBalance={wantTokenBalance}\n                wantTokenDecimals={wantTokenDecimals}\n                userProvider={userProvider}\n                wantTokenSymbol={wantTokenSymbol}\n                wantTokenForVault={wantTokenForVault}\n                VAULT_ADDRESS={personalVaultAddress}\n                VAULT_ABI={UNISWAPV3_RISK_ON_VAULT}\n                isBalanceLoading={isBalanceLoading}\n                minimumInvestmentAmount={minimumInvestmentAmount}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.withdraw && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Withdraw\n                userProvider={userProvider}\n                totalAsset={totalAsset}\n                wantTokenDecimals={wantTokenDecimals}\n                wantTokenSymbol={wantTokenSymbol}\n                VAULT_ADDRESS={personalVaultAddress}\n                VAULT_ABI={UNISWAPV3_RISK_ON_VAULT}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadData}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.account && (\n          <GridItem xs={9} sm={9} md={9}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper} style={{ background: 'none', paddingTop: '1rem', paddingLeft: 0 }}>\n              <Card className={classes.balanceCard}>\n                <div className={classes.balanceCardItem}>\n                  <div className={classes.balanceCardValue}>\n                    <span\n                      title={formatBalance(totalAsset, wantTokenDecimals, {\n                        showAll: true\n                      })}\n                    >\n                      <Loading loading={isBalanceLoading}>{formatBalance(totalAsset, wantTokenDecimals)}</Loading>\n                    </span>\n                    <span className={classes.symbol}>\n                      <Loading loading={isEmpty(wantTokenSymbol) && isBalanceLoading}>{wantTokenSymbol}</Loading>\n                    </span>\n                    {userProvider && (\n                      <span title=\"Add token address to wallet\">\n                        <AddCircleOutlineIcon className={classes.addTokenIcon} onClick={handleAddToken} fontSize=\"small\" />\n                      </span>\n                    )}\n                  </div>\n                  <div className={classes.balanceCardLabel}>AVAILABLE BALANCE</div>\n                </div>\n              </Card>\n              {!isEmpty(address) && !isEmpty(personalVaultAddress) && (\n                <MyStatement address={address} chain={`${CHAIN_ID}`} VAULT_ADDRESS={VAULT_ADDRESS} />\n              )}\n            </div>\n          </GridItem>\n        )}\n        <Modal className={classes.modal} open={isVisiable} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n          <Paper elevation={3}>\n            <MyVault\n              tokens={tokens}\n              address={address}\n              userProvider={userProvider}\n              VAULT_FACTORY_ADDRESS={VAULT_FACTORY_ADDRESS}\n              VAULT_FACTORY_ABI={VAULT_FACTORY_ABI}\n              vaultChangeHandle={(address, token) => {\n                setIsVisiable(false)\n                setPersonalVaultAddress(address)\n                setWantTokenForVault(token)\n              }}\n            />\n          </Paper>\n        </Modal>\n      </GridContainer>\n    </div>\n  )\n}\n\nexport default useVersionWapper(Usdr, 'usdr')\n"],"sourceRoot":""}