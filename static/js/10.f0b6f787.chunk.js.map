{"version":3,"sources":["hooks/usePriceProvider.js","../node_modules/lodash/flatten.js","../node_modules/@material-ui/icons/Build.js","../node_modules/@material-ui/icons/CompareArrows.js","hooks/useVaultFactory.js","components/MyVault/style.js","components/MyVault/index.jsx","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/index.ts","components/MyStatement/MyStatementForRiskOn.jsx","pages/Ethr/Deposit/style.js","pages/Ethr/Deposit/index.jsx","pages/Ethr/Withdraw/style.js","pages/Ethr/Withdraw/index.jsx","pages/Ethr/style.js","pages/Ethr/index.jsx","helpers/time-util.js","constants/cron.js","components/SimpleSelect/style.js","components/SimpleSelect/index.jsx","hooks/useRedeemFeeBps.js","hooks/useVault.js","helpers/swap-util.js","components/TokenItem/style.js","components/TokenItem/index.jsx","components/ApproveArray/style.js","components/ApproveArray/ApproveArrayV2.jsx","hooks/useVaultOnRisk.js"],"names":["i","Contract","ethers","usePriceProvider","params","userProvider","VAULT_ADDRESS","VAULT_ABI","PRICE_ORCALE_ABI","getPriceProvider","isEmpty","Error","vaultContract","priceProvider","then","priceOracleAddress","baseFlatten","require","module","exports","array","length","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","tokens","WETH_ADDRESS_MATIC","USDC_ADDRESS_MATIC","useVaultFactory","vaultFactoryAddress","VAULT_FACTORY_ABI","useState","vaultImplList","setVaultImplList","personalVault","setPersonalVault","adding","setAdding","loading","setLoading","userAddress","useUserAddress","getVaultImplList","useCallback","getVaultImplListByUser","vaultFactoryContract","requestArray","map","implAddress","Promise","all","arrayItem","index","vaultAddressMap","rs","ZERO_ADDRESS","hasCreate","type","token","address","resp","flatten","finally","setTimeout","addVault","connect","getSigner","createNewVault","tx","wait","deleteVault","deleteVaultAddressMapForDebug","useEffect","componentsStyle","template","display","alignItems","padding","borderRadius","background","cursor","vault","vaultTitle","textAlign","height","icon","width","button","marginTop","logo","checked","border","tokenInfo","flex","name","marginLeft","input","maxWidth","setting","position","right","top","useStyles","makeStyles","styles","MyVault","props","vaultChangeHandle","VAULT_FACTORY_ADDRESS","classes","push","useHistory","vaults","filter","includes","matchItem","find","GridContainer","spacing","GridItem","md","className","style","color","onClick","LoadingComponent","item","key","alt","src","Button","startIcon","Symbol","iterator","asyncIterator","useIsomorphicLayoutEffect","window","document","useLayoutEffect","InitialAsyncState","status","result","undefined","error","InitialAsyncLoadingState","noop","DefaultOptions","initialState","options","executeOnMount","executeOnUpdate","_asyncState","setResult","setError","onSuccess","onError","useAsyncInternal","asyncFunction","normalizedOptions","normalizeOptions","currentParams","setCurrentParams","AsyncState","setValue","reset","merge","state","set","useAsyncState","isMounted","ref","useRef","current","useIsMounted","CurrentPromise","promise","get","is","useCurrentPromise","shouldHandlePromise","p","getLatestExecuteAsyncOperation","t","useGetter","args","isCurrent","executeAsyncOperationMemo","isMounting","execute","currentPromise","useAsync","BigNumber","MyStatementForRiskOn","chain","wantTokenSymbol","personalVaultAddress","UNISWAPV3_RISK_ON_VAULT","UNISWAPV3_RISK_ON_HELPER","isUSDi","optionForLineChart","setOptionForLineChart","aaveOutstandingLoanArray","getDataByType","CHAIN_ID","aaveCollateralArray","aaveHealthRatioArray","uniswapPositionValueArray","profitArray","usePersonalData","dataSource","baseInfo","useVaultOnRisk","netMarketMakingAmount","estimatedTotalAssets","wantInfo","borrowInfo","wantTokenDecimals","from","borrowTokenDecimals","console","log","option1","getLineEchartOpt","date","balance","format","xAxis","axisTick","alignWithLabel","cardProps","title","tip","Tooltip","tooltip","placement","fontSize","content","numeral","toFixed","TOKEN_DISPLAY_DECIMALS","ETHI_DISPLAY_DECIMALS","unit","isAPY","xs","sm","lg","Card","lineChart","loadingOption","message","option","minHeight","container","modal","justifyContent","modalBody","depositContainer","borderTopLeftRadius","borderTopRightRadius","estimateContainer","borderBottomLeftRadius","borderBottomRightRadius","estimateText","margin","estimateBalanceTitle","estimateBalanceNum","float","footerContainer","tokenInputWrapper","marginBottom","inputLabelWrapper","depositComfirmArea","tokenName","tokenLogo","marginRight","flexText","ModalTokenLogo","labelToolTipIcon","depositModal","backgroundColor","root","paddingTop","subTitle","steps","Deposit","ethBalance","ethDecimals","ethiDecimals","ETH_ADDRESS","isBalanceLoading","minimumInvestmentAmount","dispatch","useDispatch","ethValue","setEthValue","mintGasLimit","setMintGasLimit","gasPriceCurrent","setGasPriceCurrent","isLoading","setIsLoading","isOpenEstimateModal","setIsOpenEstimateModal","estimateVaultBuffValue","setEstimateVaultBuffValue","loadingTimer","nextRebaseTime","getLastPossibleRebaseTime","getGasFee","gasPrice","parseInt","toString","add","mul","isValidValue","decimals","replace","isNaN","Number","nextValue","BN","nextFromValue","multipliedBy","pow","lte","indexOf","lt","sub","diposit","clearTimeout","warmDialog","open","amount","signer","nVaultWithUser","isSuccess","extendObj","isNumber","MULTIPLE_OF_GAS","estimateGas","mint","gas","gasLimit","Math","ceil","maxGasLimit","MAX_GAS_LIMIT","catch","errorMsg","errorTextOutput","isEs","isAd","isRp","isDistributing","isLessThanMinValue","BN_18","estimateMint","debounce","cancel","send","timer","setInterval","clearInterval","estimatedUsedValue","isLogin","isValid","CustomTextField","onChange","event","target","placeholder","maxEndAdornment","onMaxClick","v","maxValue","formatBalance","gt","showAll","isUndefined","disabled","Modal","aria-labelledby","aria-describedby","Paper","elevation","alternativeLabel","activeStep","connector","Step","StepIconComponent","BocStepIcon","Typography","variant","gutterBottom","fontWeight","div","moment","CircularProgress","switchBar","img","switchBase","switchChecked","swapBody","outline","withdrawContainer","outputContainer","receiveTokenItem","settingBtn","lineHeight","settingTitle","letterSpacing","settingItem","settingItemLabel","minWidth","mutedLabel","maxLossFormCtrl","exchanged","paddingLeft","left","transform","slippageItem","slippageInput","widthdrawLoadingPaper","estimateItem","popover","popoverTitle","WITHDRAW_EXCHANGE_THRESHOLD","Withdraw","exchangeManager","ethiBalance","EXCHANGE_AGGREGATOR_ABI","EXCHANGE_ADAPTER_ABI","reloadBalance","toValue","setToValue","allowMaxLoss","setAllowMaxLoss","slipper","setSlipper","estimateWithdrawArray","setEstimateWithdrawArray","isEstimate","setIsEstimate","isWithdrawLoading","setIsWithdrawLoading","currentStep","setCurrentStep","withdrawError","setWithdrawError","burnTokens","setBurnTokens","isShowZipModal","setIsShowZipModal","pegTokenPrice","setPegTokenPrice","redeemFeeBps","useRedeemFeeBps","redeemFeeBpsPercent","toNumber","estimateWithdraw","usdValue","allowMaxLossValue","parseFloat","vaultContractWithSigner","callStatic","burn","amounts","compact","tokenAddress","nextEstimateWithdrawArray","isMaxLoss","isLossMuch","isExchangeFail","handleBurn","a","b","c","el","valueInEth","amountsInEth","getBalance","contract","IERC20_ABI","balanceOf","nextBurnTokens","some","withdraw","withdrawTimeStart","Date","now","withdrawValidFinish","preWithdrawGetCoins","getSwapInfoFinish","estimateGasFinish","withdrawFinish","withdrawTransationFinish","isValidToValue","isValidAllowLoss","isValidSlipper","events","szjyPercents","szjy","totalTime","ytqPercents","ytq","hqdhljPercents","hqdhlj","egPercents","eg","qkPercents","qk","swcPercents","swc","table","valid","preWithdraw","getSwapPath","transaction","imgError","e","evn","srcElement","nextToValue","handleMaxClick","nextEthiBalance","isValidToValueFlag","isValidAllowLossFlag","getPegTokenPrice","popupId","popupState","viewBox","fill","xmlns","bindTrigger","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Popover","paper","bindPopover","anchorOrigin","vertical","horizontal","transformOrigin","Box","selectorlWrapper","paddingBottom","addToken","verticalAlign","ApproveArrayV2","isEthi","slippage","onSlippageChange","handleClose","theme","zIndex","center","breakpoints","down","wrapper","wrapperMobile","deposit","symbol","gradientText","footer","centerItem","balanceCard","check","balanceCardValue","balanceCardLabel","addTokenIcon","scanToken","hidden","brand","subtitle","main","mainRaised","link","textDecoration","textCenter","radioUnchecked","radioChecked","radioRoot","radio","investCard","overflow","tableCell","boxShadow","stepContainer","stepItem","tabsRoot","tabsIndicator","tabTextColor","tabRoot","detailWrapper","slider","text","spliter","bottom","transition","useVersionWapper","isLayoutSm","useMediaQuery","setPersonalVaultAddress","isVisiable","setIsVisiable","ETHI_ADDRESS","VAULT_BUFFER_ADDRESS","VAULT_BUFFER_ABI","setEthBalance","setEthiBalance","setEthiDecimals","ETH_DECIMALS","beforeTotalValue","setBeforeTotalValue","totalValue","setTotalValue","vaultBufferBalance","setVaultBufferBalance","vaultBufferDecimals","setVaultBufferDecimals","setIsBalanceLoading","useSelector","investReducer","currentTab","setCurrent","tab","loadCoinsBalance","setCurrentTab","useVault","loadBalance","vaultBufferContract","ethiContract","handleMint","eventArgs","block","last","getTransaction","loadTotalAssets","afterTotalValue","eq","on","off","listener","totalSupply","List","ListItem","classNames","INVEST_TAB","account","ListItemIcon","ListItemText","primary","balanceCardItem","tz","min","parser","parseExpression","next","getTime","selectWrapper","selectTrigger","paddingRight","triggerLabelWrapper","triggerLabel","caret","expandLess","selectPop","selectPopVisible","selectItem","optImg","optMultiImgWrapper","whiteSpace","optMultiImg","optLabel","Select","popVisible","setPopVisible","selectedOpt","opt","ClickAwayListener","onClickAway","isArray","label","selectActiveItem","handlePopSelect","reload","setExchangeManager","setDecimals","totalAsset","setTotalAsset","rebaseThreshold","setRebaseThreshold","underlyingUnitsPerShare","setUnderlyingUnitsPerShare","setMinimumInvestmentAmount","queryBaseInfo","totalAssets","totalDebt","fetchUnderlyingUnitsPerShare","updateRebaseThreshold","updateMinimumInvestmentAmount","SUPPORTS","getProtocolsFromBestRouterFor1inchV4","bestRoute","nextProtocols","getProtocolsFromBestRouterForParaswap","reduce","element","approveContainer","maxHeight","overflowY","approveItemWrapper","success","swappingContainer","swapSuccessContainer","swapErrorContainer","approveItem","approveButton","balanceText","errorText","errorContainer","successContainer","isSwappingContainer","reciveContainer","slippageTitlte","estimateTitle","estimateBalance","flexDirection","tokenList","arrow","buttonGroup","okWrapper","okButton","cancelButton","swapError","textOverflow","animation","reloadIcon","sycIndex","BN_0","forwardRef","receiveToken","exchangePlatformAdapters","receiveTokenDecimals","onStaticCallFinish","isReload","setIsReload","setBalance","allowances","setAllowances","exclude","setExclude","swapInfo","setSwapInfo","isSwapInfoFetching","setIsSwapInfoFetching","isStaticCalling","setIsStaticCalling","done","setDone","retryTimes","setRetryTimes","isApproving","setIsApproving","isReciveToken","isFetching","isOverMaxRetry","groupCollapsed","groupEnd","resetState","isApproveEnough","staticCall","constract","constractWithSigner","bestSwapInfo","platform","method","encodeExchangeArgs","info","swap","isString","func","getProtocolsFromBestRouter","oldPlatform","newPlatform","concat","nextExclude","approve","isNil","contractWithUser","allowance","allowanceAmount","WETH_ADDRESS","increaseAllowance","code","reject","isSwapError","isErrorValue","nextFromValueString","isEmptyValue","handleInputChange","num","nextAllowance","nextBalance","nextDecimals","queryBestSwapInfo","swapAmount","fromToken","toToken","fromTokenConstract","toTokenConstract","nextExchangeExtraParams","assign","EXCHANGE_EXTRA_PARAMS","testAdapter","oneInchV4","paraswap","excludeProtocols","uniq","excludeDEXS","split","join","getBestSwapInfo","ORACLE_ADDITIONAL_SLIPPAGE","srcToken","dstToken","receiver","estimateWithValue","nextSwapInfo","isGetSwapInfoSuccess","isSwapSuccess","isValidSlippageValue","isApproveEnoughValue","useImperativeHandle","InputProps","startAdornment","toTokenAmount","refArray","setExchangePlatformAdapters","USDT_ADDRESS","setReceiveToken","setSlippage","isSwapping","setIsSwapping","setCount","callStateArray","setCallStateArray","swapInfoArray","someFetching","isValidSlippage","someErrorValue","receiveAmount","noNeedSwap","size","first","getExchangePlatformAdapters","exchangeAggregator","getExchangeAdapters","adapters","_exchangeAdapters","exchangeAdapters","identifier","selectOptions","decimal","BN_6","USDC_ADDRESS","DAI_ADDRESS","receiveTokenAmount","approveAll","enough","batchSwap","nextSwapArray","data","swapDescription","contractWithSigner","onChildStateChange","random","bool","nextArray","allFinish","every","someError","exchangeManagerContract","getAdapters","SimpleSelect","onReceiveChange","setBaseInfo","uniswapV3RiskOnHelper","helperAddress","helperContract","borrowToken","tokenContract","wantToken","getCurrentBorrow","getTotalCollateralTokenAmount","depositTo3rdPoolTotalAssets","currentBorrow","totalCollateralTokenAmount","calcCanonicalAssetValue","currentBorrowWithCanonical","nextBaseInfo"],"mappings":"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","file":"static/js/10.f0b6f787.chunk.js","sourcesContent":["// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\nconst { Contract } = ethers\n\nconst usePriceProvider = params => {\n  const { userProvider, VAULT_ADDRESS, VAULT_ABI, PRICE_ORCALE_ABI } = params\n\n  const getPriceProvider = async () => {\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS)) {\n      throw new Error('userProvider or VAULT_ADDRESS is empty')\n    }\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    return vaultContract.priceProvider().then(priceOracleAddress => {\n      const priceOracleContract = new Contract(priceOracleAddress, PRICE_ORCALE_ABI, userProvider)\n      return priceOracleContract\n    })\n  }\n\n  return {\n    getPriceProvider\n  }\n}\n\nexport default usePriceProvider\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z\"\n}), 'Build');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\"\n}), 'CompareArrows');\n\nexports.default = _default;","import { useCallback, useEffect, useState } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport map from 'lodash/map'\nimport isEmpty from 'lodash/isEmpty'\nimport flatten from 'lodash/flatten'\n\n// === Hooks === //\nimport useUserAddress from '@/hooks/useUserAddress'\n\n// === Constants === //\nimport { USDC_ADDRESS_MATIC, WETH_ADDRESS_MATIC, ZERO_ADDRESS } from '@/constants/tokens'\n\nconst { Contract } = ethers\n\nconst tokens = [WETH_ADDRESS_MATIC, USDC_ADDRESS_MATIC]\n\nconst useVaultFactory = (vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider) => {\n  const [vaultImplList, setVaultImplList] = useState([])\n  const [personalVault, setPersonalVault] = useState([])\n  const [adding, setAdding] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const userAddress = useUserAddress(userProvider)\n\n  const getVaultImplList = useCallback(() => {\n    if (isEmpty(vaultFactoryAddress) || isEmpty(userProvider)) return\n    const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n    vaultFactoryContract.getVaultImplList().then(setVaultImplList)\n  }, [vaultFactoryAddress, userProvider, VAULT_FACTORY_ABI])\n\n  const getVaultImplListByUser = useCallback(() => {\n    if (isEmpty(vaultFactoryAddress) || isEmpty(userProvider) || isEmpty(vaultImplList) || isEmpty(userAddress)) return\n    setLoading(true)\n    const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n    const requestArray = map(vaultImplList, implAddress => {\n      return Promise.all(\n        map(tokens, (arrayItem, index) => {\n          return vaultFactoryContract.vaultAddressMap(userAddress, implAddress, index).then(rs => {\n            if (rs === ZERO_ADDRESS) return { hasCreate: false, type: implAddress, token: arrayItem }\n            return {\n              address: rs,\n              type: implAddress,\n              hasCreate: true,\n              token: arrayItem\n            }\n          })\n        })\n      )\n    })\n    Promise.all(requestArray)\n      .then(resp => {\n        setPersonalVault(flatten(resp))\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setLoading(false)\n        }, 3000)\n      })\n  }, [userAddress, vaultFactoryAddress, userProvider, vaultImplList, VAULT_FACTORY_ABI])\n\n  const addVault = useCallback(\n    async (token, type) => {\n      setAdding(true)\n      const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n      await vaultFactoryContract\n        .connect(userProvider.getSigner())\n        .createNewVault(token, type)\n        .then(tx => tx.wait())\n        .then(getVaultImplListByUser)\n        .finally(() => {\n          setAdding(false)\n        })\n    },\n    [vaultFactoryAddress, userProvider, getVaultImplListByUser, VAULT_FACTORY_ABI]\n  )\n\n  const deleteVault = useCallback(\n    async (type, index) => {\n      setAdding(true)\n      const vaultFactoryContract = new Contract(vaultFactoryAddress, VAULT_FACTORY_ABI, userProvider)\n      vaultFactoryContract\n        .connect(userProvider.getSigner())\n        .deleteVaultAddressMapForDebug(userAddress, type, index)\n        .then(tx => tx.wait())\n        .then(getVaultImplListByUser)\n        .finally(() => {\n          setAdding(false)\n        })\n    },\n    [vaultFactoryAddress, getVaultImplListByUser, userAddress, userProvider, VAULT_FACTORY_ABI]\n  )\n\n  useEffect(getVaultImplList, [getVaultImplList])\n\n  useEffect(getVaultImplListByUser, [getVaultImplListByUser])\n\n  return {\n    vaultFactoryAddress,\n    vaultImplList,\n    personalVault,\n    adding,\n    loading,\n    // functions\n    addVault,\n    deleteVault\n  }\n}\n\nexport default useVaultFactory\n","const componentsStyle = () => ({\n  template: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)',\n    cursor: 'pointer'\n  },\n  vault: {\n    padding: '2rem',\n    borderRadius: '1rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  vaultTitle: {\n    textAlign: 'center',\n    height: '203px'\n  },\n  icon: {\n    width: '100%',\n    borderRadius: '50%'\n  },\n  button: {\n    width: '100%',\n    marginTop: '1rem'\n  },\n  logo: {\n    width: '30px',\n    borderRadius: '50%'\n  },\n  checked: {\n    border: '2px solid #A68EFD'\n  },\n  token: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '1rem'\n  },\n  tokenInfo: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  name: {\n    marginLeft: '1rem'\n  },\n  input: {\n    maxWidth: '14rem'\n  },\n  setting: {\n    position: 'absolute',\n    right: '0rem',\n    top: '-0.5rem',\n    cursor: 'pointer'\n  }\n})\n\nexport default componentsStyle\n","import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport BuildIcon from '@material-ui/icons/Build'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows'\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined'\nimport LoadingComponent from '@/components/LoadingComponent'\n\n// === Hooks === //\nimport useVaultFactory from '@/hooks/useVaultFactory'\nimport { useHistory } from 'react-router-dom'\n\n// === Utils === //\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport filter from 'lodash/filter'\n\n// === Styles === //\nimport styles from './style'\nimport { isEmpty } from 'lodash'\n\nconst useStyles = makeStyles(styles)\n\nconst MyVault = props => {\n  const { vaultChangeHandle, userProvider, VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, tokens } = props\n  const { personalVault, addVault, loading } = useVaultFactory(VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, userProvider)\n  const classes = useStyles()\n  const { push } = useHistory()\n\n  const vaults = filter(personalVault, i => tokens.includes(i.token))\n  // only has 1 vault currently. set length = 2 makes page beatiful more.\n  vaults.length = 2\n\n  useEffect(() => {\n    const matchItem = find(vaults, { hasCreate: true })\n    if (!isEmpty(matchItem)) {\n      vaultChangeHandle(matchItem.address, matchItem.token)\n    }\n  }, [vaults, vaultChangeHandle])\n\n  return (\n    <GridContainer spacing={2}>\n      <GridItem md={12}>\n        <div className={classes.setting}>\n          <ExitToAppOutlinedIcon style={{ color: '#A0A0A0' }} onClick={() => push('/usdi')} />\n        </div>\n      </GridItem>\n      <LoadingComponent loading={loading}>\n        {map(vaults, (item, index) => {\n          return (\n            <GridItem md={6} key={index}>\n              {isEmpty(item) ? (\n                <div className={classes.vault}>\n                  <div className={classes.vaultTitle}>\n                    <img alt=\"\" className={classes.icon} src={`https://bankofchain.io/logo256.png`} />\n                  </div>\n\n                  <Button color=\"colorfull\" startIcon={<BuildIcon />} className={classes.button}>\n                    on Building...\n                  </Button>\n                </div>\n              ) : (\n                <div className={classes.vault}>\n                  <div className={classes.vaultTitle}>\n                    <img alt=\"\" className={classes.icon} src={`https://bankofchain.io/images/${item.token}.png`} />\n                  </div>\n                  {item.hasCreate ? (\n                    <Button\n                      color=\"colorfull\"\n                      startIcon={<CompareArrowsIcon />}\n                      className={classes.button}\n                      onClick={() => vaultChangeHandle(item.address, item.token)}\n                    >\n                      Deposit\n                    </Button>\n                  ) : (\n                    <Button\n                      color=\"colorfull\"\n                      startIcon={<AddCircleOutlineIcon />}\n                      className={classes.button}\n                      onClick={() => addVault(item.token, item.type)}\n                    >\n                      Create\n                    </Button>\n                  )}\n                </div>\n              )}\n            </GridItem>\n          )\n        })}\n      </LoadingComponent>\n    </GridContainer>\n  )\n}\n\nexport default MyVault\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && !check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\n\n// See https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect;\n\n// Assign current value to a ref and returns a stable getter to get the latest value.\n// This way we are sure to always get latest value provided to hook and\n// avoid weird issues due to closures capturing stale values...\n// See https://github.com/facebook/react/issues/16956\n// See https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nconst useGetter = <T>(t: T) => {\n  const ref = useRef(t);\n  useIsomorphicLayoutEffect(() => {\n    ref.current = t;\n  });\n  return useCallback(() => ref.current, [ref]);\n};\n\ntype UnknownResult = unknown;\n\n// Convenient to avoid declaring the type of args, which may help reduce type boilerplate\n//type UnknownArgs = unknown[];\n// TODO unfortunately it seems required for now if we want default param to work...\n// See https://twitter.com/sebastienlorber/status/1170003594894106624\ntype UnknownArgs = any[];\n\nexport type AsyncStateStatus =\n  | 'not-requested'\n  | 'loading'\n  | 'success'\n  | 'error';\n\nexport type AsyncState<R> = {\n  status: AsyncStateStatus;\n  loading: boolean;\n  error: Error | undefined;\n  result: R | undefined;\n};\ntype SetLoading<R> = (asyncState: AsyncState<R>) => AsyncState<R>;\ntype SetResult<R> = (result: R, asyncState: AsyncState<R>) => AsyncState<R>;\ntype SetError<R> = (error: Error, asyncState: AsyncState<R>) => AsyncState<R>;\n\ntype MaybePromise<T> = Promise<T> | T;\n\ntype PromiseCallbackOptions = {\n  // Permit to know if the success/error belongs to the last async call\n  isCurrent: () => boolean;\n\n  // TODO this can be convenient but need some refactor\n  // params: Args;\n};\n\nexport type UseAsyncOptionsNormalized<R> = {\n  initialState: (options?: UseAsyncOptionsNormalized<R>) => AsyncState<R>;\n  executeOnMount: boolean;\n  executeOnUpdate: boolean;\n  setLoading: SetLoading<R>;\n  setResult: SetResult<R>;\n  setError: SetError<R>;\n  onSuccess: (r: R, options: PromiseCallbackOptions) => void;\n  onError: (e: Error, options: PromiseCallbackOptions) => void;\n};\nexport type UseAsyncOptions<R> =\n  | Partial<UseAsyncOptionsNormalized<R>>\n  | undefined\n  | null;\n\nconst InitialAsyncState: AsyncState<any> = {\n  status: 'not-requested',\n  loading: false,\n  result: undefined,\n  error: undefined,\n};\n\nconst InitialAsyncLoadingState: AsyncState<any> = {\n  status: 'loading',\n  loading: true,\n  result: undefined,\n  error: undefined,\n};\n\nconst defaultSetLoading: SetLoading<any> = _asyncState =>\n  InitialAsyncLoadingState;\n\nconst defaultSetResult: SetResult<any> = (result, _asyncState) => ({\n  status: 'success',\n  loading: false,\n  result: result,\n  error: undefined,\n});\n\nconst defaultSetError: SetError<any> = (error, _asyncState) => ({\n  status: 'error',\n  loading: false,\n  result: undefined,\n  error: error,\n});\n\nconst noop = () => {};\n\nconst DefaultOptions: UseAsyncOptionsNormalized<any> = {\n  initialState: options =>\n    options && options.executeOnMount\n      ? InitialAsyncLoadingState\n      : InitialAsyncState,\n  executeOnMount: true,\n  executeOnUpdate: true,\n  setLoading: defaultSetLoading,\n  setResult: defaultSetResult,\n  setError: defaultSetError,\n  onSuccess: noop,\n  onError: noop,\n};\n\nconst normalizeOptions = <R>(\n  options: UseAsyncOptions<R>\n): UseAsyncOptionsNormalized<R> => ({\n  ...DefaultOptions,\n  ...options,\n});\n\ntype UseAsyncStateResult<R> = {\n  value: AsyncState<R>;\n  set: Dispatch<SetStateAction<AsyncState<R>>>;\n  merge: (value: Partial<AsyncState<R>>) => void;\n  reset: () => void;\n  setLoading: () => void;\n  setResult: (r: R) => void;\n  setError: (e: Error) => void;\n};\nconst useAsyncState = <R extends {}>(\n  options: UseAsyncOptionsNormalized<R>\n): UseAsyncStateResult<R> => {\n  const [value, setValue] = useState<AsyncState<R>>(() =>\n    options.initialState(options)\n  );\n\n  const reset = useCallback(() => setValue(options.initialState(options)), [\n    setValue,\n    options,\n  ]);\n\n  const setLoading = useCallback(() => setValue(options.setLoading(value)), [\n    value,\n    setValue,\n  ]);\n  const setResult = useCallback(\n    (result: R) => setValue(options.setResult(result, value)),\n    [value, setValue]\n  );\n\n  const setError = useCallback(\n    (error: Error) => setValue(options.setError(error, value)),\n    [value, setValue]\n  );\n\n  const merge = useCallback(\n    (state: Partial<AsyncState<R>>) =>\n      setValue({\n        ...value,\n        ...state,\n      }),\n    [value, setValue]\n  );\n\n  return {\n    value,\n    set: setValue,\n    merge,\n    reset,\n    setLoading,\n    setResult,\n    setError,\n  };\n};\n\nconst useIsMounted = (): (() => boolean) => {\n  const ref = useRef<boolean>(false);\n  useEffect(() => {\n    ref.current = true;\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n  return () => ref.current;\n};\n\ntype UseCurrentPromiseReturn<R> = {\n  set: (promise: Promise<R>) => void;\n  get: () => Promise<R> | null;\n  is: (promise: Promise<R>) => boolean;\n};\nconst useCurrentPromise = <R>(): UseCurrentPromiseReturn<R> => {\n  const ref = useRef<Promise<R> | null>(null);\n  return {\n    set: promise => (ref.current = promise),\n    get: () => ref.current,\n    is: promise => ref.current === promise,\n  };\n};\n\nexport type UseAsyncReturn<\n  R = UnknownResult,\n  Args extends any[] = UnknownArgs\n> = AsyncState<R> & {\n  set: (value: AsyncState<R>) => void;\n  merge: (value: Partial<AsyncState<R>>) => void;\n  reset: () => void;\n  execute: (...args: Args) => Promise<R>;\n  currentPromise: Promise<R> | null;\n  currentParams: Args | null;\n};\n\n// Relaxed interface which accept both async and sync functions\n// Accepting sync function is convenient for useAsyncCallback\nconst useAsyncInternal = <R = UnknownResult, Args extends any[] = UnknownArgs>(\n  asyncFunction: (...args: Args) => MaybePromise<R>,\n  params: Args,\n  options?: UseAsyncOptions<R>\n): UseAsyncReturn<R, Args> => {\n  // Fallback missing params, only for JS users forgetting the deps array, to prevent infinite loops\n  // https://github.com/slorber/react-async-hook/issues/27\n  // @ts-ignore\n  !params && (params = []);\n\n  const normalizedOptions = normalizeOptions<R>(options);\n\n  const [currentParams, setCurrentParams] = useState<Args | null>(null);\n\n  const AsyncState = useAsyncState<R>(normalizedOptions);\n\n  const isMounted = useIsMounted();\n  const CurrentPromise = useCurrentPromise<R>();\n\n  // We only want to handle the promise result/error\n  // if it is the last operation and the comp is still mounted\n  const shouldHandlePromise = (p: Promise<R>) =>\n    isMounted() && CurrentPromise.is(p);\n\n  const executeAsyncOperation = (...args: Args): Promise<R> => {\n    // async ensures errors thrown synchronously are caught (ie, bug when formatting api payloads)\n    // async ensures promise-like and synchronous functions are handled correctly too\n    // see https://github.com/slorber/react-async-hook/issues/24\n    const promise: Promise<R> = (async () => asyncFunction(...args))();\n    setCurrentParams(args);\n    CurrentPromise.set(promise);\n    AsyncState.setLoading();\n    promise.then(\n      result => {\n        if (shouldHandlePromise(promise)) {\n          AsyncState.setResult(result);\n        }\n        normalizedOptions.onSuccess(result, {\n          isCurrent: () => CurrentPromise.is(promise),\n        });\n      },\n      error => {\n        if (shouldHandlePromise(promise)) {\n          AsyncState.setError(error);\n        }\n        normalizedOptions.onError(error, {\n          isCurrent: () => CurrentPromise.is(promise),\n        });\n      }\n    );\n    return promise;\n  };\n\n  const getLatestExecuteAsyncOperation = useGetter(executeAsyncOperation);\n\n  const executeAsyncOperationMemo: (...args: Args) => Promise<R> = useCallback(\n    (...args) => getLatestExecuteAsyncOperation()(...args),\n    [getLatestExecuteAsyncOperation]\n  );\n\n  // Keep this outside useEffect, because inside isMounted()\n  // will be true as the component is already mounted when it's run\n  const isMounting = !isMounted();\n  useEffect(() => {\n    const execute = () => getLatestExecuteAsyncOperation()(...params);\n    isMounting && normalizedOptions.executeOnMount && execute();\n    !isMounting && normalizedOptions.executeOnUpdate && execute();\n  }, params);\n\n  return {\n    ...AsyncState.value,\n    set: AsyncState.set,\n    merge: AsyncState.merge,\n    reset: AsyncState.reset,\n    execute: executeAsyncOperationMemo,\n    currentPromise: CurrentPromise.get(),\n    currentParams,\n  };\n};\n\n// override to allow passing an async function with no args:\n// gives more user-freedom to create an inline async function\nexport function useAsync<R = UnknownResult, Args extends any[] = UnknownArgs>(\n  asyncFunction: () => Promise<R>,\n  params: Args,\n  options?: UseAsyncOptions<R>\n): UseAsyncReturn<R, Args>;\nexport function useAsync<R = UnknownResult, Args extends any[] = UnknownArgs>(\n  asyncFunction: (...args: Args) => Promise<R>,\n  params: Args,\n  options?: UseAsyncOptions<R>\n): UseAsyncReturn<R, Args>;\n\nexport function useAsync<R = UnknownResult, Args extends any[] = UnknownArgs>(\n  asyncFunction: (...args: Args) => Promise<R>,\n  params: Args,\n  options?: UseAsyncOptions<R>\n): UseAsyncReturn<R, Args> {\n  return useAsyncInternal(asyncFunction, params, options);\n}\n\ntype AddArg<H, T extends any[]> = ((h: H, ...t: T) => void) extends ((\n  ...r: infer R\n) => void)\n  ? R\n  : never;\n\nexport const useAsyncAbortable = <\n  R = UnknownResult,\n  Args extends any[] = UnknownArgs\n>(\n  asyncFunction: (...args: AddArg<AbortSignal, Args>) => Promise<R>,\n  params: Args,\n  options?: UseAsyncOptions<R>\n): UseAsyncReturn<R, Args> => {\n  const abortControllerRef = useRef<AbortController>();\n\n  // Wrap the original async function and enhance it with abortion login\n  const asyncFunctionWrapper: (...args: Args) => Promise<R> = async (\n    ...p: Args\n  ) => {\n    // Cancel previous async call\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    // Create/store new abort controller for next async call\n    const abortController = new AbortController();\n    abortControllerRef.current = abortController;\n\n    try {\n      // @ts-ignore // TODO how to type this?\n      return await asyncFunction(abortController.signal, ...p);\n    } finally {\n      // Unset abortController ref if response is already there,\n      // as it's not needed anymore to try to abort it (would it be no-op?)\n      if (abortControllerRef.current === abortController) {\n        abortControllerRef.current = undefined;\n      }\n    }\n  };\n\n  return useAsync(asyncFunctionWrapper, params, options);\n};\n\n// keep compat with TS < 3.5\ntype LegacyOmit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n// Some options are not allowed for useAsyncCallback\nexport type UseAsyncCallbackOptions<R> =\n  | LegacyOmit<\n      Partial<UseAsyncOptionsNormalized<R>>,\n      'executeOnMount' | 'executeOnUpdate' | 'initialState'\n    >\n  | undefined\n  | null;\n\nexport const useAsyncCallback = <\n  R = UnknownResult,\n  Args extends any[] = UnknownArgs\n>(\n  asyncFunction: (...args: Args) => MaybePromise<R>,\n  options?: UseAsyncCallbackOptions<R>\n): UseAsyncReturn<R, Args> => {\n  return useAsyncInternal(\n    asyncFunction,\n    // Hacky but in such case we don't need the params,\n    // because async function is only executed manually\n    [] as any,\n    {\n      ...options,\n      executeOnMount: false,\n      executeOnUpdate: false,\n    }\n  );\n};\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@/components/Card'\nimport { LineEchart } from '@/components/Echarts'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// === Services === //\nimport getLineEchartOpt from '@/components/Echarts/options/line/getLineEchartOpt'\nimport { getDataByType } from '@/services/api-service'\n\n// === Hooks === //\nimport usePersonalData from '@/hooks/usePersonalData'\nimport useVaultOnRisk from '@/hooks/useVaultOnRisk'\nimport { useAsync } from 'react-async-hook'\n\n// === Utils === //\nimport numeral from 'numeral'\nimport map from 'lodash/map'\nimport { toFixed } from '@/helpers/number-format'\nimport * as ethers from 'ethers'\n\n// === Constants === //\nimport { ETHI_DISPLAY_DECIMALS } from '@/constants/ethi'\nimport { TOKEN_DISPLAY_DECIMALS } from '@/constants/vault'\nimport { CHAIN_ID } from '@/constants'\n\n// === Styles === //\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst MyStatementForRiskOn = props => {\n  const {\n    address,\n    type,\n    chain,\n    userProvider,\n    wantTokenSymbol,\n    VAULT_FACTORY_ADDRESS,\n    VAULT_FACTORY_ABI,\n    personalVaultAddress,\n    UNISWAPV3_RISK_ON_VAULT,\n    UNISWAPV3_RISK_ON_HELPER\n  } = props\n\n  const isUSDi = type === 'USDi'\n  const classes = useStyles()\n  const [optionForLineChart, setOptionForLineChart] = useState({})\n\n  // api datas fetching\n  const aaveOutstandingLoanArray = useAsync(() => getDataByType(CHAIN_ID, personalVaultAddress, 'aave-outstanding-loan'), [personalVaultAddress])\n  const aaveCollateralArray = useAsync(() => getDataByType(CHAIN_ID, personalVaultAddress, 'aave-collateral'), [personalVaultAddress])\n  const aaveHealthRatioArray = useAsync(() => getDataByType(CHAIN_ID, personalVaultAddress, 'aave-health-ratio'), [personalVaultAddress])\n  const uniswapPositionValueArray = useAsync(() => getDataByType(CHAIN_ID, personalVaultAddress, 'uniswap-position-value'), [personalVaultAddress])\n  const profitArray = useAsync(() => getDataByType(CHAIN_ID, personalVaultAddress, 'profit'), [personalVaultAddress])\n  const { dataSource, loading } = usePersonalData(chain, type, address, type)\n  const { baseInfo } = useVaultOnRisk(\n    VAULT_FACTORY_ADDRESS,\n    VAULT_FACTORY_ABI,\n    personalVaultAddress,\n    UNISWAPV3_RISK_ON_VAULT,\n    UNISWAPV3_RISK_ON_HELPER,\n    userProvider\n  )\n\n  const { netMarketMakingAmount, result, estimatedTotalAssets, wantInfo = {}, borrowInfo = {} } = baseInfo\n  const { wantTokenDecimals = BigNumber.from(0) } = wantInfo\n  const { borrowTokenDecimals = BigNumber.from(0) } = borrowInfo\n\n  console.log('borrowTokenDecimals=', borrowTokenDecimals)\n  useEffect(() => {\n    const tvls = [\n      {\n        date: '2022-10-11',\n        balance: '1'\n      },\n      {\n        date: '2022-10-12',\n        balance: '10'\n      },\n      {\n        date: '2022-10-13',\n        balance: '10'\n      },\n      {\n        date: '2022-10-14',\n        balance: '20'\n      },\n      {\n        date: '2022-10-15',\n        balance: '20'\n      },\n      {\n        date: '2022-10-16',\n        balance: '20'\n      },\n      {\n        date: '2022-10-17',\n        balance: '30'\n      }\n    ]\n    const option1 = getLineEchartOpt(tvls, 'balance', dataSource.token, {\n      format: 'MM-DD',\n      xAxis: {\n        axisTick: {\n          alignWithLabel: true\n        }\n      }\n    })\n    setOptionForLineChart(option1)\n  }, [dataSource, address])\n\n  const cardProps = [\n    {\n      title: 'Net Deposit',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Total profits from BoC that are withdrawable and cumulative.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed(netMarketMakingAmount, wantTokenDecimals, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      unit: wantTokenSymbol\n    },\n    {\n      title: 'Current Value',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past week.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed(estimatedTotalAssets, wantTokenDecimals, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      isAPY: true,\n      unit: wantTokenSymbol\n    },\n    {\n      title: 'Profit',\n      tip: (\n        <Tooltip\n          classes={{\n            tooltip: classes.tooltip\n          }}\n          placement=\"right\"\n          title={'Yield over the past month.'}\n        >\n          <InfoIcon style={{ fontSize: '1.375rem', color: 'rgba(255,255,255,0.45)' }} />\n        </Tooltip>\n      ),\n      content: numeral(toFixed(result, wantTokenDecimals, isUSDi ? TOKEN_DISPLAY_DECIMALS : ETHI_DISPLAY_DECIMALS)).format(\n        isUSDi ? '0,0.[00]' : '0,0.[0000]'\n      ),\n      isAPY: true,\n      unit: wantTokenSymbol\n    }\n  ]\n\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12} lg={12}>\n        <GridContainer>\n          {map(cardProps, (i, index) => {\n            return (\n              <GridItem key={index} xs={12} sm={12} md={4} lg={4}>\n                <Card loading={loading} {...i} />\n              </GridItem>\n            )\n          })}\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={aaveOutstandingLoanArray.loading || aaveCollateralArray.loading || aaveHealthRatioArray.loading}\n              title={\n                <span>\n                  AAVE Lines\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              {aaveOutstandingLoanArray.error || aaveCollateralArray.error || aaveHealthRatioArray.error ? (\n                <div>Error: {aaveOutstandingLoanArray?.error?.message}</div>\n              ) : (\n                <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n              )}\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={uniswapPositionValueArray.loading}\n              title={\n                <span>\n                  Uniswap Position Value\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              {uniswapPositionValueArray.error ? (\n                <div>Error: {uniswapPositionValueArray.error.message}</div>\n              ) : (\n                <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n              )}\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer className={classes.lineChart}>\n          <GridItem xs={12} sm={12} md={12} lg={12}>\n            <Card\n              loading={profitArray.loading}\n              title={\n                <span>\n                  Profits\n                  <Tooltip title={`Curve of daily change in the total ${isUSDi ? 'USDi' : 'ETHi'} held by the user.`}>\n                    <InfoIcon style={{ marginLeft: 8, fontSize: '1rem' }} />\n                  </Tooltip>\n                </span>\n              }\n              loadingOption={{\n                width: '100%',\n                height: '2rem'\n              }}\n            >\n              {profitArray.error ? (\n                <div>Error: {profitArray.error.message}</div>\n              ) : (\n                <LineEchart option={optionForLineChart} style={{ minHeight: '20rem' }} />\n              )}\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </GridItem>\n    </GridContainer>\n  )\n}\n\nexport default MyStatementForRiskOn\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  depositContainer: {\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem',\n    padding: '2.6875rem 2.25rem'\n  },\n  estimateContainer: {\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n    padding: '2.0625rem 2.6875rem'\n  },\n  estimateText: {\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  tokenInputWrapper: {\n    marginBottom: '16px'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  depositComfirmArea: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  flexText: {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  ModalTokenLogo: {\n    width: 25,\n    borderRadius: '50%',\n    margin: '0 8px'\n  },\n  labelToolTipIcon: {\n    fontSize: 16\n  },\n  depositModal: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem'\n  },\n  root: {\n    padding: '1.5rem 0'\n  },\n  item: {\n    paddingTop: '3rem'\n  },\n  subTitle: {\n    color: '#A68EFE'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport isUndefined from 'lodash/isUndefined'\nimport debounce from 'lodash/debounce'\nimport isEmpty from 'lodash/isEmpty'\nimport map from 'lodash/map'\nimport isNumber from 'lodash/isNumber'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport Step from '@material-ui/core/Step'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Typography from '@material-ui/core/Typography'\nimport Loading from '@/components/LoadingComponent'\n\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport CustomTextField from '@/components/CustomTextField'\nimport Button from '@/components/CustomButtons/Button'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\n\n// === Utils === //\nimport noop from 'lodash/noop'\nimport { getLastPossibleRebaseTime } from '@/helpers/time-util'\nimport { isAd, isEs, isRp, isDistributing, errorTextOutput, isLessThanMinValue } from '@/helpers/error-handler'\nimport { BN_18 } from '@/constants/big-number'\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT } from '@/constants'\n\nimport styles from './style'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = ['Step1: Deposit', 'Get ETHi Ticket', 'Step2: Allocation Action', 'Get ETHi']\n\nexport default function Deposit({\n  address,\n  ethBalance,\n  ethDecimals,\n  ethiDecimals,\n  userProvider,\n  VAULT_ABI,\n  VAULT_ADDRESS,\n  ETH_ADDRESS,\n  isBalanceLoading,\n  minimumInvestmentAmount\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [ethValue, setEthValue] = useState('')\n  const [mintGasLimit, setMintGasLimit] = useState(BigNumber.from('174107'))\n  const [gasPriceCurrent, setGasPriceCurrent] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [isOpenEstimateModal, setIsOpenEstimateModal] = useState(false)\n  const [estimateVaultBuffValue, setEstimateVaultBuffValue] = useState(BigNumber.from(0))\n  const loadingTimer = useRef()\n\n  const nextRebaseTime = getLastPossibleRebaseTime()\n  const getGasFee = () => {\n    if (!gasPriceCurrent) {\n      return BigNumber.from(0)\n    }\n    const gasPrice = BigNumber.from(parseInt(gasPriceCurrent, 16).toString())\n    // metamask gaslimit great than contract gaslimit, so add extra limit\n    const metamaskExtraLimit = 114\n    return mintGasLimit.add(metamaskExtraLimit).mul(gasPrice)\n  }\n\n  /**\n   * check if value is valid\n   * @returns\n   */\n  function isValidValue() {\n    const balance = ethBalance\n    const decimals = ethDecimals\n    const value = ethValue\n    if (value === '' || value === '-' || value === '0' || isEmpty(value.replace(/ /g, ''))) return\n    // not a number\n    if (isNaN(Number(value))) return false\n    const nextValue = BN(value)\n    const nextFromValue = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    // less than 0\n    if (nextFromValue.lte(0)) return false\n    // value should be integer\n    const nextFromValueString = nextValue.multipliedBy(BigNumber.from(10).pow(decimals).toString())\n    if (nextFromValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (balance.lt(BigNumber.from(nextFromValue.toFixed()))) return false\n\n    if (balance.sub(BigNumber.from(nextFromValue.toFixed())).lt(getGasFee())) return false\n\n    return true\n  }\n\n  const handleInputChange = event => {\n    setEthValue(event.target.value)\n  }\n\n  const handleMaxClick = () => {\n    const v = getGasFee()\n    if (v.lte(0)) {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Since the latest Gasprice is not available, it is impossible to estimate the gas fee currently!'\n        })\n      )\n      return\n    }\n    const maxValue = ethBalance.sub(v)\n    setEthValue(\n      formatBalance(maxValue.gt(0) ? maxValue : 0, ethDecimals, {\n        showAll: true\n      })\n    )\n  }\n\n  const diposit = async () => {\n    clearTimeout(loadingTimer.current)\n    const isValid = isValidValue()\n    if (!isValid) {\n      return dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: 'Please enter the correct value'\n        })\n      )\n    }\n    setIsLoading(true)\n    const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n    console.log('nextTokens=', ETH_ADDRESS, amount)\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    let isSuccess = false\n\n    const extendObj = {}\n    // if gasLimit times not 1, need estimateGas\n    if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n      const gas = await nVaultWithUser.estimateGas.mint(ETH_ADDRESS, amount, 0, { from: address, value: amount })\n      const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n      // gasLimit not exceed maximum\n      const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n      extendObj.gasLimit = maxGasLimit\n    }\n    await nVaultWithUser\n      .mint(ETH_ADDRESS, amount, 0, {\n        ...extendObj,\n        from: address,\n        value: amount\n      })\n      .then(tx => tx.wait())\n      .then(() => {\n        isSuccess = true\n      })\n      .catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        setIsLoading(false)\n      })\n\n    if (isSuccess) {\n      setEthValue('')\n    }\n\n    loadingTimer.current = setTimeout(() => {\n      setIsLoading(false)\n      setIsOpenEstimateModal(false)\n      if (isSuccess) {\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'success',\n            message: 'Success!'\n          })\n        )\n      }\n    }, 2000)\n  }\n\n  const estimateMint = useCallback(\n    debounce(async () => {\n      const isValid = isValidValue()\n      if (!isValid) {\n        setEstimateVaultBuffValue(BigNumber.from(0))\n        return\n      }\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const amount = BigNumber.from(BN(ethValue).multipliedBy(BigNumber.from(10).pow(ethDecimals).toString()).toFixed())\n      const result = await vaultContract.estimateMint(ETH_ADDRESS, amount).catch(error => {\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isDistributing(errorMsg)) {\n          tip = 'Vault is in distributing, please try again later!'\n        } else if (isLessThanMinValue(errorMsg)) {\n          tip = `Deposit Amount must be greater than ${toFixed(minimumInvestmentAmount, BN_18, 2)}ETH!`\n        }\n        if (tip) {\n          dispatch(\n            warmDialog({\n              open: true,\n              type: 'error',\n              message: tip\n            })\n          )\n        }\n        return BigNumber.from(0)\n      })\n      setEstimateVaultBuffValue(result)\n    }, 1500)\n  )\n\n  /**\n   *\n   */\n  const openEstimateModal = () => {\n    setIsOpenEstimateModal(true)\n  }\n\n  useEffect(() => {\n    estimateMint()\n    return () => estimateMint.cancel()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ethValue])\n\n  // get gasprice per 15s\n  useEffect(() => {\n    if (!userProvider) {\n      return\n    }\n    userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    const timer = setInterval(() => {\n      userProvider.send('eth_gasPrice').then(setGasPriceCurrent).catch(noop)\n    }, 15000)\n    return () => clearInterval(timer)\n  }, [userProvider])\n\n  useEffect(() => {\n    const estimatedUsedValue = BigNumber.from(10).pow(ethDecimals)\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI) || ethBalance.lt(estimatedUsedValue)) {\n      return\n    }\n    const signer = userProvider.getSigner()\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const nVaultWithUser = vaultContract.connect(signer)\n    nVaultWithUser.estimateGas\n      .mint(ETH_ADDRESS, estimatedUsedValue, {\n        from: address,\n        value: estimatedUsedValue\n      })\n      .then(setMintGasLimit)\n      .catch(noop)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS, ethBalance, VAULT_ABI])\n\n  const isLogin = !isEmpty(userProvider)\n  const isValid = isValidValue()\n\n  return (\n    <>\n      <GridContainer classes={{ root: classes.depositContainer }}>\n        <p className={classes.estimateText}>From</p>\n        <GridItem xs={12} sm={12} md={12} lg={12} className={classes.tokenInputWrapper}>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <div className={classes.inputLabelWrapper}>\n                <div className={classes.tokenInfo}>\n                  <img className={classes.tokenLogo} alt=\"\" src={`./images/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619.png`} />\n                  <span className={classes.tokenName}>WETH</span>\n                </div>\n                <CustomTextField\n                  classes={{ root: classes.input }}\n                  value={ethValue}\n                  onChange={handleInputChange}\n                  placeholder=\"deposit amount\"\n                  maxEndAdornment\n                  onMaxClick={handleMaxClick}\n                  error={!isUndefined(isValid) && !isValid}\n                />\n              </div>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12}>\n              <p\n                className={classes.estimateText}\n                title={formatBalance(ethBalance, ethDecimals, {\n                  showAll: true\n                })}\n              >\n                Balance:&nbsp;&nbsp;\n                <Loading loading={isBalanceLoading}>{formatBalance(ethBalance, ethDecimals)}</Loading>\n              </p>\n            </GridItem>\n          </GridContainer>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button disabled={!isLogin || (isLogin && !isValid)} color=\"colorfull\" onClick={openEstimateModal} style={{ width: '100%' }}>\n              Deposit\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isOpenEstimateModal} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <BocStepper\n            classes={{\n              root: classes.root\n            }}\n            alternativeLabel\n            activeStep={1}\n            connector={<BocStepConnector />}\n          >\n            {map(steps, (i, index) => {\n              return (\n                <Step key={index}>\n                  <BocStepLabel StepIconComponent={BocStepIcon}>{i}</BocStepLabel>\n                </Step>\n              )\n            })}\n          </BocStepper>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Deposit Amounts:&nbsp;\n                <span key={address} className={classes.flexText}>\n                  <span style={{ color: 'chocolate', marginRight: 5 }}>{ethValue}</span> ETH&nbsp;\n                  <img className={classes.ModalTokenLogo} alt=\"\" src={'./images/0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE.png'} />\n                </span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Estimate User Get:&nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  &nbsp; + {toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}\n                  &nbsp;\n                </span>\n                &nbsp; ETHi Tickets\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"Estimated amount of ETHi that can be exchanged\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;From&nbsp;\n                <span style={{ color: 'chocolate' }}>{toFixed(estimateVaultBuffValue, BigNumber.from(10).pow(ethiDecimals))}</span>\n                &nbsp; ETHi Tickets <span style={{ fontWeight: 'bold', color: 'dimgrey' }}>To</span>\n                &nbsp;\n                <span style={{ color: 'darkturquoise' }}>\n                  {toFixed(estimateVaultBuffValue.mul(9987).div(10000), BigNumber.from(10).pow(ethiDecimals), 2)}\n                </span>\n                &nbsp; ETHi\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item}>\n              <Typography variant=\"subtitle1\" gutterBottom className={classes.subTitle}>\n                Exchange Time&nbsp;\n                <Tooltip\n                  classes={{\n                    tooltip: classes.tooltip\n                  }}\n                  placement=\"top\"\n                  title=\"The latest planned execution date may not be executed due to cost and other factors\"\n                >\n                  <InfoIcon classes={{ root: classes.labelToolTipIcon }} />\n                </Tooltip>\n                :&nbsp;\n                <span style={{ color: 'chocolate' }}>{moment(nextRebaseTime).format('YYYY-MM-DD HH:mm:ss')}</span>\n              </Typography>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12} lg={12} className={classes.item} style={{ textAlign: 'center' }}>\n              <Button color=\"colorfull\" onClick={diposit} style={{ width: '50%' }}>\n                Continue\n              </Button>\n              <Button style={{ marginLeft: 20 }} color=\"danger\" onClick={() => setIsOpenEstimateModal(false)}>\n                Cancel\n              </Button>\n            </GridItem>\n          </GridContainer>\n        </Paper>\n      </Modal>\n      <Modal className={classes.modal} open={isLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.depositModal}>\n          <div className={classes.modalBody}>\n            <CircularProgress color=\"inherit\" />\n            <p>On Deposit...</p>\n          </div>\n        </Paper>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  swapBody: {\n    width: '42rem',\n    outline: 0\n  },\n  withdrawContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    borderTopLeftRadius: '1rem',\n    borderTopRightRadius: '1rem'\n  },\n  outputContainer: {\n    padding: '2.6875rem 2.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.5rem',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem'\n  },\n  estimateText: {\n    height: '1.25rem',\n    color: '#A0A0A0',\n    margin: 0,\n    display: 'flex',\n    marginTop: '0.5rem',\n    alignItems: 'center'\n  },\n  input: {\n    maxWidth: '12.5rem'\n  },\n  footerContainer: {\n    marginTop: '2.5rem'\n  },\n  inputLabelWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  tokenInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  tokenName: {\n    fontSize: '1.625rem'\n  },\n  receiveTokenItem: {\n    marginBottom: 0\n  },\n  settingBtn: {\n    color: '#39d0d8',\n    textAlign: 'right',\n    lineHeight: '36px',\n    padding: '10px 0',\n    marginRight: '16px'\n  },\n  settingTitle: {\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: '0.01071em',\n    lineHeight: 1.5,\n    textAlign: 'center',\n    width: '100%'\n  },\n  settingItem: {\n    height: 38,\n    lineHeight: '38px',\n    marginBottom: 16,\n    '&:first-child': {\n      marginTop: 24\n    }\n  },\n  settingItemLabel: {\n    position: 'relative',\n    minWidth: 100,\n    marginRight: 16,\n    textAlign: 'right'\n  },\n  mutedLabel: {\n    position: 'relative',\n    display: 'inline-block'\n  },\n  maxLossFormCtrl: {\n    width: '160px'\n  },\n  exchanged: {\n    position: 'relative',\n    paddingLeft: 16\n  },\n  tooltip: {\n    fontSize: '14px'\n  },\n  labelToolTipIcon: {\n    position: 'absolute',\n    left: '-18px',\n    top: '50%',\n    color: '#fff',\n    fontSize: 16,\n    transform: 'translate(0, -50%)'\n  },\n  slippageItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  slippageInput: {\n    width: 96,\n    marginLeft: 16\n  },\n  widthdrawLoadingPaper: {\n    padding: '1rem',\n    maxWidth: '500px',\n    color: 'rgba(255, 255, 255, 0.87)',\n    border: '1px solid #A68EFE',\n    backgroundColor: '#000',\n    borderRadius: '1rem',\n    width: '100%'\n  },\n  estimateBalanceTitle: {\n    fontSize: '1.625rem'\n  },\n  estimateBalanceNum: {\n    float: 'right',\n    fontSize: '1rem'\n  },\n  estimateItem: {\n    textAlign: 'center',\n    minHeight: '100px',\n    color: '#A0A0A0',\n    paddingTop: '35px'\n  },\n  setting: {\n    position: 'absolute',\n    right: '1rem',\n    top: '1rem',\n    cursor: 'pointer'\n  },\n  popover: {\n    width: '15rem',\n    background: '#292B2E',\n    border: ' 1px solid #666666',\n    borderRadius: '1.25rem',\n    padding: '1rem'\n  },\n  popoverTitle: {\n    color: '#A0A0A0',\n    margin: 0,\n    padding: '0.5rem 0'\n  },\n  root: {\n    padding: '1.5rem 0'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect, useCallback } from 'react'\nimport * as ethers from 'ethers'\nimport BN from 'bignumber.js'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport AddIcon from '@material-ui/icons/Add'\nimport Step from '@material-ui/core/Step'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Popover from '@material-ui/core/Popover'\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state'\nimport Box from '@material-ui/core/Box'\n\nimport CustomTextField from '@/components/CustomTextField'\nimport BocStepper from '@/components/Stepper/Stepper'\nimport BocStepLabel from '@/components/Stepper/StepLabel'\nimport BocStepIcon from '@/components/Stepper/StepIcon'\nimport BocStepConnector from '@/components/Stepper/StepConnector'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Button from '@/components/CustomButtons/Button'\nimport Loading from '@/components/LoadingComponent'\nimport ApproveArrayV2 from '@/components/ApproveArray/ApproveArrayV2'\n\n// === Hooks === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport useRedeemFeeBps from '@/hooks/useRedeemFeeBps'\nimport usePriceProvider from '@/hooks/usePriceProvider'\n\n// === Utils === //\nimport isUndefined from 'lodash/isUndefined'\nimport map from 'lodash/map'\nimport get from 'lodash/get'\nimport debounce from 'lodash/debounce'\nimport compact from 'lodash/compact'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed, formatBalance } from '@/helpers/number-format'\nimport { isAd, isEs, isRp, isMaxLoss, isLossMuch, isExchangeFail, errorTextOutput } from '@/helpers/error-handler'\n\n// === Constants === //\nimport { MULTIPLE_OF_GAS, MAX_GAS_LIMIT, IERC20_ABI } from '@/constants'\n// import { WETH_ADDRESS } from '@/constants/tokens'\nimport { BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\nimport { some } from 'lodash'\n\nconst { BigNumber } = ethers\nconst useStyles = makeStyles(styles)\n\nconst steps = [{ title: 'Shares Validation' }, { title: 'Gas Estimates' }, { title: 'Withdraw' }]\n\nconst WITHDRAW_EXCHANGE_THRESHOLD = BigNumber.from(10).pow(16)\n\nexport default function Withdraw({\n  address,\n  exchangeManager,\n  ethiBalance,\n  ethiDecimals,\n  userProvider,\n  ETH_ADDRESS,\n  VAULT_ADDRESS,\n  VAULT_ABI,\n  EXCHANGE_AGGREGATOR_ABI,\n  EXCHANGE_ADAPTER_ABI,\n  isBalanceLoading,\n  reloadBalance,\n  PRICE_ORCALE_ABI\n}) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [toValue, setToValue] = useState('')\n  const [allowMaxLoss, setAllowMaxLoss] = useState('0.3')\n  const [slipper, setSlipper] = useState('0.3')\n  const [estimateWithdrawArray, setEstimateWithdrawArray] = useState([])\n  const [isEstimate, setIsEstimate] = useState(false)\n  const [isWithdrawLoading, setIsWithdrawLoading] = useState(false)\n  const [currentStep, setCurrentStep] = useState(0)\n  const [withdrawError, setWithdrawError] = useState({})\n\n  const [burnTokens, setBurnTokens] = useState([\n    // {\n    //   address: ETH_ADDRESS,\n    //   amount: '10000000000000000000'\n    // },\n    // {\n    //   address: WETH_ADDRESS,\n    //   amount: '1000000000000000000'\n    // }\n  ])\n  const [isShowZipModal, setIsShowZipModal] = useState(false)\n\n  const [pegTokenPrice, setPegTokenPrice] = useState(BN_18)\n\n  const { value: redeemFeeBps } = useRedeemFeeBps({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI\n  })\n\n  const { getPriceProvider } = usePriceProvider({\n    userProvider,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    PRICE_ORCALE_ABI\n  })\n\n  const redeemFeeBpsPercent = redeemFeeBps.toNumber() / 100\n\n  const estimateWithdraw = useCallback(\n    debounce(async () => {\n      setIsEstimate(true)\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n      const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n      const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n        .mul(usdValue)\n        .div(BigNumber.from(1e4))\n      const signer = userProvider.getSigner()\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      try {\n        const [tokens, amounts] = await vaultContractWithSigner.callStatic.burn(nextValue, allowMaxLossValue)\n        console.log('estimate withdraw result:', tokens, amounts)\n        let nextEstimateWithdrawArray = compact(\n          await Promise.all(\n            map(tokens, async (token, index) => {\n              const amount = get(amounts, index, BigNumber.from(0))\n              if (amount.gt(0)) {\n                return {\n                  tokenAddress: token,\n                  decimals: ethiDecimals,\n                  amounts: amount\n                }\n              }\n            })\n          )\n        )\n\n        setEstimateWithdrawArray(nextEstimateWithdrawArray)\n      } catch (error) {\n        console.log('estimate withdraw error', error)\n        console.log('withdraw original error :', error)\n        const errorMsg = errorTextOutput(error)\n        let tip = ''\n        if (isEs(errorMsg)) {\n          tip = 'Vault has been shut down, please try again later!'\n        } else if (isAd(errorMsg)) {\n          tip = 'Vault is in adjustment status, please try again later!'\n        } else if (isRp(errorMsg)) {\n          tip = 'Vault is in rebase status, please try again later!'\n        } else if (isMaxLoss(errorMsg)) {\n          tip = 'Failed to withdraw, please increase the Max Loss!'\n        } else if (isLossMuch(errorMsg)) {\n          tip = 'Failed to exchange, please increase the exchange slippage!'\n        } else if (isExchangeFail(errorMsg)) {\n          tip = 'Failed to exchange, Please try again later!'\n        } else {\n          tip = errorMsg\n        }\n        dispatch(\n          warmDialog({\n            open: true,\n            type: 'error',\n            message: tip\n          })\n        )\n        setEstimateWithdrawArray(undefined)\n      } finally {\n        setTimeout(() => {\n          setIsEstimate(false)\n        }, 500)\n      }\n    }, 1500)\n  )\n\n  const handleBurn = async (a, b, c, d, tokens, amounts) => {\n    console.log('handleBurn')\n    console.log('tokens', tokens)\n    console.log(\n      'amounts',\n      amounts.map(el => el.toString())\n    )\n    const priceProvider = await getPriceProvider()\n    return Promise.all(\n      map(tokens, async (token, i) => {\n        const amount = toFixed(amounts[i], 1)\n        const amountsInEth = await priceProvider.valueInEth(token, amount)\n        if (WITHDRAW_EXCHANGE_THRESHOLD.gt(amountsInEth)) {\n          return\n        }\n\n        let balance = BigNumber.from(0)\n        if (token === ETH_ADDRESS) {\n          balance = await userProvider.getBalance(address)\n        } else {\n          const contract = new ethers.Contract(token, IERC20_ABI, userProvider)\n          balance = await contract.balanceOf(address)\n        }\n\n        return {\n          address: token,\n          amount: balance.gt(amounts[i]) ? amount : balance.toString()\n        }\n      })\n    ).then(array => {\n      const nextBurnTokens = compact(array)\n      if (\n        some(nextBurnTokens, i => {\n          return i.address !== ETH_ADDRESS && i.amount !== '0'\n        })\n      ) {\n        setBurnTokens(nextBurnTokens)\n        setIsShowZipModal(true)\n      }\n    })\n  }\n\n  const withdraw = async () => {\n    let withdrawTimeStart = Date.now(),\n      withdrawValidFinish = 0,\n      preWithdrawGetCoins = 0,\n      getSwapInfoFinish = 0,\n      estimateGasFinish = 0,\n      withdrawFinish = 0,\n      withdrawTransationFinish = 0\n    setIsWithdrawLoading(true)\n    console.log('----------start withdraw----------')\n    if (!isValidToValue()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct value.'\n      })\n    }\n\n    if (!isValidAllowLoss()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Enter the correct Max Loss value.'\n      })\n    }\n\n    if (!isValidSlipper()) {\n      return setWithdrawError({\n        type: 'warning',\n        message: 'Please enter the correct slippage value.'\n      })\n    }\n    withdrawValidFinish = Date.now()\n    setCurrentStep(1)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    const nextValue = BigNumber.from(BN(toValue).multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString()).toFixed())\n    const usdValue = nextValue.mul(pegTokenPrice).div(BN_18.toFixed())\n    const allowMaxLossValue = BigNumber.from(10000 - parseInt(100 * (parseFloat(allowMaxLoss) + redeemFeeBpsPercent)))\n      .mul(usdValue)\n      .div(BigNumber.from(1e4))\n    try {\n      const vaultContractWithSigner = vaultContract.connect(signer)\n\n      getSwapInfoFinish = Date.now()\n      setCurrentStep(2)\n      let tx\n      // if gasLimit times not 1, need estimateGas\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\n        const gas = await vaultContractWithSigner.estimateGas.burn(nextValue, allowMaxLossValue)\n        setCurrentStep(3)\n        estimateGasFinish = Date.now()\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\n        // gasLimit not exceed maximum\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue, {\n          gasLimit: maxGasLimit\n        })\n      } else {\n        tx = await vaultContractWithSigner.burn(nextValue, allowMaxLossValue)\n      }\n      withdrawFinish = Date.now()\n\n      const { events } = await tx.wait()\n      let args = []\n      for (let i = events.length - 1; i >= 0; i--) {\n        if (events[i].event === 'Burn') {\n          args = events[i].args\n          break\n        }\n      }\n      handleBurn(...args)\n\n      withdrawTransationFinish = Date.now()\n      setCurrentStep(4)\n      setToValue('')\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'success',\n          message: 'Success!'\n        })\n      )\n    } catch (error) {\n      console.log('withdraw original error :', error)\n      const errorMsg = errorTextOutput(error)\n      let tip = ''\n      if (isEs(errorMsg)) {\n        tip = 'Vault has been shut down, please try again later!'\n      } else if (isAd(errorMsg)) {\n        tip = 'Vault is in adjustment status, please try again later!'\n      } else if (isRp(errorMsg)) {\n        tip = 'Vault is in rebase status, please try again later!'\n      } else if (isMaxLoss(errorMsg)) {\n        tip = 'Failed to withdraw, please increase the Max Loss!'\n      } else if (isLossMuch(errorMsg)) {\n        tip = 'Failed to exchange, please increase the exchange slippage!'\n      } else if (isExchangeFail(errorMsg)) {\n        tip = 'Failed to exchange, Please try again later!'\n      } else {\n        tip = errorMsg\n      }\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'error',\n          message: tip\n        })\n      )\n    }\n    setTimeout(() => {\n      setIsWithdrawLoading(false)\n      setWithdrawError({})\n      setCurrentStep(0)\n    }, 2000)\n    // log withdraw total time\n    const totalTime = withdrawTransationFinish - withdrawTimeStart\n    const szjy = withdrawValidFinish - withdrawTimeStart\n    const szjyPercents = ((100 * szjy) / totalTime).toFixed(2)\n    const ytq = preWithdrawGetCoins === 0 ? 0 : preWithdrawGetCoins - withdrawValidFinish\n    const ytqPercents = ((100 * ytq) / totalTime).toFixed(2)\n    const hqdhlj = preWithdrawGetCoins === 0 ? getSwapInfoFinish - withdrawValidFinish : getSwapInfoFinish - preWithdrawGetCoins\n    const hqdhljPercents = ((100 * hqdhlj) / totalTime).toFixed(2)\n    const eg = estimateGasFinish === 0 ? 0 : estimateGasFinish - getSwapInfoFinish\n    const egPercents = ((100 * eg) / totalTime).toFixed(2)\n    const qk = estimateGasFinish === 0 ? withdrawFinish - getSwapInfoFinish : withdrawFinish - estimateGasFinish\n    const qkPercents = ((100 * qk) / totalTime).toFixed(2)\n    const swc = withdrawTransationFinish - withdrawFinish\n    const swcPercents = ((100 * swc) / totalTime).toFixed(2)\n    console.table({\n      valid: `${szjy}(${szjyPercents}%)`,\n      preWithdraw: `${ytq}(${ytqPercents}%)`,\n      getSwapPath: `${hqdhlj}(${hqdhljPercents}%)`,\n      estimateGas: `${eg}(${egPercents}%)`,\n      withdraw: `${qk}(${qkPercents}%)`,\n      transaction: `${swc}(${swcPercents}%)`\n    })\n  }\n\n  function imgError(e) {\n    const evn = e\n    const img = evn.srcElement ? evn.srcElement : evn.target\n    img.src = '/default.png'\n  }\n\n  /**\n   * check if toValue is valid\n   * @returns\n   */\n  const isValidToValue = () => {\n    if (toValue === '' || toValue === '-' || isEmpty(toValue.replace(/ /g, ''))) return\n    // should be a number\n    if (isNaN(Number(toValue))) return false\n    const nextValue = BN(toValue)\n    const nextToValue = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    // should be positive\n    if (nextToValue.lte(0)) return false\n    // should be integer\n    const nextToValueString = nextValue.multipliedBy(BigNumber.from(10).pow(ethiDecimals).toString())\n    if (nextToValueString.toFixed().indexOf('.') !== -1) return false\n    // balance less than value\n    if (ethiBalance.lt(BigNumber.from(nextToValue.toFixed()))) return false\n    return true\n  }\n\n  /**\n   * check if allow loss is valid\n   * @returns\n   */\n  const isValidAllowLoss = () => {\n    if (allowMaxLoss === '' || isEmpty(allowMaxLoss.replace(/ /g, ''))) return\n    if (isNaN(allowMaxLoss)) return false\n    if (allowMaxLoss < 0 || allowMaxLoss > 50) return false\n    return true\n  }\n\n  const isValidSlipper = () => {\n    if (slipper === '' || isEmpty(slipper.replace(/ /g, ''))) return\n    if (isNaN(slipper)) return false\n    if (slipper < 0 || slipper > 45) return false\n    return true\n  }\n\n  useEffect(() => {\n    // need open advanced setting\n    // allowLoss, slipper, toValue need valid\n    if (isValidAllowLoss() && isValidSlipper() && isValidToValue()) {\n      estimateWithdraw()\n    }\n    if (isEmpty(toValue)) {\n      setEstimateWithdrawArray([])\n    }\n    return () => {\n      setEstimateWithdrawArray([])\n      return estimateWithdraw.cancel()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toValue, allowMaxLoss, slipper])\n\n  const handleAmountChange = event => {\n    try {\n      setToValue(event.target.value)\n    } catch (error) {\n      setToValue('')\n    }\n  }\n\n  const handleMaxClick = async () => {\n    const [nextEthiBalance] = await reloadBalance()\n    setToValue(formatBalance(nextEthiBalance, ethiDecimals, { showAll: true }))\n  }\n\n  const renderEstimate = () => {\n    if (isEstimate) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <CircularProgress fontSize=\"large\" color=\"primary\" />\n          </div>\n        </GridItem>\n      )\n    }\n    if (isUndefined(estimateWithdrawArray)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <ErrorOutlineIcon fontSize=\"large\" />\n            <p>Amount estimate failed, please try again!</p>\n          </div>\n        </GridItem>\n      )\n    }\n    if (isEmpty(estimateWithdrawArray) || isEmpty(toValue)) {\n      return (\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.estimateItem}>\n            <p style={{ fontSize: 26, textAlign: 'right' }}>0.00</p>\n          </div>\n        </GridItem>\n      )\n    }\n    return map(estimateWithdrawArray, item => {\n      return (\n        <GridItem key={item.tokenAddress} xs={12} sm={12} md={6} lg={6}>\n          <Button\n            title={toFixed(item.amounts, BigNumber.from(10).pow(item.decimals))}\n            color=\"transparent\"\n            target=\"_blank\"\n            style={{ fontSize: 14, paddingBottom: 20 }}\n            onClick={() => addToken(item.tokenAddress)}\n          >\n            {item.tokenAddress !== ETH_ADDRESS && <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 25, left: 45 }} />}\n            <img\n              title=\"Add token address to wallet\"\n              className={classes.img}\n              style={{ borderRadius: '50%' }}\n              alt=\"\"\n              src={`./images/${item.tokenAddress}.png`}\n              onError={imgError}\n            />\n            &nbsp;&nbsp;~&nbsp;\n            {toFixed(item.amounts, BigNumber.from(10).pow(item.decimals), 6)}\n          </Button>\n        </GridItem>\n      )\n    })\n  }\n\n  const isValidToValueFlag = isValidToValue()\n  const isValidAllowLossFlag = isValidAllowLoss()\n\n  const isLogin = !isEmpty(userProvider)\n\n  const getPegTokenPrice = () => {\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract.getPegTokenPrice().then(result => {\n      setTimeout(() => {\n        setPegTokenPrice(result)\n      }, 500)\n    })\n    return getPegTokenPrice\n  }\n\n  useEffect(() => {\n    if (isEmpty(address) || isEmpty(VAULT_ADDRESS) || isEmpty(VAULT_ABI)) return\n    const timer = setInterval(getPegTokenPrice(), 10000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address])\n\n  return (\n    <>\n      <div className={classes.setting}>\n        <PopupState variant=\"popover\" popupId=\"setting-popover\">\n          {popupState => (\n            <div>\n              <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...bindTrigger(popupState)}>\n                <path\n                  d=\"M15 20.625C18.1066 20.625 20.625 18.1066 20.625 15C20.625 11.8934 18.1066 9.375 15 9.375C11.8934 9.375 9.375 11.8934 9.375 15C9.375 18.1066 11.8934 20.625 15 20.625Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M21.5273 7.62891C21.8242 7.90234 22.1055 8.18359 22.3711 8.47266L25.5703 8.92969C26.0916 9.83497 26.4934 10.804 26.7656 11.8125L24.8203 14.4023C24.8203 14.4023 24.8555 15.1992 24.8203 15.5977L26.7656 18.1875C26.4946 19.1965 26.0928 20.1656 25.5703 21.0703L22.3711 21.5273C22.3711 21.5273 21.8203 22.1016 21.5273 22.3711L21.0703 25.5703C20.165 26.0916 19.196 26.4934 18.1875 26.7656L15.5977 24.8203C15.2 24.8555 14.8 24.8555 14.4023 24.8203L11.8125 26.7656C10.8035 26.4946 9.83438 26.0928 8.92969 25.5703L8.47266 22.3711C8.18359 22.0977 7.90234 21.8164 7.62891 21.5273L4.42969 21.0703C3.90842 20.165 3.50663 19.196 3.23438 18.1875L5.17969 15.5977C5.17969 15.5977 5.14453 14.8008 5.17969 14.4023L3.23438 11.8125C3.50537 10.8035 3.90722 9.83438 4.42969 8.92969L7.62891 8.47266C7.90234 8.18359 8.18359 7.90234 8.47266 7.62891L8.92969 4.42969C9.83497 3.90842 10.804 3.50663 11.8125 3.23438L14.4023 5.17969C14.8 5.14452 15.2 5.14452 15.5977 5.17969L18.1875 3.23438C19.1965 3.50537 20.1656 3.90722 21.0703 4.42969L21.5273 7.62891Z\"\n                  stroke=\"#A0A0A0\"\n                  strokeWidth=\"1.75\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              <Popover\n                classes={{ paper: classes.popover }}\n                {...bindPopover(popupState)}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center'\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center'\n                }}\n              >\n                <Box p={2}>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={12} lg={12}>\n                      <p className={classes.popoverTitle}>Max Loss</p>\n                      <CustomTextField\n                        classes={{ root: classes.input }}\n                        value={allowMaxLoss}\n                        placeholder=\"Allow loss percent\"\n                        maxEndAdornment\n                        onMaxClick={() => setAllowMaxLoss('50')}\n                        onChange={event => {\n                          const value = event.target.value\n                          setAllowMaxLoss(value)\n                        }}\n                        error={!isUndefined(isValidAllowLossFlag) && !isValidAllowLossFlag}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                </Box>\n              </Popover>\n            </div>\n          )}\n        </PopupState>\n      </div>\n      <GridContainer className={classes.withdrawContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>From</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.inputLabelWrapper}>\n            <div className={classes.tokenInfo}>\n              <span className={classes.tokenName}>WETH</span>\n            </div>\n            <CustomTextField\n              classes={{ root: classes.input }}\n              value={toValue}\n              placeholder=\"withdraw amount\"\n              maxEndAdornment\n              onMaxClick={() => handleMaxClick()}\n              onChange={handleAmountChange}\n              error={!isUndefined(isValidToValueFlag) && !isValidToValueFlag && toValue !== '0'}\n            />\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText} title={formatBalance(ethiBalance, ethiDecimals, { showAll: true })}>\n            Balance:&nbsp;\n            <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n          </p>\n        </GridItem>\n      </GridContainer>\n      <GridContainer className={classes.outputContainer}>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <p className={classes.estimateText}>To</p>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.selectorlWrapper}>\n            <p className={classes.estimateBalanceTitle}>WETH</p>\n          </div>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          {renderEstimate()}\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12} lg={12}>\n          <div className={classes.footerContainer}>\n            <Button\n              disabled={!isLogin || (isLogin && (isUndefined(isValidToValueFlag) || !isValidToValueFlag))}\n              color=\"colorfull\"\n              onClick={withdraw}\n              style={{ width: '100%', padding: '12px 16px' }}\n            >\n              Withdraw\n              <Tooltip\n                classes={{\n                  tooltip: classes.tooltip\n                }}\n                placement=\"top\"\n                title={`${redeemFeeBpsPercent}% withdrawal fee of the principal.`}\n              >\n                <InfoIcon style={{ marginLeft: '0.5rem' }} />\n              </Tooltip>\n            </Button>\n          </div>\n        </GridItem>\n      </GridContainer>\n      <Modal className={classes.modal} open={isWithdrawLoading} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n        <Paper elevation={3} className={classes.widthdrawLoadingPaper}>\n          <div className={classes.modalBody}>\n            {isEmpty(withdrawError) && <CircularProgress color=\"inherit\" />}\n            {isEmpty(withdrawError) ? <p>In Withdrawing...</p> : <p>Withdraw Error !</p>}\n            <BocStepper\n              classes={{\n                root: classes.root\n              }}\n              alternativeLabel\n              activeStep={currentStep}\n              connector={<BocStepConnector />}\n            >\n              {map(steps, (i, index) => {\n                return (\n                  <Step key={index}>\n                    <BocStepLabel StepIconComponent={BocStepIcon}>{i.title}</BocStepLabel>\n                  </Step>\n                )\n              })}\n            </BocStepper>\n            {!isEmpty(withdrawError) && (\n              <p\n                style={{\n                  color: withdrawError.type === 'error' ? 'red' : 'yellow'\n                }}\n              >\n                <WarningIcon style={{ verticalAlign: 'bottom' }}></WarningIcon>\n                &nbsp;&nbsp;&nbsp;{withdrawError.message}\n              </p>\n            )}\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                setIsWithdrawLoading(false)\n                setWithdrawError({})\n                setCurrentStep(0)\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Paper>\n      </Modal>\n      <Modal\n        className={classes.modal}\n        open={isShowZipModal && !!address}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.swapBody}>\n          {!isEmpty(address) && !isEmpty(exchangeManager) && (\n            <ApproveArrayV2\n              isEthi\n              address={address}\n              tokens={burnTokens}\n              userProvider={userProvider}\n              exchangeManager={exchangeManager}\n              EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n              EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n              slippage={slipper}\n              onSlippageChange={setSlipper}\n              handleClose={() => setIsShowZipModal(false)}\n            />\n          )}\n        </div>\n      </Modal>\n    </>\n  )\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\nimport { gradientText } from '@/assets/jss/common.js'\n\nconst componentsStyle = theme => ({\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    marginTop: '1rem',\n    marginBottom: 100,\n    ...container\n  },\n  center: {\n    justifyContent: 'center',\n    padding: '50px 72px 50px',\n    backgroundColor: '#0c0735cc',\n    [theme.breakpoints.down('md')]: {\n      padding: '50px 16px 50px'\n    },\n    margin: 0\n  },\n  wrapper: {\n    padding: '5rem 3rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  wrapperMobile: {\n    padding: '3rem 2rem',\n    borderRadius: '1.25rem',\n    background: 'linear-gradient(111.68deg, rgba(87, 97, 125, 0.2) 7.59%, rgba(255, 255, 255, 0.078) 102.04%)'\n  },\n  deposit: {\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderTopLeftRadius: '1.25rem',\n    borderTopRightRadius: '1.25rem'\n  },\n  balance: {\n    marginTop: '0.5rem',\n    marginBottom: '2rem',\n    padding: '1rem',\n    border: '1px solid #F4ACF3',\n    borderBottomLeftRadius: '1.25rem',\n    borderBottomRightRadius: '1.25rem'\n  },\n  symbol: {\n    color: '#A68EFD',\n    marginLeft: '1rem',\n    ...gradientText\n  },\n  footer: {},\n  item: {\n    color: '#fff',\n    marginBottom: 20,\n    '& .MuiListItemIcon-root': {\n      minWidth: '38px'\n    }\n  },\n  centerItem: {\n    width: '630px'\n  },\n  balanceCard: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    margin: '0 1rem 1rem 0',\n    textAlign: 'left',\n    padding: '2.8125rem 2.4375rem',\n    background: '#323338',\n    color: '#fff',\n    borderRadius: '1.25rem'\n  },\n  check: {\n    color: '#A68EFE'\n  },\n  balanceCardValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 30,\n    lineHeight: '30px',\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  balanceCardLabel: {\n    color: '#b2add1',\n    fontSize: 14\n  },\n  tokenInfo: {\n    display: 'flex',\n    position: 'absolute',\n    right: 12,\n    top: 9\n  },\n  addTokenIcon: {\n    cursor: 'pointer',\n    marginLeft: '1rem',\n    display: 'flex'\n  },\n  scanToken: {\n    width: 24,\n    height: 'auto',\n    cursor: 'pointer',\n    borderRadius: '50%',\n    backgroundColor: '#fff'\n  },\n  hidden: {\n    display: 'none'\n  },\n  brand: {\n    color: '#FFFFFF',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '4.2rem',\n    fontWeight: '600',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    width: 'auto',\n    margin: '10px 0 0'\n  },\n  main: {\n    position: 'relative',\n    backgroundColor: 'transparent'\n  },\n  mainRaised: {\n    margin: '0 auto',\n    marginTop: 65\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  switchBar: {\n    backgroundColor: '#91d5ff !important'\n  },\n  img: {\n    width: '25px'\n  },\n  radioUnchecked: {\n    width: '0px',\n    height: '0px',\n    padding: '7px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioChecked: {\n    width: '16px',\n    height: '16px',\n    border: '1px solid #fff',\n    borderRadius: '50%'\n  },\n  radioRoot: {\n    padding: '12px',\n    '&:hover': {\n      backgroundColor: 'unset'\n    }\n  },\n  radio: {\n    color: '#fff !important'\n  },\n  investCard: {\n    padding: '20px 24px',\n    borderRadius: 6,\n    backgroundColor: 'rgba(39, 31, 114, 0.8)',\n    overflow: 'visible'\n  },\n  table: {\n    backgroundColor: '#150752',\n    border: '1px solid rgb(222, 217, 213)'\n  },\n  tableCell: {\n    color: '#fff',\n    fontSize: '12px',\n    letterSpacing: '0.01071em'\n  },\n  switchBase: {\n    color: '#ddd'\n  },\n  switchChecked: {\n    color: '#40a9ff'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& .MuiPaper-root': {\n      minWidth: 430,\n      minHeight: 120,\n      padding: '32px 24px',\n      fontSize: 16,\n      border: 0,\n      color: '#fff',\n      boxShadow: '0px 15px 15px rgba(0, 0, 0, 0.05)',\n      borderRadius: '20px',\n      background: '#292B2E',\n      outline: 0,\n      width: '550px'\n    }\n  },\n  modalBody: {\n    textAlign: 'center'\n  },\n  stepContainer: {\n    padding: 20\n  },\n  stepItem: {\n    color: '#fff'\n  },\n  tabsRoot: {\n    padding: '0 20px'\n  },\n  tabsIndicator: {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    '& > span': {\n      maxWidth: 120,\n      width: '100%',\n      backgroundColor: '#fff'\n    }\n  },\n  tabTextColor: {\n    color: '#fff'\n  },\n  tabRoot: {\n    width: '50%',\n    fontSize: '16px',\n    maxWidth: 'none'\n  },\n  detailWrapper: {\n    margin: '42px 0 0 0'\n  },\n  slider: {\n    position: 'absolute',\n    top: '50px',\n    left: 'calc(50% - 33rem)',\n    backgroundColor: '#271f72',\n    color: 'azure'\n  },\n  text: {\n    color: 'azure'\n  },\n  spliter: {\n    display: 'flex',\n    justifyContent: 'center',\n    bottom: 0,\n    height: 2,\n    position: 'absolute',\n    transition: 'all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    width: '54%',\n    backgroundColor: '#fff'\n  }\n})\n\nexport default componentsStyle\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridContainer from '@/components/Grid/GridContainer'\nimport GridItem from '@/components/Grid/GridItem'\nimport Card from '@material-ui/core/Card'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport Loading from '@/components/LoadingComponent'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n// === Components === //\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport MyStatement from '@/components/MyStatement/MyStatementForRiskOn'\nimport MyVault from '@/components/MyVault'\nimport Modal from '@material-ui/core/Modal'\nimport Paper from '@material-ui/core/Paper'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// === Reducers === //\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { setCurrentTab } from '@/reducers/invest-reducer'\n\n// === constants === //\nimport { ETH_ADDRESS, ETH_DECIMALS } from '@/constants/tokens'\nimport { INVEST_TAB } from '@/constants/invest'\nimport { IERC20_ABI, CHAIN_ID } from '@/constants'\n\n// === Utils === //\nimport { formatBalance } from '@/helpers/number-format'\nimport isEmpty from 'lodash/isEmpty'\nimport last from 'lodash/last'\nimport noop from 'lodash/noop'\nimport * as ethers from 'ethers'\nimport useVersionWapper from '@/hooks/useVersionWapper'\nimport { addToken } from '@/helpers/wallet'\nimport useVault from '@/hooks/useVault'\n\n// === Styles === //\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\nconst { BigNumber } = ethers\n\nfunction Ethr(props) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const isLayoutSm = useMediaQuery('(max-width: 960px)')\n\n  const [personalVaultAddress, setPersonalVaultAddress] = useState()\n  const [isVisiable, setIsVisiable] = useState(true)\n\n  const {\n    address,\n    userProvider,\n    ETHI_ADDRESS,\n    VAULT_ADDRESS,\n    VAULT_ABI,\n    EXCHANGE_AGGREGATOR_ABI,\n    EXCHANGE_ADAPTER_ABI,\n    PRICE_ORCALE_ABI,\n    VAULT_BUFFER_ADDRESS,\n    VAULT_BUFFER_ABI,\n    VAULT_FACTORY_ADDRESS\n  } = props\n\n  console.log('Usdr VAULT_FACTORY_ADDRESS=', VAULT_FACTORY_ADDRESS)\n\n  const [ethBalance, setEthBalance] = useState(BigNumber.from(0))\n  const [ethiBalance, setEthiBalance] = useState(BigNumber.from(0))\n  const [ethiDecimals, setEthiDecimals] = useState(0)\n  const ethDecimals = ETH_DECIMALS\n\n  const [beforeTotalValue, setBeforeTotalValue] = useState(BigNumber.from(0))\n  const [totalValue, setTotalValue] = useState(BigNumber.from(0))\n\n  const [vaultBufferBalance, setVaultBufferBalance] = useState(BigNumber.from(0))\n  const [vaultBufferDecimals, setVaultBufferDecimals] = useState(0)\n\n  const [isBalanceLoading, setIsBalanceLoading] = useState(false)\n\n  const current = useSelector(state => state.investReducer.currentTab)\n  const setCurrent = tab => {\n    loadCoinsBalance()\n    dispatch(setCurrentTab(tab))\n  }\n  const { minimumInvestmentAmount, exchangeManager } = useVault(VAULT_ADDRESS, VAULT_ABI, userProvider)\n\n  // load user balance\n  const loadBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    Promise.all([\n      loadCoinsBalance(),\n      ethiContract\n        .decimals()\n        .then(setEthiDecimals)\n        .catch(() => setEthiDecimals(1)),\n      vaultBufferContract\n        .decimals()\n        .then(setVaultBufferDecimals)\n        .catch(() => setVaultBufferDecimals(1))\n    ]).catch(() => {\n      dispatch(\n        warmDialog({\n          open: true,\n          type: 'warning',\n          message: \"Please confirm wallet's network!\"\n        })\n      )\n    })\n  }\n\n  const loadCoinsBalance = () => {\n    if (isEmpty(address) || isEmpty(userProvider) || isEmpty(ETHI_ADDRESS) || isEmpty(VAULT_BUFFER_ADDRESS)) {\n      return\n    }\n    setIsBalanceLoading(true)\n    const vaultBufferContract = new ethers.Contract(VAULT_BUFFER_ADDRESS, VAULT_BUFFER_ABI, userProvider)\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    return Promise.all([\n      ethiContract.balanceOf(address).catch(() => BigNumber.from(0)),\n      userProvider.getBalance(address),\n      vaultBufferContract.balanceOf(address).catch(() => BigNumber.from(0))\n    ])\n      .then(([ethiBalance, ethBalance, vaultBufferBalance]) => {\n        setEthBalance(ethBalance)\n        setEthiBalance(ethiBalance)\n        setVaultBufferBalance(vaultBufferBalance)\n        return [ethiBalance, ethBalance, vaultBufferBalance]\n      })\n      .finally(() => {\n        setTimeout(() => {\n          setIsBalanceLoading(false)\n        }, 500)\n      })\n  }\n\n  useEffect(() => {\n    if (isEmpty(VAULT_ADDRESS)) return\n    const loadTotalAssetsFn = () =>\n      loadTotalAssets()\n        .then(afterTotalValue => {\n          if (!afterTotalValue.eq(beforeTotalValue)) {\n            setBeforeTotalValue(totalValue)\n            setTotalValue(afterTotalValue)\n          }\n        })\n        .catch(noop)\n    const timer = setInterval(loadTotalAssetsFn, 3000)\n    return () => clearInterval(timer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [totalValue.toString()])\n\n  function handleMint(...eventArgs) {\n    console.log('Mint=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n  function handleBurn(...eventArgs) {\n    console.log('Burn=', eventArgs)\n    const block = last(eventArgs)\n    block &&\n      block\n        .getTransaction()\n        .then(tx => tx.wait())\n        .then(loadBalance)\n  }\n\n  useEffect(() => {\n    const listener = () => {\n      if (isEmpty(VAULT_ABI) || isEmpty(userProvider)) return\n      loadBalance()\n      if (isEmpty(VAULT_ADDRESS)) return\n      const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      if (!isEmpty(address)) {\n        vaultContract.on('Mint', handleMint)\n        vaultContract.on('Burn', handleBurn)\n        return () => {\n          vaultContract.off('Mint', handleMint)\n          vaultContract.off('Burn', handleBurn)\n        }\n      }\n    }\n    return listener()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  const loadTotalAssets = () => {\n    const ethiContract = new ethers.Contract(ETHI_ADDRESS, IERC20_ABI, userProvider)\n    return ethiContract.totalSupply()\n  }\n\n  const handleAddETHi = () => {\n    addToken(ETHI_ADDRESS, 'ETHi', 18)\n  }\n\n  return (\n    <div className={classes.container}>\n      <GridContainer spacing={0}>\n        <GridItem xs={2} sm={2} md={3} style={{ paddingLeft: '2rem' }}>\n          <List>\n            <ListItem key=\"My Account\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.account)}>\n              <ListItemIcon>\n                <AccountBalanceWalletIcon style={{ color: current === INVEST_TAB.account ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'My Account'} className={classNames(current === INVEST_TAB.account ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem\n              key=\"Deposit\"\n              button\n              className={classNames(classes.item, current === INVEST_TAB.deposit && classes.check)}\n              onClick={() => setCurrent(INVEST_TAB.deposit)}\n            >\n              <ListItemIcon>\n                <SaveAltIcon style={{ color: current === INVEST_TAB.deposit ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Deposit'} className={classNames(current === INVEST_TAB.deposit ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n            <ListItem key=\"Withdraw\" button className={classNames(classes.item)} onClick={() => setCurrent(INVEST_TAB.withdraw)}>\n              <ListItemIcon>\n                <UndoIcon style={{ color: current === INVEST_TAB.withdraw ? '#A68EFE' : '#fff' }} />\n              </ListItemIcon>\n              {!isLayoutSm && (\n                <ListItemText primary={'Withdraw'} className={classNames(current === INVEST_TAB.withdraw ? classes.check : classes.text)} />\n              )}\n            </ListItem>\n          </List>\n        </GridItem>\n        {current === INVEST_TAB.deposit && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Deposit\n                address={address}\n                ethBalance={ethBalance}\n                ethDecimals={ethDecimals}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                vaultBufferBalance={vaultBufferBalance}\n                vaultBufferDecimals={vaultBufferDecimals}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n                minimumInvestmentAmount={minimumInvestmentAmount}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.withdraw && (\n          <GridItem xs={9} sm={9} md={6}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper}>\n              <Withdraw\n                address={address}\n                exchangeManager={exchangeManager}\n                ethiBalance={ethiBalance}\n                ethiDecimals={ethiDecimals}\n                userProvider={userProvider}\n                VAULT_ADDRESS={VAULT_ADDRESS}\n                ETH_ADDRESS={ETH_ADDRESS}\n                VAULT_ABI={VAULT_ABI}\n                IERC20_ABI={IERC20_ABI}\n                EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\n                EXCHANGE_ADAPTER_ABI={EXCHANGE_ADAPTER_ABI}\n                PRICE_ORCALE_ABI={PRICE_ORCALE_ABI}\n                isBalanceLoading={isBalanceLoading}\n                reloadBalance={loadCoinsBalance}\n              />\n            </div>\n          </GridItem>\n        )}\n        {current === INVEST_TAB.account && (\n          <GridItem xs={9} sm={9} md={9}>\n            <div className={isLayoutSm ? classes.wrapperMobile : classes.wrapper} style={{ background: 'none', paddingTop: '1rem', paddingLeft: 0 }}>\n              <Card className={classes.balanceCard}>\n                <div className={classes.balanceCardItem}>\n                  <div className={classes.balanceCardValue}>\n                    <span\n                      title={formatBalance(ethiBalance, ethiDecimals, {\n                        showAll: true\n                      })}\n                    >\n                      <Loading loading={isBalanceLoading}>{formatBalance(ethiBalance, ethiDecimals)}</Loading>\n                    </span>\n                    <span className={classes.symbol}>WETH</span>\n                    {userProvider && (\n                      <span title=\"Add token address to wallet\">\n                        <AddCircleOutlineIcon className={classes.addTokenIcon} onClick={handleAddETHi} fontSize=\"small\" />\n                      </span>\n                    )}\n                  </div>\n                  <div className={classes.balanceCardLabel}>AVAILABLE BALANCE</div>\n                </div>\n              </Card>\n              {!isEmpty(address) && !isEmpty(personalVaultAddress) && (\n                <MyStatement address={address} chain={`${CHAIN_ID}`} VAULT_ADDRESS={VAULT_ADDRESS} type={'ETHi'} />\n              )}\n            </div>\n          </GridItem>\n        )}\n        <Modal className={classes.modal} open={isVisiable} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n          <Paper elevation={3}>\n            <MyVault\n              setPersonalVaultAddress={v => {\n                setIsVisiable(false)\n                setPersonalVaultAddress(v)\n              }}\n            />\n          </Paper>\n        </Modal>\n      </GridContainer>\n    </div>\n  )\n}\n\nexport default useVersionWapper(Ethr, 'ethr')\n","// === Utils === //\nimport parser from 'cron-parser'\nimport min from 'lodash/min'\n\n// === Constants === //\nimport { DO_HARDWORK_CRON, DO_ALLOCATION_CRON } from '@/constants/cron'\n\nvar options = {\n  tz: 'Asia/Shanghai'\n}\n\n/**\n * get next dohardwork time\n */\nexport const getLastDohardworkTime = () => {\n  const dohardworkCron = parser.parseExpression(DO_HARDWORK_CRON, options)\n  const nextDohardworkTime = dohardworkCron.next().getTime()\n  return nextDohardworkTime\n}\n\n/**\n * get next allocation time\n */\nexport const getLastAllocationTime = () => {\n  const allocationCron = parser.parseExpression(DO_ALLOCATION_CRON, options)\n  const nextAllocationTime = allocationCron.next().getTime()\n  return nextAllocationTime\n}\n\n/**\n * get next rebase time\n */\nexport const getLastPossibleRebaseTime = () => {\n  return min([getLastDohardworkTime(), getLastAllocationTime()])\n}\n","export const DO_HARDWORK_CRON = '0 0 7 * * 0,2,3,4,5,6'\nexport const DO_ALLOCATION_CRON = '0 0 7 * * 1'\n","const style = {\n  selectWrapper: {\n    height: '51px',\n    position: 'relative',\n    lineHeight: '51px'\n  },\n  selectTrigger: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: '100%',\n    cursor: 'pointer',\n    border: '1px solid #666666',\n    borderRadius: '20px',\n    paddingLeft: 16,\n    paddingRight: 24\n  },\n  disabled: {\n    backgroundColor: '#313036'\n  },\n  triggerLabelWrapper: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  triggerLabel: {\n    color: '#A0A0A0',\n    fontWeight: 'bold'\n  },\n  caret: {\n    color: '#A68EFE',\n    transition: 'all 150ms ease-in'\n  },\n  expandLess: {\n    transform: 'rotate(180deg)'\n  },\n  selectPop: {\n    display: 'none',\n    position: 'absolute',\n    left: '50%',\n    top: '100%',\n    minWidth: '206px',\n    marginTop: '12px',\n    padding: '8px 0',\n    zIndex: 100,\n    background: '#292b2e',\n    borderRadius: '12px',\n    transformOrigin: 'top',\n    transform: 'translate(-50%, 0)',\n    boxShadow: '0 0 0px 1px rgba(161, 161, 161, 0.2)'\n  },\n  selectPopVisible: {\n    display: 'block'\n  },\n  selectItem: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 24px',\n    cursor: 'pointer',\n\n    '&:hover': {\n      background: '#323438'\n    }\n  },\n  optImg: {\n    width: 'auto',\n    height: '30px',\n    marginRight: '8px',\n    borderRadius: '50%'\n  },\n  optMultiImgWrapper: {\n    height: '30px',\n    whiteSpace: 'nowrap'\n  },\n  optMultiImg: {\n    width: 'auto',\n    height: '30px',\n    borderRadius: '50%',\n    marginLeft: '-12px',\n    '&:first-child': {\n      marginLeft: 0\n    },\n    '&:last-child': {\n      marginRight: '8px'\n    }\n  },\n  optLabel: {\n    color: '#A0A0A0'\n  }\n}\n\nexport default style\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport map from 'lodash/map'\nimport find from 'lodash/find'\nimport isArray from 'lodash/isArray'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport styles from './style'\n\nconst useStyles = makeStyles(styles)\n\nfunction Select({ value, onChange = () => {}, options = [], disabled, className }) {\n  const [popVisible, setPopVisible] = useState(false)\n  const classes = useStyles()\n  const selectedOpt = find(options, opt => opt.value === value) || {}\n  const handleClickAway = () => {\n    setPopVisible(false)\n  }\n\n  const handleTogglePop = () => {\n    if (disabled) return\n    setPopVisible(!popVisible)\n  }\n\n  const handlePopSelect = value => {\n    setPopVisible(false)\n    onChange(value)\n  }\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <div className={classNames(classes.selectWrapper, className)}>\n        <div\n          className={classNames(classes.selectTrigger, {\n            [classes.disabled]: disabled\n          })}\n          onClick={handleTogglePop}\n        >\n          <div className={classes.triggerLabelWrapper}>\n            {selectedOpt.img &&\n              (!isArray(selectedOpt.img) ? (\n                <img className={classes.optImg} src={selectedOpt.img} alt=\"logo\" />\n              ) : (\n                <div className={classes.optMultiImgWrapper}>\n                  {map(selectedOpt.img, img => (\n                    <img key={img} className={classes.optMultiImg} src={img} alt=\"logo\" />\n                  ))}\n                </div>\n              ))}\n            <span className={classes.triggerLabel}>{selectedOpt.label}</span>\n          </div>\n          {!disabled && (\n            <ExpandMoreIcon\n              className={classNames(classes.caret, {\n                [classes.expandLess]: popVisible\n              })}\n            />\n          )}\n        </div>\n        <ul\n          className={classNames(classes.selectPop, {\n            [classes.selectPopVisible]: popVisible\n          })}\n        >\n          {map(options, opt => (\n            <li\n              key={opt.value}\n              className={classNames(classes.selectItem, {\n                [classes.selectActiveItem]: value === opt.value\n              })}\n              onClick={() => handlePopSelect(opt.value)}\n            >\n              {opt.img &&\n                (!isArray(opt.img) ? (\n                  <img className={classes.optImg} src={opt.img} alt=\"logo\" />\n                ) : (\n                  <div className={classes.optMultiImgWrapper}>\n                    {map(opt.img, img => (\n                      <img key={img} className={classes.optMultiImg} src={img} alt=\"logo\" />\n                    ))}\n                  </div>\n                ))}\n              <span className={classes.optLabel}>{opt.label}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\nconst { Contract, BigNumber } = ethers\n\nconst useRedeemFeeBps = props => {\n  const { userProvider, VAULT_ADDRESS, VAULT_ABI } = props\n  const [value, setValue] = useState(BigNumber.from(0))\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n\n  const reload = () => {\n    setLoading(true)\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    vaultContract\n      .redeemFeeBps()\n      .then(setValue)\n      .catch(setError)\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    if (isEmpty(userProvider) || isEmpty(VAULT_ADDRESS)) {\n      setLoading(false)\n      setError()\n      return\n    }\n    reload()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userProvider, VAULT_ADDRESS])\n\n  return {\n    value,\n    loading,\n    error,\n    reload\n  }\n}\n\nexport default useRedeemFeeBps\n","import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\n// === Hooks === //\nimport useUserAddress from './useUserAddress'\n\nconst { Contract } = ethers\n\nconst useVault = (VAULT_ADDRESS, VAULT_ABI, userProvider) => {\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n  const [exchangeManager, setExchangeManager] = useState('')\n  const [decimals, setDecimals] = useState(ethers.BigNumber.from(0))\n  const [totalAsset, setTotalAsset] = useState(ethers.BigNumber.from(0))\n  const [rebaseThreshold, setRebaseThreshold] = useState(ethers.BigNumber.from(0))\n  const [underlyingUnitsPerShare, setUnderlyingUnitsPerShare] = useState(ethers.BigNumber.from(0))\n  const [minimumInvestmentAmount, setMinimumInvestmentAmount] = useState(ethers.BigNumber.from(0))\n\n  const address = useUserAddress(userProvider)\n\n  const valid = () => {\n    if (isEmpty(VAULT_ADDRESS)) return new Error('VAULT_ADDRESS is need!')\n    if (isEmpty(VAULT_ABI)) return new Error('VAULT_ABI is need!')\n    if (isEmpty(userProvider)) return new Error('userProvider is need!')\n  }\n\n  /**\n   * query vault base info\n   * @returns\n   */\n  const queryBaseInfo = () => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const requestArray = [\n      vaultContract.totalAssets().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.totalDebt().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.rebaseThreshold().catch(() => ethers.BigNumber.from(0)),\n      vaultContract.minimumInvestmentAmount(),\n      vaultContract.exchangeManager(),\n      fetchUnderlyingUnitsPerShare()\n    ]\n    return Promise.all(requestArray)\n      .then(([totalAsset, decimals, rebaseThreshold, minimumInvestmentAmount, exchangeManager]) => {\n        setTotalAsset(totalAsset)\n        setDecimals(decimals)\n        setRebaseThreshold(rebaseThreshold)\n        setMinimumInvestmentAmount(minimumInvestmentAmount)\n        setExchangeManager(exchangeManager)\n        return {\n          totalAsset,\n          decimals,\n          rebaseThreshold\n        }\n      })\n      .catch(setError)\n      .finally(() => setLoading(false))\n  }\n\n  const updateRebaseThreshold = value => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    vaultContract\n      .connect(signer)\n      .setRebaseThreshold(value)\n      .then(tx => tx.wait())\n      .finally(() => setLoading(false))\n  }\n\n  const updateMinimumInvestmentAmount = value => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultContract = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    const signer = userProvider.getSigner()\n    vaultContract\n      .connect(signer)\n      .setMinimumInvestmentAmount(value)\n      .then(tx => tx.wait())\n      .finally(() => setLoading(false))\n  }\n\n  const fetchUnderlyingUnitsPerShare = () => {\n    const vaultContract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n    setLoading(true)\n    vaultContract\n      .underlyingUnitsPerShare()\n      .catch(setError)\n      .then(setUnderlyingUnitsPerShare)\n      .finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    const error = valid()\n    if (error) {\n      setLoading(false)\n      setError()\n      return\n    }\n    queryBaseInfo()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  return {\n    loading,\n    error,\n    totalAsset,\n    decimals,\n    exchangeManager,\n    minimumInvestmentAmount,\n    fetchUnderlyingUnitsPerShare,\n    rebaseThreshold,\n    queryBaseInfo,\n    updateRebaseThreshold,\n    updateMinimumInvestmentAmount,\n    underlyingUnitsPerShare\n  }\n}\n\nexport default useVault\n","// === Utils === //\nimport get from 'lodash/get'\nimport isEmpty from 'lodash/isEmpty'\nimport isNumber from 'lodash/isNumber'\nimport isString from 'lodash/isString'\nimport reduce from 'lodash/reduce'\n\nexport const ONEINCH_V4 = 'oneInchV4'\nexport const PARASWAP = 'paraswap'\n\nexport const SUPPORTS = [PARASWAP, ONEINCH_V4]\nexport const getProtocolsFromBestRouter = (bestSwapInfo = {}) => {\n  if (isEmpty(bestSwapInfo) || isNumber(bestSwapInfo) || isString(bestSwapInfo)) return []\n  const { name, bestRoute } = bestSwapInfo\n  if (SUPPORTS.includes(name)) {\n    let func\n    switch (name) {\n      case ONEINCH_V4:\n        func = getProtocolsFromBestRouterFor1inchV4\n        break\n      case PARASWAP:\n        func = getProtocolsFromBestRouterForParaswap\n        break\n      default:\n    }\n    return func(bestRoute)\n  }\n  throw new Error('not support')\n}\n\nexport const getProtocolsFromBestRouterFor1inchV4 = bestRoute => {\n  const nextProtocols = []\n  const resp = get(bestRoute, '0.0.0')\n  if (isEmpty(resp)) return nextProtocols\n  const { name } = resp\n  nextProtocols.push(name)\n  return nextProtocols\n}\n\nexport const getProtocolsFromBestRouterForParaswap = bestRoute => {\n  const nextProtocols = reduce(\n    bestRoute,\n    (result, element) => {\n      const name = get(element, 'swaps[0].swapExchanges[0].exchange', '')\n      result.push(name)\n      return result\n    },\n    []\n  )\n  return nextProtocols\n}\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  main: {\n    padding: '2rem 3rem',\n    color: '#A0A0A0',\n    background: 'linear-gradient(111.68deg, #2C2F36 7.59%, #333437 102.04%)',\n    borderRadius: '2.5rem'\n  },\n  title: {\n    paddingBottom: '1.5rem',\n    fontSize: '1.5rem',\n    lineHeight: '1.5rem',\n    textAlign: 'center'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  approveContainer: {\n    maxHeight: '20rem',\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0.5rem 0.5rem 0px 0px',\n    backgroundColor: '#1F2023',\n    overflowY: 'auto'\n  },\n  approveItemWrapper: {\n    paddingBottom: '0.5rem',\n    '&:last-child': {\n      padding: 0\n    }\n  },\n  success: {\n    border: '1px solid forestgreen'\n  },\n  swappingContainer: {\n    margin: 0,\n    color: '#A68EFD',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapSuccessContainer: {\n    margin: 0,\n    color: '#56CC8C',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapErrorContainer: {\n    height: '2rem',\n    border: '1px solid #F36767',\n    borderRadius: '0.625rem',\n    margin: 0,\n    color: '#F36767',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '2rem',\n    cursor: 'pointer'\n  },\n  approveItem: {\n    textAlign: 'left',\n    display: 'flex'\n  },\n  approveButton: {\n    margin: '12px 8px 8px'\n  },\n  balanceText: {\n    textAlign: 'left',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  errorText: {\n    color: '#ff7875'\n  },\n  errorContainer: {\n    border: '1px solid #ff7875',\n    margin: '2px 0'\n  },\n  successContainer: {\n    border: '1px solid forestgreen',\n    margin: '2px 0'\n  },\n  isSwappingContainer: {\n    border: '1px solid #A68EFE',\n    margin: '2px 0'\n  },\n  reciveContainer: {\n    background: 'linear-gradient(223.3deg, #A68EFD 20.71%, #F4ACF3 103.56%)'\n  },\n  slippage: {\n    padding: '0 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0px 0px 0.5rem 0.5rem',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  slippageTitlte: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  estimateContainer: {\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  estimateTitle: {\n    paddingBottom: '0.75rem'\n  },\n  estimateBalance: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  tokenList: {\n    padding: '0.5rem',\n    overflow: 'auto',\n    border: '1px solid rgb(166, 142, 254)',\n    borderRadius: '0.5rem'\n  },\n  arrow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    marginTop: '0.625rem'\n  },\n  okWrapper: {\n    paddingLeft: '1rem'\n  },\n  okButton: {\n    width: '100%'\n  },\n  cancelButton: {\n    width: '100%'\n  },\n  addToken: {\n    cursor: 'pointer'\n  },\n  swapError: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '1rem',\n    color: '#ff7875',\n    textAlign: 'left'\n  },\n  textOverflow: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  loading: {\n    animation: 'loading 1s linear infinite'\n  },\n  reloadIcon: {\n    cursor: 'pointer',\n    verticalAlign: 'text-bottom'\n  }\n})\n\nexport default componentsStyle\n","/* eslint-disable */\nimport React, { useCallback, useState, useEffect, forwardRef, useImperativeHandle } from 'react'\nimport classNames from 'classnames'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// === Components === //\nimport CustomTextField from '@/components/CustomTextField'\nimport Loading from '@/components/LoadingComponent'\nimport AddIcon from '@material-ui/icons/Add'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport get from 'lodash/get'\nimport map from 'lodash/map'\nimport some from 'lodash/some'\nimport size from 'lodash/size'\nimport uniq from 'lodash/uniq'\nimport first from 'lodash/first'\nimport isNil from 'lodash/isNil'\nimport every from 'lodash/every'\nimport assign from 'lodash/assign'\nimport reduce from 'lodash/reduce'\nimport isEmpty from 'lodash/isEmpty'\nimport debounce from 'lodash/debounce'\nimport compact from 'lodash/compact'\nimport findIndex from 'lodash/findIndex'\nimport isEqual from 'lodash/isEqual'\nimport isNumber from 'lodash/isNumber'\nimport min from 'lodash/min'\nimport { addToken } from '@/helpers/wallet'\nimport { toFixed } from '@/helpers/number-format'\nimport { getBestSwapInfo } from 'piggy-finance-utils'\nimport BN from 'bignumber.js'\nimport { warmDialog } from '@/reducers/meta-reducer'\nimport { getProtocolsFromBestRouter } from '@/helpers/swap-util'\nimport { errorTextOutput, isLossMuch } from '@/helpers/error-handler'\n\n// === Constants === //\nimport {\n  IERC20_ABI,\n  EXCHANGE_EXTRA_PARAMS,\n  ORACLE_ADDITIONAL_SLIPPAGE,\n  USDT_ADDRESS,\n  USDC_ADDRESS,\n  DAI_ADDRESS,\n  MULTIPLE_OF_GAS,\n  MAX_GAS_LIMIT\n} from '@/constants'\nimport { ETH_ADDRESS, WETH_ADDRESS } from '@/constants/tokens'\nimport { BN_6, BN_18 } from '@/constants/big-number'\n\n// === Styles === //\nimport styles from './style'\nlet sycIndex = 0\n\nconst { Contract, BigNumber } = ethers\nconst useStyles = makeStyles(styles)\nconst MAX_RETRY_TIME = 2\nconst BN_0 = BigNumber.from('0')\n\nconst TokenItem = (props, ref) => {\n  const classes = useStyles()\n  const {\n    token = {},\n    userAddress,\n    userProvider,\n    slippage,\n    receiveToken,\n    exchangePlatformAdapters,\n    exchangeManager,\n    receiveTokenDecimals,\n    EXCHANGE_AGGREGATOR_ABI,\n    style,\n    disabled,\n    onChange,\n    onStaticCallFinish\n  } = props\n  const { address, amount } = token\n\n  const [isReload, setIsReload] = useState(false)\n  const [value, setValue] = useState('')\n  const [balance, setBalance] = useState(BN_0)\n  const [decimals, setDecimals] = useState(0)\n  const [allowances, setAllowances] = useState(BN_0)\n  const [exclude, setExclude] = useState({})\n  const [swapInfo, setSwapInfo] = useState(undefined)\n  const [isSwapInfoFetching, setIsSwapInfoFetching] = useState(false)\n  const [isStaticCalling, setIsStaticCalling] = useState(false)\n  const [done, setDone] = useState(false)\n  const [retryTimes, setRetryTimes] = useState(0)\n  const [isApproving, setIsApproving] = useState(false)\n\n  const isReciveToken = token.address === receiveToken\n  const isFetching = !isReciveToken && (isSwapInfoFetching || isStaticCalling)\n  const isOverMaxRetry = retryTimes > MAX_RETRY_TIME\n\n  console.groupCollapsed(`init state:${address}:${sycIndex++}`)\n  console.log('isReload=', isReload)\n  console.log('value=', value)\n  console.log('balance=', balance.toString())\n  console.log('decimals=', decimals.toString())\n  console.log('allowances=', allowances.toString())\n  console.log('exclude=', exclude)\n  console.log('swapInfo=', swapInfo)\n  console.log('isSwapInfoFetching=', isSwapInfoFetching)\n  console.log('isStaticCalling=', isStaticCalling)\n  console.log('done=', done)\n  console.log('retryTimes=', retryTimes)\n  console.log('isApproving=', isApproving)\n  console.log('isReciveToken=', isReciveToken)\n  console.log('userAddress=', userAddress)\n  console.log('slippage=', slippage)\n  console.log('token=', token)\n  console.log('exchangePlatformAdapters=', exchangePlatformAdapters)\n  console.log('exchangeManager=', exchangeManager)\n  console.log('receiveTokenDecimals=', receiveTokenDecimals.toString())\n  console.groupEnd(`init state:${address}:${sycIndex++}`)\n\n  const resetState = useCallback(() => {\n    setIsReload(false)\n    setExclude({})\n    setSwapInfo(undefined)\n    setIsSwapInfoFetching(false)\n    setIsStaticCalling(false)\n    setDone(false)\n    setRetryTimes(0)\n    setIsApproving(false)\n    setTimeout(() => {\n      onChange()\n    })\n  }, [])\n\n  const isApproveEnough = useCallback(() => {\n    if (token.address === ETH_ADDRESS || isReciveToken) return true\n    try {\n      const nextValue = new BN(value).multipliedBy(decimals.toString())\n      const result = nextValue.lte(allowances)\n      return result\n    } catch (error) {\n      return false\n    }\n  }, [token, value, allowances, decimals, isReciveToken])\n\n  const staticCall = useCallback(\n    debounce(() => {\n      console.groupCollapsed(`staticCall call:${address}:${++sycIndex}`)\n      console.log('swapInfo=', swapInfo)\n      const constract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\n      const signer = userProvider.getSigner()\n      const constractWithSigner = constract.connect(signer)\n\n      const {\n        bestSwapInfo: { platform, method, encodeExchangeArgs },\n        info\n      } = swapInfo\n\n      setIsStaticCalling(true)\n      setIsSwapInfoFetching(false)\n      onChange()\n      constractWithSigner.callStatic\n        .swap(platform, method, encodeExchangeArgs, info)\n        .then(() => {\n          console.log('staticCall success')\n          console.groupEnd(`staticCall call:${address}:${sycIndex}`)\n          setDone(true)\n          onStaticCallFinish(true)\n        })\n        .catch(error => {\n          console.log('staticCall error', error)\n          console.groupEnd(`staticCall call:${address}:${sycIndex}`)\n          const { bestSwapInfo } = swapInfo\n          const [arrayItem] = getProtocolsFromBestRouter(bestSwapInfo)\n          const { name } = bestSwapInfo\n          const oldPlatform = exclude[name] || [arrayItem]\n          const newPlatform = oldPlatform.includes(arrayItem) ? oldPlatform : oldPlatform.concat([arrayItem])\n          const nextExclude = {\n            ...exclude,\n            [name]: newPlatform\n          }\n          setExclude(nextExclude)\n          setSwapInfo(undefined)\n          setRetryTimes(retryTimes + 1)\n          setDone(false)\n          setIsSwapInfoFetching(retryTimes + 1 <= MAX_RETRY_TIME)\n          onStaticCallFinish(false)\n        })\n        .finally(() => {\n          setIsStaticCalling(false)\n          onChange()\n        })\n    }, 500),\n    [userProvider, swapInfo, onChange, exclude, retryTimes, onStaticCallFinish]\n  )\n\n  const approve = async () => {\n    // ETH no need approve\n    if (isEmpty(token) || isNil(value) || value === '0') return\n    console.groupCollapsed(`approve call:${address}:${++sycIndex}`)\n    const signer = userProvider.getSigner()\n    const contract = new Contract(address, IERC20_ABI, userProvider)\n    const contractWithUser = contract.connect(signer)\n    let nextValue\n    try {\n      nextValue = BigNumber.from(new BN(value).multipliedBy(decimals.toString()).toFixed())\n    } catch (e) {\n      return\n    }\n    const allowanceAmount = await contractWithUser.allowance(userAddress, exchangeManager)\n    // If deposit amount greater than allow amount, reset amount\n    if (nextValue.gt(allowanceAmount)) {\n      // If allowance equal 0, approve nextAmount, otherwise increaseAllowance\n      if (allowanceAmount.gt(0)) {\n        if (address === WETH_ADDRESS) {\n          // WETH don't support increaseAllowance\n          return contractWithUser\n            .approve(exchangeManager, 0)\n            .then(tx => tx.wait())\n            .then(() => {\n              reload()\n              return contractWithUser.approve(exchangeManager, nextValue).then(tx => tx.wait())\n            })\n        }\n        return contractWithUser\n          .increaseAllowance(exchangeManager, nextValue.sub(allowanceAmount))\n          .then(tx => tx.wait())\n          .catch(e => {\n            // cancel by user\n            if (e.code === 4001) {\n              return Promise.reject(e)\n            }\n            // If increase failed, approve 0 and approve nextAmounts\n            return contractWithUser\n              .approve(exchangeManager, 0)\n              .then(tx => tx.wait())\n              .then(() => {\n                reload()\n                return contractWithUser.approve(exchangeManager, nextValue).then(tx => tx.wait())\n              })\n          })\n      } else {\n        return contractWithUser\n          .approve(exchangeManager, nextValue)\n          .then(tx => tx.wait())\n          .catch(e => {\n            // cancel by user\n            if (e.code === 4001) {\n              return Promise.reject(e)\n            }\n          })\n      }\n    }\n    console.groupEnd(`approve call:${address}:${sycIndex}`)\n  }\n\n  // item fetch swap path failed\n  const isSwapError = !isFetching && !isReciveToken && isOverMaxRetry\n\n  // Check if value is gt balance, or lt 1 decimal\n  const isErrorValue = () => {\n    if (!value) {\n      return false\n    }\n    if (!decimals) {\n      return false\n    }\n    const nextFromValueString = new BN(value).multipliedBy(decimals.toString())\n    return !isReciveToken && !isEmpty(value) && (nextFromValueString.gt(balance) || nextFromValueString.toFixed().indexOf('.') !== -1)\n  }\n\n  // Check if value is empty\n  const isEmptyValue = () => {\n    return !isReciveToken && (isEmpty(value) || Number(value) === 0)\n  }\n\n  // check the slippage is valid or not\n  const isValidSlippage = () => {\n    if (isNaN(slippage)) return false\n    if (slippage < 0.01 || slippage > 45) return false\n    return true\n  }\n\n  const handleInputChange = value => {\n    const num = Number(value)\n    if (isNaN(num) || num < 0) {\n      return\n    }\n    setValue(value)\n    setSwapInfo(undefined)\n    setIsStaticCalling(false)\n    setRetryTimes(0)\n    setExclude({})\n    setDone(false)\n    setTimeout(() => {\n      onChange()\n    })\n  }\n\n  const reload = useCallback(async () => {\n    const { address } = token\n    console.groupCollapsed(`reload call:${address}:${++sycIndex}`)\n    setIsReload(true)\n\n    const contract = new Contract(address, IERC20_ABI, userProvider)\n    const nextAllowance = (await contract.allowance(userAddress, exchangeManager).catch(() => BN_0)).toString()\n    const nextBalance = (await contract.balanceOf(userAddress).catch(() => BN_0)).toString()\n    const nextDecimals = BigNumber.from(10).pow(await contract.decimals().catch(() => BN_0))\n\n    setBalance(nextBalance)\n    setDecimals(nextDecimals)\n    setAllowances(nextAllowance)\n    setIsReload(false)\n    console.groupEnd(`reload call:${address}:${sycIndex}`)\n  }, [token, userAddress, exchangeManager])\n\n  const reloadSwap = () => {\n    console.groupCollapsed(`reloadSwap call:${address}:${++sycIndex}`)\n    setSwapInfo(undefined)\n    setIsSwapInfoFetching(true)\n    setRetryTimes(0)\n    onStaticCallFinish(undefined)\n    console.groupEnd(`reloadSwap call:${address}:${sycIndex}`)\n  }\n\n  const queryBestSwapInfo = useCallback(async () => {\n    if (isNil(decimals) || isEmptyValue() || value === '0' || isReciveToken) {\n      return\n    }\n    console.groupCollapsed(`queryBestSwapInfo call:${address}:${++sycIndex}`)\n    console.log('exclude=', exclude)\n    console.log('value=', value)\n    console.log('swapInfo=', swapInfo)\n    const nextFromValueString = new BN(value).multipliedBy(decimals.toString()).toFixed()\n    if (nextFromValueString.indexOf('.') !== -1) return\n    const swapAmount = BigNumber.from(nextFromValueString)\n    let fromToken = {}\n    let toToken = {}\n    if (token.address === ETH_ADDRESS) {\n      fromToken = {\n        decimals: 18,\n        address: token.address\n      }\n    } else {\n      const fromTokenConstract = new Contract(token.address, IERC20_ABI, userProvider)\n      fromToken = {\n        decimals: parseInt((await fromTokenConstract.decimals()).toString()),\n        address: token.address\n      }\n    }\n    if (receiveToken === ETH_ADDRESS) {\n      toToken = {\n        decimals: 18,\n        address: receiveToken\n      }\n    } else {\n      const toTokenConstract = new Contract(receiveToken, IERC20_ABI, userProvider)\n      toToken = {\n        decimals: parseInt((await toTokenConstract.decimals()).toString()),\n        address: receiveToken\n      }\n    }\n    console.groupCollapsed(`fetch best swap path: ${fromToken.address}-${toToken.address}:${swapAmount}:${++sycIndex}`)\n    let nextExchangeExtraParams = assign({}, EXCHANGE_EXTRA_PARAMS, isEmpty(exchangePlatformAdapters.testAdapter) ? {} : {})\n\n    if (!isEmpty(exclude)) {\n      console.log(`exclude=`, exclude)\n      const { oneInchV4 = [], paraswap = [] } = exclude\n      nextExchangeExtraParams = assign({}, nextExchangeExtraParams, {\n        oneInchV4: {\n          ...nextExchangeExtraParams.oneInchV4,\n          excludeProtocols: uniq(oneInchV4.concat(nextExchangeExtraParams.oneInchV4.excludeProtocols))\n        },\n        paraswap: {\n          ...nextExchangeExtraParams.paraswap,\n          excludeDEXS: uniq([...paraswap, nextExchangeExtraParams.paraswap.excludeDEXS.split(',')]).join(',')\n        }\n      })\n    }\n    const bestSwapInfo = await getBestSwapInfo(\n      fromToken,\n      toToken,\n      swapAmount,\n      parseInt(100 * parseFloat(slippage)) || 0,\n      ORACLE_ADDITIONAL_SLIPPAGE,\n      exchangePlatformAdapters,\n      nextExchangeExtraParams\n    ).catch(error => {\n      throw new Error(error)\n    })\n    console.groupEnd(`fetch best swap path: ${fromToken.address}-${toToken.address}:${swapAmount}:${sycIndex}`)\n    if (isEmpty(bestSwapInfo)) {\n      throw new Error('fetch error')\n    }\n    console.groupEnd(`queryBestSwapInfo call:${sycIndex}`)\n    return {\n      bestSwapInfo,\n      info: {\n        amount: swapAmount,\n        srcToken: token.address,\n        dstToken: receiveToken,\n        receiver: userAddress\n      }\n    }\n  }, [token, value, decimals, exchangePlatformAdapters, exclude, receiveToken, isReciveToken, slippage])\n\n  const estimateWithValue = useCallback(\n    debounce(async () => {\n      if (isEmptyValue()) {\n        onChange()\n        return\n      }\n      console.groupCollapsed(`estimateWithValue call:${address}:${++sycIndex}`)\n      setIsSwapInfoFetching(true)\n      onChange()\n      await queryBestSwapInfo()\n        .then(nextSwapInfo => {\n          console.log('estimateWithValue call success')\n          console.groupEnd(`estimateWithValue call:${address}:${sycIndex}`)\n          setSwapInfo(nextSwapInfo)\n          if (!isApproveEnough()) {\n            setIsSwapInfoFetching(false)\n          }\n        })\n        .catch(() => {\n          console.log('estimateWithValue call error')\n          console.groupEnd(`estimateWithValue call:${address}:${sycIndex}`)\n          if (isOverMaxRetry) {\n            setIsSwapInfoFetching(false)\n          } else {\n            setRetryTimes(retryTimes + 1)\n            setIsSwapInfoFetching(retryTimes + 1 <= MAX_RETRY_TIME)\n          }\n        })\n        .finally(() => {\n          onChange()\n        })\n    }, 500),\n    [exchangeManager, token, decimals, retryTimes, queryBestSwapInfo, onChange]\n  )\n\n  useEffect(resetState, [receiveToken, slippage])\n\n  useEffect(() => {\n    setValue(toFixed(token.amount, decimals))\n  }, [token, decimals.toString()])\n\n  useEffect(() => {\n    reload()\n    // TODO: 待开启\n    // const timer = setInterval(reload, 3000)\n    // return () => clearInterval(timer)\n  }, [reload])\n\n  const isGetSwapInfoSuccess = !isSwapInfoFetching && !isEmpty(swapInfo) && !isOverMaxRetry\n\n  // staticcall success or getswapinfo success\n  const isSwapSuccess =\n    !isFetching && !isReciveToken && ((isApproveEnough() && done) || (!isApproveEnough() && !isEmpty(swapInfo))) && !isOverMaxRetry\n\n  useEffect(() => {\n    console.groupCollapsed(`estimateWithValue useEffect call:${address}:${++sycIndex}`)\n    const isValidSlippageValue = isValidSlippage()\n    console.log('isReload=', isReload)\n    console.log('swapInfo=', swapInfo)\n    console.log('isValidSlippage()=', isValidSlippageValue)\n    console.log('isGetSwapInfoSuccess=', isGetSwapInfoSuccess)\n    if (\n      isReciveToken ||\n      isReload ||\n      !isValidSlippageValue ||\n      isEmpty(exchangePlatformAdapters) ||\n      isGetSwapInfoSuccess ||\n      isOverMaxRetry ||\n      isErrorValue() ||\n      isEmptyValue()\n    ) {\n      console.log('estimateWithValue useEffect return')\n      console.groupEnd(`estimateWithValue useEffect call:${address}:${sycIndex}`)\n      return\n    }\n    console.groupEnd(`estimateWithValue useEffect call:${address}:${sycIndex}`)\n    estimateWithValue()\n    return () => estimateWithValue.cancel()\n  }, [isReload, value, swapInfo, estimateWithValue, retryTimes, isSwapInfoFetching])\n\n  useEffect(() => {\n    console.groupCollapsed(`staticCall useEffect call:${address}:${++sycIndex}`)\n    const isApproveEnoughValue = isApproveEnough()\n    console.log('done=', done)\n    console.log('retryTimes=', retryTimes)\n    console.log('isApproveEnoughValue=', isApproveEnoughValue)\n    console.log('swapInfo=', swapInfo)\n    console.log('isStaticCalling=', isStaticCalling)\n    console.log('isOverMaxRetry=', isOverMaxRetry)\n    console.log('isReciveToken=', isReciveToken)\n    if (\n      isReciveToken ||\n      done ||\n      isEmpty(swapInfo) ||\n      !isApproveEnoughValue ||\n      isStaticCalling ||\n      isOverMaxRetry ||\n      isErrorValue() ||\n      isEmptyValue()\n    ) {\n      console.log('staticCall useEffect return')\n      console.groupEnd(`staticCall useEffect call:${address}:${sycIndex}`)\n      return\n    }\n    console.groupEnd(`staticCall useEffect call:${address}:${sycIndex}`)\n    staticCall()\n  }, [done, value, retryTimes, swapInfo, staticCall, isStaticCalling, isApproveEnough])\n\n  useImperativeHandle(ref, () => {\n    return {\n      approve: () => approve().then(reload),\n      value,\n      isApproving,\n      isFetching,\n      swapInfo,\n      done,\n      isApproveEnough,\n      retryTimes,\n      isErrorValue,\n      isEmptyValue\n    }\n  })\n\n  return (\n    <div key={address} className={classNames(classes.approveItemWrapper)} style={style}>\n      <div className={classes.approveItem}>\n        <CustomTextField\n          classes={{ root: classes.input }}\n          placeholder=\"approve amount\"\n          maxEndAdornment\n          InputProps={{\n            startAdornment: (\n              <div className={classes.addToken} onClick={() => addToken(address)}>\n                {address !== ETH_ADDRESS && <AddIcon fontSize=\"small\" style={{ position: 'absolute', top: 28, left: 35 }} />}\n                <img className={classes.tokenLogo} src={`./images/${address}.png`} />\n              </div>\n            )\n          }}\n          disabled={disabled || isReciveToken || isFetching}\n          error={isErrorValue()}\n          value={value}\n          onChange={event => handleInputChange(event.target.value)}\n          onMaxClick={() => handleInputChange(toFixed(balance, decimals))}\n        />\n      </div>\n      {!isReciveToken && (\n        <p className={classes.balanceText}>\n          Balance:{' '}\n          <Loading loading={isReload} className={classes.reloadIcon}>\n            <span title={toFixed(balance, decimals)}>{toFixed(balance, decimals, 6)}</span>\n          </Loading>\n          <span style={{ float: 'right' }}>\n            Allowance:{' '}\n            <Loading loading={isReload} className={classes.reloadIcon}>\n              <span title={toFixed(allowances, decimals)}>{toFixed(allowances, decimals, 6)}</span>\n            </Loading>\n          </span>\n        </p>\n      )}\n      {!isReciveToken && isSwapSuccess && (\n        // <p className={classes.swapSuccessContainer}>\n        //   {`Swap into ${toFixed(swapInfo?.bestSwapInfo?.toTokenAmount, receiveTokenDecimals)} (done: ${done})`}\n        // </p>\n        <p className={classes.swapSuccessContainer}>{`Swap into ${toFixed(swapInfo?.bestSwapInfo?.toTokenAmount, receiveTokenDecimals)}`}</p>\n      )}\n      {!isReciveToken && isSwapError && (\n        <div className={classes.swapErrorContainer} onClick={reloadSwap}>\n          <span>Swap path fetch error</span>&nbsp;&nbsp;\n          <RefreshIcon className={classes.reloadIcon} fontSize=\"small\" />\n        </div>\n      )}\n      {!isReciveToken && isFetching && (\n        <p className={classes.swappingContainer}>\n          <Loading className={classes.reloadIcon} loading /> &nbsp;&nbsp;\n          {/* <span>{`Swap path fetching (retryTimes: ${retryTimes}, fetching: ${isSwapInfoFetching}, calling: ${isStaticCalling})`}</span> */}\n          <span>Swap path fetching</span>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default forwardRef(TokenItem)\n","import { container } from '@/assets/jss/material-kit-react.js'\n\nconst componentsStyle = () => ({\n  container,\n  main: {\n    padding: '2rem 3rem',\n    color: '#A0A0A0',\n    background: 'linear-gradient(111.68deg, #2C2F36 7.59%, #333437 102.04%)',\n    borderRadius: '2.5rem'\n  },\n  title: {\n    paddingBottom: '1.5rem',\n    fontSize: '1.5rem',\n    lineHeight: '1.5rem',\n    textAlign: 'center'\n  },\n  tokenLogo: {\n    width: 30,\n    borderRadius: '50%',\n    marginRight: 8\n  },\n  approveContainer: {\n    maxHeight: '20rem',\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0.5rem 0.5rem 0px 0px',\n    backgroundColor: '#1F2023',\n    overflowY: 'auto'\n  },\n  approveItemWrapper: {\n    paddingBottom: '0.5rem',\n    '&:last-child': {\n      padding: 0\n    }\n  },\n  success: {\n    border: '1px solid forestgreen'\n  },\n  swappingContainer: {\n    margin: 0,\n    color: '#A68EFD',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapSuccessContainer: {\n    margin: 0,\n    color: '#56CC8C',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  swapErrorContainer: {\n    height: '2rem',\n    border: '1px solid #F36767',\n    borderRadius: '0.625rem',\n    margin: 0,\n    color: '#F36767',\n    textAlign: 'center',\n    fontSize: '0.875rem',\n    lineHeight: '2rem',\n    cursor: 'pointer'\n  },\n  approveItem: {\n    textAlign: 'left',\n    display: 'flex'\n  },\n  approveButton: {\n    margin: '12px 8px 8px'\n  },\n  balanceText: {\n    textAlign: 'left',\n    fontSize: '0.875rem',\n    lineHeight: '0.875rem'\n  },\n  errorText: {\n    color: '#ff7875'\n  },\n  errorContainer: {\n    border: '1px solid #ff7875',\n    margin: '2px 0'\n  },\n  successContainer: {\n    border: '1px solid forestgreen',\n    margin: '2px 0'\n  },\n  isSwappingContainer: {\n    border: '1px solid #A68EFE',\n    margin: '2px 0'\n  },\n  reciveContainer: {\n    background: 'linear-gradient(223.3deg, #A68EFD 20.71%, #F4ACF3 103.56%)'\n  },\n  slippage: {\n    padding: '0 1.25rem',\n    border: '1px solid #A68EFD',\n    borderRadius: '0px 0px 0.5rem 0.5rem',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  slippageTitlte: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  estimateContainer: {\n    padding: '2rem 1.25rem',\n    border: '1px solid #A68EFD',\n    marginTop: '0.625rem',\n    backgroundColor: '#1F2023'\n  },\n  estimateTitle: {\n    paddingBottom: '0.75rem'\n  },\n  estimateBalance: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  tokenList: {\n    padding: '0.5rem',\n    overflow: 'auto',\n    border: '1px solid rgb(166, 142, 254)',\n    borderRadius: '0.5rem'\n  },\n  arrow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    marginTop: '0.625rem'\n  },\n  okWrapper: {\n    paddingLeft: '1rem'\n  },\n  okButton: {\n    width: '100%'\n  },\n  cancelButton: {\n    width: '100%'\n  },\n  addToken: {\n    cursor: 'pointer'\n  },\n  swapError: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '1rem',\n    color: '#ff7875',\n    textAlign: 'left'\n  },\n  textOverflow: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  loading: {\n    animation: 'loading 1s linear infinite'\n  },\n  reloadIcon: {\n    cursor: 'pointer',\n    verticalAlign: 'text-bottom'\n  }\n})\n\nexport default componentsStyle\n","/* eslint-disable */\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\n// === Components === //\r\nimport GridContainer from '@/components/Grid/GridContainer'\r\nimport GridItem from '@/components/Grid/GridItem'\r\nimport SimpleSelect from '@/components/SimpleSelect'\r\nimport Button from '@/components/CustomButtons/Button'\r\nimport CustomTextField from '@/components/CustomTextField'\r\nimport Loading from '@/components/LoadingComponent'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport CachedIcon from '@material-ui/icons/Cached'\r\nimport TokenItem from '@/components/TokenItem'\r\n\r\n// === Utils === //\r\nimport { useDispatch } from 'react-redux'\r\nimport * as ethers from 'ethers'\r\nimport get from 'lodash/get'\r\nimport map from 'lodash/map'\r\nimport some from 'lodash/some'\r\nimport size from 'lodash/size'\r\nimport uniq from 'lodash/uniq'\r\nimport first from 'lodash/first'\r\nimport isNil from 'lodash/isNil'\r\nimport every from 'lodash/every'\r\nimport assign from 'lodash/assign'\r\nimport reduce from 'lodash/reduce'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport debounce from 'lodash/debounce'\r\nimport compact from 'lodash/compact'\r\nimport find from 'lodash/find'\r\nimport findIndex from 'lodash/findIndex'\r\nimport isEqual from 'lodash/isEqual'\r\nimport isNumber from 'lodash/isNumber'\r\nimport min from 'lodash/min'\r\nimport { toFixed } from '@/helpers/number-format'\r\nimport { getBestSwapInfo } from 'piggy-finance-utils'\r\nimport BN from 'bignumber.js'\r\nimport { addToken } from '@/helpers/wallet'\r\nimport { warmDialog } from '@/reducers/meta-reducer'\r\nimport { getProtocolsFromBestRouter } from '@/helpers/swap-util'\r\nimport { errorTextOutput, isLossMuch } from '@/helpers/error-handler'\r\n\r\n// === Constants === //\r\nimport {\r\n  IERC20_ABI,\r\n  EXCHANGE_EXTRA_PARAMS,\r\n  ORACLE_ADDITIONAL_SLIPPAGE,\r\n  USDT_ADDRESS,\r\n  USDC_ADDRESS,\r\n  DAI_ADDRESS,\r\n  MULTIPLE_OF_GAS,\r\n  MAX_GAS_LIMIT\r\n} from '@/constants'\r\nimport { ETH_ADDRESS, WETH_ADDRESS } from '@/constants/tokens'\r\nimport { BN_6, BN_18 } from '@/constants/big-number'\r\n\r\n// === Styles === //\r\nimport styles from './style'\r\nimport { current } from '@reduxjs/toolkit'\r\n\r\nconst { Contract, BigNumber } = ethers\r\nconst useStyles = makeStyles(styles)\r\nlet sycIndex = 0\r\nconst MAX_RETRY_TIME = 2\r\n\r\nconst ApproveArrayV2 = props => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    isEthi,\r\n    userProvider,\r\n    tokens,\r\n    address: userAddress,\r\n    exchangeManager,\r\n    EXCHANGE_AGGREGATOR_ABI,\r\n    EXCHANGE_ADAPTER_ABI,\r\n    handleClose,\r\n    onSlippageChange\r\n  } = props\r\n\r\n  const refArray = map(tokens, () => useRef(null))\r\n  const [exchangePlatformAdapters, setExchangePlatformAdapters] = useState({})\r\n  const [receiveToken, setReceiveToken] = useState(isEthi ? ETH_ADDRESS : USDT_ADDRESS)\r\n  const [slippage, setSlippage] = useState('0.3')\r\n  const [isSwapping, setIsSwapping] = useState(false)\r\n  const [count, setCount] = useState(0)\r\n  const [callStateArray, setCallStateArray] = useState(map(tokens, () => undefined))\r\n\r\n  const swapInfoArray = map(refArray, item => get(item, 'current.swapInfo', {}))\r\n  // some tokens is fetching swap path\r\n  const someFetching = some(refArray, item => {\r\n    return get(item, 'current.isFetching')\r\n  })\r\n  // some tokens approve enough but not done\r\n  const someSwapError = () => {\r\n    return some(refArray, item => {\r\n      if (!item.current?.retryTimes) {\r\n        return false\r\n      }\r\n      return item.current.retryTimes > MAX_RETRY_TIME\r\n    })\r\n  }\r\n  // all tokens done\r\n  const allDone = () => {\r\n    return every(refArray, (item, index) => {\r\n      if (isReciveToken(index) || item.current.isEmptyValue()) {\r\n        return true\r\n      }\r\n      return get(item, 'current.done', true)\r\n    })\r\n  }\r\n  // check the receive token is current index?\r\n  const isReciveToken = index => {\r\n    return tokens[index]?.address === receiveToken\r\n  }\r\n  // check the slippage is valid or not\r\n  const isValidSlippage = () => {\r\n    if (isNaN(slippage)) return false\r\n    if (slippage < 0.01 || slippage > 45) return false\r\n    return true\r\n  }\r\n  // some error input value\r\n  const someErrorValue = some(refArray, item => {\r\n    const isErrorValue = get(item, 'current.isErrorValue')\r\n    if (typeof isErrorValue !== 'function') {\r\n      return false\r\n    }\r\n    return isErrorValue()\r\n  })\r\n\r\n  const receiveAmount = reduce(\r\n    refArray,\r\n    (rs, item) => {\r\n      if (!item.current?.swapInfo?.bestSwapInfo?.toTokenAmount) {\r\n        return rs\r\n      }\r\n      return rs.add(BigNumber.from(item.current.swapInfo.bestSwapInfo.toTokenAmount))\r\n    },\r\n    BigNumber.from(0)\r\n  )\r\n\r\n  const noNeedSwap = size(tokens) === 1 && get(first(tokens), 'address', '') === receiveToken\r\n\r\n  const getExchangePlatformAdapters = async (exchangeAggregator, userProvider) => {\r\n    const { _exchangeAdapters: adapters } = await exchangeAggregator.getExchangeAdapters()\r\n    const exchangeAdapters = {}\r\n    for (const address of adapters) {\r\n      const contract = new ethers.Contract(address, EXCHANGE_ADAPTER_ABI, userProvider)\r\n      exchangeAdapters[await contract.identifier()] = address\r\n    }\r\n    return exchangeAdapters\r\n  }\r\n\r\n  const selectOptions = isEthi\r\n    ? [\r\n        {\r\n          label: 'ETH',\r\n          value: ETH_ADDRESS,\r\n          img: `./images/${ETH_ADDRESS}.png`,\r\n          decimal: BN_18\r\n        }\r\n      ]\r\n    : [\r\n        {\r\n          label: 'USDT',\r\n          value: USDT_ADDRESS,\r\n          img: `./images/${USDT_ADDRESS}.png`,\r\n          decimal: BN_6\r\n        },\r\n        {\r\n          label: 'USDC',\r\n          value: USDC_ADDRESS,\r\n          img: `./images/${USDC_ADDRESS}.png`,\r\n          decimal: BN_6\r\n        },\r\n        {\r\n          label: 'DAI',\r\n          value: DAI_ADDRESS,\r\n          img: `./images/${DAI_ADDRESS}.png`,\r\n          decimal: BN_18\r\n        }\r\n      ]\r\n\r\n  const receiveTokenDecimals = selectOptions.find(el => el.value === receiveToken).decimal\r\n  const receiveTokenAmount = find(tokens, el => el.address === receiveToken)?.amount || '0'\r\n\r\n  const approveAll = async () => {\r\n    console.groupCollapsed('approveAll call')\r\n    try {\r\n      for (let i = 0; i < tokens.length; i++) {\r\n        console.log(`tokens[${i}] isReciveToken=`, isReciveToken(i))\r\n        if (isReciveToken(i)) continue\r\n        const enough = refArray[i].current.isApproveEnough()\r\n        console.log(`refArray[${i}] isApproveEnough=`, enough)\r\n        if (enough) continue\r\n        await refArray[i].current.approve()\r\n      }\r\n    } catch (error) {\r\n      setIsSwapping(false)\r\n      const message = errorTextOutput(error)\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message\r\n        })\r\n      )\r\n      console.groupEnd('approveAll call')\r\n      return\r\n    }\r\n    const someApproveNotEnough = some(refArray, item => {\r\n      if (!item.current) {\r\n        return false\r\n      }\r\n      return !item.current.isApproveEnough()\r\n    })\r\n    if (someApproveNotEnough) {\r\n      setIsSwapping(false)\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message: 'Allowance not enough'\r\n        })\r\n      )\r\n      return\r\n    }\r\n    console.groupEnd('approveAll call')\r\n  }\r\n\r\n  // All done, swap\r\n  const batchSwap = debounce(async () => {\r\n    console.groupCollapsed('batchSwap call')\r\n    const nextSwapArray = compact(\r\n      map(swapInfoArray, item => {\r\n        if (isEmpty(item) || item instanceof Error) return\r\n        const {\r\n          bestSwapInfo: { platform, method, encodeExchangeArgs },\r\n          info\r\n        } = item\r\n        return {\r\n          platform,\r\n          method,\r\n          data: encodeExchangeArgs,\r\n          swapDescription: info\r\n        }\r\n      })\r\n    )\r\n    console.log('nextSwapArray=', nextSwapArray)\r\n    const constract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\r\n    const signer = userProvider.getSigner()\r\n    const contractWithSigner = constract.connect(signer)\r\n\r\n    try {\r\n      let tx\r\n      // if gasLimit times not 1, need estimateGas\r\n      if (isNumber(MULTIPLE_OF_GAS) && MULTIPLE_OF_GAS !== 1) {\r\n        const gas = await contractWithSigner.estimateGas.batchSwap(nextSwapArray)\r\n        const gasLimit = Math.ceil(gas * MULTIPLE_OF_GAS)\r\n        // gasLimit not exceed maximum\r\n        const maxGasLimit = gasLimit < MAX_GAS_LIMIT ? gasLimit : MAX_GAS_LIMIT\r\n        tx = await contractWithSigner.batchSwap(nextSwapArray, {\r\n          gasLimit: maxGasLimit\r\n        })\r\n      } else {\r\n        tx = await contractWithSigner.batchSwap(nextSwapArray)\r\n      }\r\n      await tx.wait()\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'success',\r\n          message: 'Swap Success!'\r\n        })\r\n      )\r\n      handleClose()\r\n    } catch (error) {\r\n      const errorMsg = errorTextOutput(error)\r\n      let message = 'Swap Failed'\r\n      if (isLossMuch(errorMsg)) {\r\n        message = 'Swap Failed, please increase the exchange slippage'\r\n      } else if (error.code === 4001) {\r\n        message = errorMsg\r\n      }\r\n      dispatch(\r\n        warmDialog({\r\n          open: true,\r\n          type: 'error',\r\n          message\r\n        })\r\n      )\r\n      setIsSwapping(false)\r\n    }\r\n    console.groupEnd('batchSwap call')\r\n  }, 500)\r\n\r\n  const clickSwap = () => {\r\n    console.groupCollapsed('clickSwap call')\r\n    setIsSwapping(true)\r\n    if (allDone()) {\r\n      batchSwap()\r\n    } else {\r\n      approveAll()\r\n    }\r\n    console.groupEnd('clickSwap call')\r\n  }\r\n\r\n  const changeSlippage = value => {\r\n    onSlippageChange(value)\r\n  }\r\n\r\n  // when child state change, reRender component\r\n  const onChildStateChange = useCallback(() => {\r\n    // setCount(count + 1)\r\n    setCount(Math.random())\r\n  }, [])\r\n\r\n  const onStaticCallFinish = useCallback(\r\n    (index, bool) => {\r\n      console.groupCollapsed(`onStaticCallFinish call ${index} ${bool}`)\r\n      const nextArray = map(callStateArray, (item, i) => {\r\n        if (isReciveToken(i) || refArray[i].current.isEmptyValue()) {\r\n          return true\r\n        }\r\n        if (i === index) {\r\n          return bool\r\n        }\r\n        return item\r\n      })\r\n      setCallStateArray(nextArray)\r\n      console.log('nextArray', nextArray)\r\n      if (!isSwapping) {\r\n        console.log('isSwapping', isSwapping)\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      const allFinish = every(nextArray, item => item !== undefined)\r\n      if (!allFinish) {\r\n        console.log('allFinish', allFinish)\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      const someError = some(nextArray, item => item === false)\r\n      if (someError) {\r\n        console.log('someError', someError)\r\n        setIsSwapping(false)\r\n        dispatch(\r\n          warmDialog({\r\n            open: true,\r\n            type: 'error',\r\n            message: 'Swap Failed'\r\n          })\r\n        )\r\n        console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n        return\r\n      }\r\n      console.groupEnd(`onStaticCallFinish call ${index} ${bool}`)\r\n      batchSwap()\r\n    },\r\n    [callStateArray, isSwapping]\r\n  )\r\n\r\n  const onReceiveChange = v => {\r\n    if (someFetching) {\r\n      return\r\n    }\r\n    setReceiveToken(v)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAdapters() {\r\n      console.groupCollapsed(`getAdapters useEffect call:${++sycIndex}`)\r\n      const exchangeManagerContract = new Contract(exchangeManager, EXCHANGE_AGGREGATOR_ABI, userProvider)\r\n      const exchangeAdapters = await getExchangePlatformAdapters(exchangeManagerContract, userProvider)\r\n      console.log('exchangeAdapters', exchangeAdapters)\r\n      setExchangePlatformAdapters(exchangeAdapters)\r\n      console.groupEnd(`getAdapters useEffect call:${sycIndex}`)\r\n    }\r\n    getAdapters()\r\n  }, [exchangeManager])\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.title}>Swap to single token</div>\r\n      <div className={classes.approveContainer}>\r\n        <div>Swap tokens:</div>\r\n        {map(tokens, (token, index) => {\r\n          const style = {}\r\n          if (token.amount === '0' || (tokens.length > 1 && isReciveToken(index))) {\r\n            style.display = 'none'\r\n          }\r\n          return (\r\n            <TokenItem\r\n              style={style}\r\n              ref={refArray[index]}\r\n              key={`${token.address}-${receiveToken}`}\r\n              userAddress={userAddress}\r\n              userProvider={userProvider}\r\n              token={token}\r\n              slippage={slippage}\r\n              receiveToken={receiveToken}\r\n              exchangeManager={exchangeManager}\r\n              exchangePlatformAdapters={exchangePlatformAdapters}\r\n              receiveTokenDecimals={receiveTokenDecimals}\r\n              EXCHANGE_AGGREGATOR_ABI={EXCHANGE_AGGREGATOR_ABI}\r\n              disabled={isSwapping}\r\n              onChange={onChildStateChange}\r\n              onStaticCallFinish={bool => {\r\n                onStaticCallFinish(index, bool)\r\n              }}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n      <div className={classes.estimateContainer}>\r\n        <div className={classes.estimateTitle}>To receive estimated:</div>\r\n        <GridContainer>\r\n          <GridItem xs={4} sm={4} md={4}>\r\n            <SimpleSelect\r\n              options={selectOptions}\r\n              disabled={selectOptions.length <= 1 || isSwapping || someFetching}\r\n              value={receiveToken}\r\n              onChange={v => onReceiveChange(v)}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={8} sm={8} md={8} className={classes.estimateBalance}>\r\n            <Loading loading={someFetching} className={classes.reloadIcon}>\r\n              <div className={classes.textOverflow}>{toFixed(receiveAmount, receiveTokenDecimals, 6)} from token swap</div>\r\n              {receiveTokenAmount !== '0' && <div>{`+${toFixed(receiveTokenAmount, receiveTokenDecimals, 6)}`} from withdrawal</div>}\r\n            </Loading>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n      <GridContainer className={classes.slippage}>\r\n        <GridItem xs={4} sm={4} md={4} className={classes.slippageTitlte}>\r\n          Slippage tolerance:\r\n        </GridItem>\r\n        <GridItem xs={8} sm={8} md={8}>\r\n          <CustomTextField\r\n            value={slippage}\r\n            placeholder=\"Allow slippage percent\"\r\n            maxEndAdornment\r\n            disabled={isSwapping || someFetching}\r\n            onMaxClick={() => setSlippage('45')}\r\n            onChange={e => setSlippage(e.target.value)}\r\n            error={!isValidSlippage()}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer className={classes.buttonGroup}>\r\n        <GridItem xs={4} sm={4} md={4}>\r\n          <Button color=\"danger\" onClick={handleClose} className={classes.cancelButton}>\r\n            Cancel\r\n          </Button>\r\n        </GridItem>\r\n        <GridItem xs={8} sm={8} md={8} className={classes.okWrapper}>\r\n          <Button\r\n            color=\"colorfull\"\r\n            onClick={clickSwap}\r\n            disabled={noNeedSwap || someFetching || isSwapping || someSwapError() || !isValidSlippage() || receiveAmount.lte(0) || someErrorValue}\r\n            className={classes.okButton}\r\n            startIcon={isSwapping ? <CachedIcon className={classes.loading} /> : null}\r\n          >\r\n            Swap\r\n          </Button>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nApproveArrayV2.propTypes = {\r\n  address: PropTypes.string.isRequired,\r\n  exchangeManager: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ApproveArrayV2\r\n","import { useState, useEffect } from 'react'\n\n// === Utils === //\nimport * as ethers from 'ethers'\nimport isEmpty from 'lodash/isEmpty'\n\n// === Hooks === //\nimport useUserAddress from './useUserAddress'\n\n// === Constants === //\nimport { IERC20_ABI } from '@/constants'\n\nconst { Contract, BigNumber } = ethers\n\nconst useVaultOnRisk = (VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, VAULT_ADDRESS, VAULT_ABI, UNISWAPV3_RISK_ON_HELPER, userProvider) => {\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState(false)\n  const [baseInfo, setBaseInfo] = useState({})\n\n  const address = useUserAddress(userProvider)\n\n  const valid = () => {\n    if (isEmpty(VAULT_ADDRESS)) return new Error('VAULT_ADDRESS is need!')\n    if (isEmpty(VAULT_ABI)) return new Error('VAULT_ABI is need!')\n    if (isEmpty(userProvider)) return new Error('userProvider is need!')\n  }\n\n  /**\n   * query vault base info\n   * @returns\n   */\n  const queryBaseInfo = () => {\n    const error = valid()\n    if (error) return setError(error)\n    setLoading(true)\n    const vaultFactoryContract = new Contract(VAULT_FACTORY_ADDRESS, VAULT_FACTORY_ABI, userProvider)\n    vaultFactoryContract.uniswapV3RiskOnHelper().then(helperAddress => {\n      const contract = new Contract(VAULT_ADDRESS, VAULT_ABI, userProvider)\n      const helperContract = new Contract(helperAddress, UNISWAPV3_RISK_ON_HELPER, userProvider)\n      return Promise.all([\n        contract.borrowToken().then(async i => {\n          const tokenContract = new Contract(i, IERC20_ABI, userProvider)\n          return { borrowToken: i, name: await tokenContract.symbol(), borrowTokenDecimals: BigNumber.from(10).pow(await tokenContract.decimals()) }\n        }),\n        contract.wantToken().then(async i => {\n          const tokenContract = new Contract(i, IERC20_ABI, userProvider)\n          return { wantToken: i, name: await tokenContract.symbol(), wantTokenDecimals: BigNumber.from(10).pow(await tokenContract.decimals()) }\n        })\n      ])\n        .then(([borrowInfo, wantInfo]) => {\n          const { borrowToken } = borrowInfo\n          const { wantToken } = wantInfo\n          return Promise.all([\n            contract.netMarketMakingAmount(),\n            helperContract.getCurrentBorrow(borrowToken, 2, VAULT_ADDRESS),\n            helperContract.getTotalCollateralTokenAmount(VAULT_ADDRESS, wantToken),\n            contract.depositTo3rdPoolTotalAssets(),\n            contract.estimatedTotalAssets()\n          ]).then(([netMarketMakingAmount, currentBorrow, totalCollateralTokenAmount, depositTo3rdPoolTotalAssets, estimatedTotalAssets]) => {\n            return helperContract.calcCanonicalAssetValue(borrowToken, currentBorrow, wantToken).then(currentBorrowWithCanonical => {\n              const nextBaseInfo = {\n                netMarketMakingAmount,\n                currentBorrow,\n                currentBorrowWithCanonical,\n                depositTo3rdPoolTotalAssets,\n                totalCollateralTokenAmount,\n                estimatedTotalAssets,\n                wantInfo,\n                borrowInfo,\n                result: depositTo3rdPoolTotalAssets.add(totalCollateralTokenAmount).sub(netMarketMakingAmount).sub(currentBorrowWithCanonical)\n              }\n              setBaseInfo(nextBaseInfo)\n              return nextBaseInfo\n            })\n          })\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setLoading(false)\n          }, 300)\n        })\n    })\n  }\n\n  useEffect(() => {\n    const error = valid()\n    if (error) {\n      setLoading(false)\n      setError()\n      return\n    }\n    queryBaseInfo()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address, VAULT_ADDRESS, VAULT_ABI, userProvider])\n\n  return {\n    loading,\n    error,\n    baseInfo,\n    queryBaseInfo\n  }\n}\n\nexport default useVaultOnRisk\n"],"sourceRoot":""}